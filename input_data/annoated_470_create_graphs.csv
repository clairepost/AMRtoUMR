,file,sent_i,sent,ne_info,amr_prints,amr_graph,amr_head_name,amr_tail_name,amr_role,umr_head_name,umr_tail_name,umr_role,amr_head_id,umr_head_id,amr_tail_id,umr_tail_id,animacy
0,0,0,"(r4 / recommend-01
  :ARG1 (c3 / conform-01
  :ARG1 (c / circumstance
  :mod (a / all)
  :example (a2 / and
  :op1 (b2 / block-01
  :ARG1 (r2 / road)
  :ARG3 (d2 / debris))
  :op2 (o2 / obstruct-01
  :ARG0 (r / rain-01
  :manner (h / heavy))
  :ARG1 (d3 / drop-01
  :manner (p2 / parachute-01)))
  :op3 (o3 / out-02
  :ARG1 (p3 / power-01))
  :op4 (o / out-02
  :ARG1 (c2 / communicate-01))))
  :ARG2 (e / expect-01))
  :condition (d / design-01
  :ARG1 (p / program
  :purpose (s / simulate-01))
  :manner (g / good-02)))

",[],"(r4 / recommend-01
  :ARG1 (c3 / conform-01
  :ARG1 (c / circumstance
  :mod (a / all)
  :example (a2 / and
  :op1 (b2 / block-01
  :ARG1 (r2 / road)
  :ARG3 (d2 / debris))
  :op2 (o2 / obstruct-01
  :ARG0 (r / rain-01
  :manner (h / heavy))
  :ARG1 (d3 / drop-01
  :manner (p2 / parachute-01)))
  :op3 (o3 / out-02
  :ARG1 (p3 / power-01))
  :op4 (o / out-02
  :ARG1 (c2 / communicate-01))))
  :ARG2 (e / expect-01))
  :condition (d / design-01
  :ARG1 (p / program
  :purpose (s / simulate-01))
  :manner (g / good-02)))

",DiGraph with 22 nodes and 21 edges,recommend-01,design-01,:condition,recommend-01,design-01,:condition,r4_0,r4_0,d_18,d_18,inanimate
1,0,0,"(r4 / recommend-01
  :ARG1 (c3 / conform-01
  :ARG1 (c / circumstance
  :mod (a / all)
  :example (a2 / and
  :op1 (b2 / block-01
  :ARG1 (r2 / road)
  :ARG3 (d2 / debris))
  :op2 (o2 / obstruct-01
  :ARG0 (r / rain-01
  :manner (h / heavy))
  :ARG1 (d3 / drop-01
  :manner (p2 / parachute-01)))
  :op3 (o3 / out-02
  :ARG1 (p3 / power-01))
  :op4 (o / out-02
  :ARG1 (c2 / communicate-01))))
  :ARG2 (e / expect-01))
  :condition (d / design-01
  :ARG1 (p / program
  :purpose (s / simulate-01))
  :manner (g / good-02)))

",[],"(r4 / recommend-01
  :ARG1 (c3 / conform-01
  :ARG1 (c / circumstance
  :mod (a / all)
  :example (a2 / and
  :op1 (b2 / block-01
  :ARG1 (r2 / road)
  :ARG3 (d2 / debris))
  :op2 (o2 / obstruct-01
  :ARG0 (r / rain-01
  :manner (h / heavy))
  :ARG1 (d3 / drop-01
  :manner (p2 / parachute-01)))
  :op3 (o3 / out-02
  :ARG1 (p3 / power-01))
  :op4 (o / out-02
  :ARG1 (c2 / communicate-01))))
  :ARG2 (e / expect-01))
  :condition (d / design-01
  :ARG1 (p / program
  :purpose (s / simulate-01))
  :manner (g / good-02)))

",DiGraph with 22 nodes and 21 edges,recommend-01,all,:mod,recommend-01,all,:mod,r4_0,r4_0,a_3,a_3,inanimate
2,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m2_0,c2_11,c2_11,m2_0,inanimate
3,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m2_0,c2_11,c2_11,m2_0,inanimate
4,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,contingency,:mod,multi-sentence,contingency,:mod,m2_0,m2_0,c3_9,c3_9,inanimate
5,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,emergency,:mod,multi-sentence,emergency,:mod,m2_0,m2_0,e_10,e_10,inanimate
6,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m2_0,m2_0,a4_15,a4_15,inanimate
7,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m2_0,m2_0,t_45,t_45,inanimate
8,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,contingency,:mod,multi-sentence,contingency,:mod,m2_0,m2_0,c4_47,c3_9,inanimate
9,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,disaster,:mod,multi-sentence,disaster,:mod,m2_0,m2_0,d2_58,d2_58,inanimate
10,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,full,:mod,multi-sentence,full,:mod,m2_0,m2_0,f_59,f_59,inanimate
11,0,1,"(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

","[{'ORG': ""People's""}, {'ORG': 'Liberation_Army'}, {'ORG': 'Liberation'}, {'ORG': 'Army'}, {'LOC': 'Wenchu'}, {'LOC': 'County'}, {'LOC': 'Wen'}, {'ORG': 'chuan'}, {'LOC': 'Beichuan'}, {'LOC': 'Qiang'}, {'LOC': 'County'}, {'LOC': 'Beich'}, {'LOC': 'Qingchu'}, {'LOC': 'County'}, {'LOC': 'Qingchuan'}, {'LOC': 'Longnan'}, {'LOC': 'Longnan'}, {'LOC': 'Gansu'}, {'LOC': 'Gansu'}, {'B_human': 'soldier'}, {'PER': 'i'}, {'W_Animate': 'military'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'province'}]","(m2 / multi-sentence
  :snt1 (p / plan-01
  :ARG1 (p2 / plan-01
  :ARG0 (h3 / headquarters
  :poss (m3 / military :wiki ""People's_Liberation_Army"" :name (n / name :op1 ""Liberation"" :op2 ""Army"")))
  :mod (c3 / contingency
  :mod (e / emergency)))
  :ARG1-of (c2 / cause-01
  :ARG0 (a2 / and
  :op1 (r / rush-01
  :ARG0 (s2 / soldier
  :mod (a4 / all))
  :ARG2 (c6 / county :wiki ""Wenchuan_County"" :name (n6 / name :op1 ""Wenchuan""))
  :ARG1-of (s3 / straight-04))
  :op2 (s / send-03 :polarity -
  :ARG1 (t4 / troop)
  :ARG5 (a6 / and
  :op1 (c7 / city :wiki ""Beichuan_Qiang_Autonomous_County"" :name (n5 / name :op1 ""Beichuan""))
  :op2 (c8 / city :wiki ""Qingchuan_County"" :name (n4 / name :op1 ""Qingchuan""))
  :op3 (c9 / city :wiki ""Longnan"" :name (n3 / name :op1 ""Longnan"")
  :location (p3 / province :wiki ""Gansu"" :name (n2 / name :op1 ""Gansu"")))
  :ARG1-of (h / hit-01
  :ARG1-of (b / bad-05)))
  :time (i3 / immediate))))
  :time (i2 / instance
  :mod (t / this))
  :ARG1-of (o / obvious-01)
  :mod (c4 / contingency)
  :ARG1-of (d / design-01 :polarity -
  :manner (a3 / assume-02
  :ARG1 (e2 / earthquake)
  :ARG2 (t2 / thing
  :ARG2-of (c5 / condition-01))))
  :ARG1-of (i / instead-of-91))
  :snt2 (c / consider-02
  :ARG1 (e3 / extent
  :extent-of (a7 / area
  :mod (d2 / disaster))
  :mod (f / full))
  :time (a / after
  :quant (t5 / temporal-quantity :quant 24
  :unit (h2 / hour)
  :mod (o2 / only)))))

",DiGraph with 65 nodes and 64 edges,multi-sentence,only,:mod,multi-sentence,only,:mod,m2_0,m2_0,o2_64,o2_64,inanimate
12,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
13,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
14,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
15,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
16,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,have-03,:condition,result-01,have-03,:condition,r_0,r_0,h_22,h_22,inanimate
17,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,intermediate,:mod,result-01,intermediate,:mod,r_0,r_0,i_7,i_7,inanimate
18,0,2,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,petty,:mod,result-01,petty,:mod,r_0,r_0,p2_41,p2_41,inanimate
19,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
20,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
21,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
22,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
23,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,have-03,:condition,result-01,have-03,:condition,r_0,r_0,h_22,h_22,inanimate
24,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,intermediate,:mod,result-01,intermediate,:mod,r_0,r_0,i_7,i_7,inanimate
25,0,3,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,petty,:mod,result-01,petty,:mod,r_0,r_0,p2_41,p2_41,inanimate
26,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
27,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
28,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG0-of,result-01,cause-01,cause-01,r_0,c4_37,c2_27,r_0,inanimate
29,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,cause-01,:ARG1-of,result-01,cause-01,cause-01,r_0,c4_37,c4_37,r_0,inanimate
30,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,have-03,:condition,result-01,have-03,:condition,r_0,r_0,h_22,h_22,inanimate
31,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,intermediate,:mod,result-01,intermediate,:mod,r_0,r_0,i_7,i_7,inanimate
32,0,4,"(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

","[{'PER': 'i'}, {'W_Inanimate': 'thing'}, {'W_Inanimate': 'location'}]","(r / result-01
  :ARG1 (o / or
  :op1 (l / lack-01
  :ARG0 (b / between
  :op1 (t / thing :quant 2))
  :ARG1 (l2 / layer
  :mod (i / intermediate)
  :part-of (a / and
  :op1 (o2 / organization)
  :op2 (u / unit)
  :part-of (p3 / party))))
  :op2 (s / short-06
  :ARG1 b
  :ARG2 l2
  :ARG1-of (s2 / serious-02)))
  :ARG2 (p / possible-01 :polarity -
  :ARG1 (c / consider-02
  :ARG0 p3
  :ARG1 (i2 / issue-02
  :ARG1-of (m / major-02)))
  :condition (h / have-03
  :ARG1 (i3 / issue-02
  :ARG1-of (m2 / minor-01)
  :quant (e / endless))
  :location (a2 / at-hand-14)))
  :ARG0-of (c2 / cause-01
  :ARG1 (l3 / last-01 :polarity -
  :ARG1 c3
  :ARG2 (l4 / long-03
  :ARG1 c3)
  :concession (e3 / even-if
  :op1 (c3 / capable-01
  :ARG1 p3
  :degree (h2 / high-02)))
  :ARG1-of (c4 / cause-01
  :ARG0 (d / drag-01
  :ARG0 (t2 / thing
  :quant (n / numerous)
  :mod (p2 / petty))
  :ARG1 c3
  :ARG2 (d2 / down))))))

",DiGraph with 44 nodes and 43 edges,result-01,petty,:mod,result-01,petty,:mod,r_0,r_0,p2_41,p2_41,inanimate
33,0,5,"(f / foolish :polarity (a / amr-unknown)
  :domain (i / i)
  :condition (d / do-02
  :ARG0 i
  :ARG1 (t / this)))

",[{'PER': 'i'}],"(f / foolish :polarity (a / amr-unknown)
  :domain (i / i)
  :condition (d / do-02
  :ARG0 i
  :ARG1 (t / this)))

",DiGraph with 5 nodes and 4 edges,amr-unknown,do-02,:condition,amr-unknown,do-02,:condition,f_0,f_0,d_2,d_2,inanimate
34,0,6,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,go-01,:condition,sure-02,go-01,:condition,s_0,s_0,g_11,g_11,inanimate
35,0,6,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,as-long-as,:condition,sure-02,as-long-as,:condition,s_0,s_0,a_14,a_14,inanimate
36,0,6,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,this,:mod,sure-02,this,:mod,s_0,s_0,t_18,t_18,inanimate
37,0,7,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,go-01,:condition,sure-02,go-01,:condition,s_0,s_0,g_11,g_11,inanimate
38,0,7,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,as-long-as,:condition,sure-02,as-long-as,:condition,s_0,s_0,a_14,a_14,inanimate
39,0,7,"(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

","[{'LOC': 'Xinghui'}, {'PER': 'i'}, {'W_Animate': 'company'}]","(s / sure-02
  :ARG1 (h / have-03 :polarity -
  :ARG0 (c / company :wiki - :name (n / name :op1 ""Xinghui""))
  :ARG1 (w2 / way
  :instrument-of (w3 / win-01
  :ARG0 c
  :ARG2 (s3 / sue-02)))
  :condition (g / go-01
  :ARG1 s3
  :ARG4 (c2 / court)))
  :condition (a / as-long-as
  :op1 (s2 / stick-01
  :ARG1 (w / we)
  :ARG2 (i / issue-02
  :mod (t / this)))))

",DiGraph with 19 nodes and 18 edges,sure-02,this,:mod,sure-02,this,:mod,s_0,s_0,t_18,t_18,inanimate
40,0,8,"(s / sure-02
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (d / deploy-01
  :ARG0 (t2 / they)
  :ARG1 (t3 / they)))
  :manner (t / thing :polarity -
  :ARG1-of (g / guarantee-01
  :source (c / contract
  :ARG1-of (s2 / sign-02
  :ARG0 t2
  :ARG2 (w / we))))))

",[{'W_Inanimate': 'thing'}],"(s / sure-02
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (d / deploy-01
  :ARG0 (t2 / they)
  :ARG1 (t3 / they)))
  :manner (t / thing :polarity -
  :ARG1-of (g / guarantee-01
  :source (c / contract
  :ARG1-of (s2 / sign-02
  :ARG0 t2
  :ARG2 (w / we))))))

",DiGraph with 13 nodes and 12 edges,sure-02,contract,:source,sure-02,contract,:source,s_0,s_0,c_9,c_9,inanimate
41,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m_0,c2_21,c2_21,m_0,inanimate
42,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m_0,c2_21,c2_21,m_0,inanimate
43,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,else,:mod,multi-sentence,else,:mod,m_0,m_0,e_5,e_5,inanimate
44,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,usual,:mod,multi-sentence,usual,:mod,m_0,m_0,u_7,u_7,inanimate
45,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,some,:mod,multi-sentence,some,:mod,m_0,m_0,s5_26,s5_26,inanimate
46,0,9,"(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (r / reappear-01
  :ARG1 (w / word)
  :location (s / somewhere
  :mod (e / else))
  :source (s2 / someone
  :mod (u / usual :polarity -))
  :time (a / after)
  :ARG1-of (t / think-01
  :ARG0 (i / i)
  :duration (f / few
  :op1 (t2 / temporal-quantity :quant 1
  :unit (d / day))))))
  :snt2 (f2 / feel-01
  :ARG0 i
  :ARG1 (s3 / scary-03
  :ARG0 (i2 / it)
  :degree (s4 / somewhat))
  :ARG1-of (c2 / cause-01
  :ARG0 (r2 / reason
  :ARG1-of (k / know-01 :polarity -
  :ARG0 i)
  :mod (s5 / some)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,someone,:source,multi-sentence,someone,:source,m_0,m_0,s2_6,s2_6,inanimate
47,0,10,"(c / contrast-01
  :ARG2 (p / produce-01 :polarity -
  :ARG0 (g / glory
  :poss (p2 / person
  :ARG0-of (w / work-01
  :mod (e / earthquake))))
  :ARG1 (l2 / luck
  :ARG1-of (g2 / good-02))
  :ARG3 (s / spirit
  :source (c2 / county :wiki ""Wenchuan_County"" :name (n / name :op1 ""Wenchuan""))
  :ARG0-of (d / depart-01))))

","[{'MISC': 'Wenchuan'}, {'LOC': 'County'}, {'MISC': 'Wenchuan'}, {'B_human': 'person'}, {'W_Inanimate': 'county'}]","(c / contrast-01
  :ARG2 (p / produce-01 :polarity -
  :ARG0 (g / glory
  :poss (p2 / person
  :ARG0-of (w / work-01
  :mod (e / earthquake))))
  :ARG1 (l2 / luck
  :ARG1-of (g2 / good-02))
  :ARG3 (s / spirit
  :source (c2 / county :wiki ""Wenchuan_County"" :name (n / name :op1 ""Wenchuan""))
  :ARG0-of (d / depart-01))))

",DiGraph with 15 nodes and 14 edges,contrast-01,earthquake,:mod,contrast-01,earthquake,:mod,c_0,c_0,e_6,e_6,inanimate
48,0,10,"(c / contrast-01
  :ARG2 (p / produce-01 :polarity -
  :ARG0 (g / glory
  :poss (p2 / person
  :ARG0-of (w / work-01
  :mod (e / earthquake))))
  :ARG1 (l2 / luck
  :ARG1-of (g2 / good-02))
  :ARG3 (s / spirit
  :source (c2 / county :wiki ""Wenchuan_County"" :name (n / name :op1 ""Wenchuan""))
  :ARG0-of (d / depart-01))))

","[{'MISC': 'Wenchuan'}, {'LOC': 'County'}, {'MISC': 'Wenchuan'}, {'B_human': 'person'}, {'W_Inanimate': 'county'}]","(c / contrast-01
  :ARG2 (p / produce-01 :polarity -
  :ARG0 (g / glory
  :poss (p2 / person
  :ARG0-of (w / work-01
  :mod (e / earthquake))))
  :ARG1 (l2 / luck
  :ARG1-of (g2 / good-02))
  :ARG3 (s / spirit
  :source (c2 / county :wiki ""Wenchuan_County"" :name (n / name :op1 ""Wenchuan""))
  :ARG0-of (d / depart-01))))

",DiGraph with 15 nodes and 14 edges,contrast-01,county,:source,contrast-01,county,:source,c_0,c_0,c2_10,c2_10,inanimate
49,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,television,:mod,reach-01,television,:mod,r_0,r_0,t2_5,t2_5,inanimate
50,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,military,:mod,reach-01,military,:mod,r_0,r_0,m_14,m_14,inanimate
51,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,class,:mod,reach-01,class,:mod,r_0,r_0,c3_18,c3_18,inanimate
52,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,top-of-the-line,:mod,reach-01,top-of-the-line,:mod,r_0,r_0,t3_21,t3_21,inanimate
53,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,all,:mod,reach-01,all,:mod,r_0,r_0,a2_23,a2_23,inanimate
54,0,11,"(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

","[{'MISC': 'Wang'}, {'MISC': 'Shi'}, {'B_human': 'person'}, {'B_human': 'celebrity'}, {'B_human': 'person'}, {'B_human': 'entrepreneur'}, {'W_Animate': 'person'}]","(r / reach-01
  :ARG0 (t / thing)
  :ARG1 (s / step-01
  :ARG4 (o / obligate-01
  :ARG1 (s2 / station
  :mod (t2 / television)
  :poss (n / nation))
  :ARG2 (s3 / set-up-03
  :ARG0 s2
  :ARG1 (s4 / stage
  :location-of (s5 / sing-01
  :ARG0 (a / and
  :op1 (p / person
  :ARG0-of (s6 / sing-01)
  :mod (m / military)
  :poss (c2 / country))
  :op2 (p2 / person
  :ARG0-of (s7 / sing-01)
  :mod (c3 / class
  :ARG1-of (h / high-02)))
  :op3 (c / celebrity
  :mod (t3 / top-of-the-line)
  :source (w / walk
  :mod (a2 / all)
  :topic (l / life))))
  :ARG2 (f / folk
  :example (p3 / person :wiki ""Wang_Shi_(entrepreneur)"" :name (n2 / name :op1 ""Wang"" :op2 ""Shi"")))
  :purpose (d / donate-01)))))))

",DiGraph with 32 nodes and 31 edges,reach-01,walk,:source,reach-01,walk,:source,r_0,r_0,w_22,w_22,inanimate
55,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,cause-01,:ARG1-of,cause-01,cause-01,cause-01,c_0,c4_18,c4_18,c_0,animate
56,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,cause-01,:ARG1-of,cause-01,cause-01,cause-01,c_0,c4_18,c4_18,c_0,animate
57,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,professional,:mod,cause-01,professional,:mod,c_0,c_0,p3_14,p3_14,inanimate
58,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,succeed-01,:mod,cause-01,succeed-01,:mod,c_0,c_0,s2_25,s2_25,inanimate
59,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,academia,:mod,cause-01,academia,:mod,c_0,c_0,a4_29,a4_29,inanimate
60,0,12,"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",[{'PER': 'i'}],"(c / cause-01
  :ARG1 (c5 / come-04
  :ARG1 (w / we)
  :ARG2 (r / realize-01
  :ARG0 w
  :ARG1 (a / and
  :op1 (c2 / condition)
  :op2 (c3 / capital
  :ARG1-of (u2 / use-01
  :ARG2 (a2 / and
  :op1 (a3 / apply-01
  :ARG1 (f / fund-01))
  :op2 (e / evaluate-01
  :ARG1 (t2 / title
  :mod (p3 / professional)))
  :op3 (s / seek-01
  :ARG1 (r6 / remunerate-01)))))
  :domain (l / laurel
  :ARG1-of (c4 / cause-01
  :ARG0 (r4 / rate
  :ARG0-of (r5 / reach-01
  :ARG1 (a5 / almost
  :op1 (p2 / percentage-entity :value 40))
  :time (a7 / already))
  :mod (s2 / succeed-01
  :ARG1 (p / predict-01
  :ARG1 (e2 / earthquake
  :ARG1-of (i / impend-01))))))
  :mod (a4 / academia))
  :mod (j / just)
  :ARG1-of (i2 / instead-of-91
  :ARG2 (r2 / rationale
  :ARG1-of (u / use-01
  :ARG2 (r3 / reduce-01
  :ARG1 (a6 / and
  :op1 (s3 / shed-03
  :ARG1 (b / blood))
  :op2 (d / die-01))))
  :ARG1-of (h / hard-02)
  :domain l))))))

",DiGraph with 41 nodes and 40 edges,cause-01,just,:mod,cause-01,just,:mod,c_0,c_0,j_30,j_30,inanimate
61,0,13,"(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

",DiGraph with 31 nodes and 30 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c2_15,c2_15,a_0,inanimate
62,0,13,"(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

",DiGraph with 31 nodes and 30 edges,and,glass,:consist-of,and,glass,:consist-of,a_0,a_0,g_3,g_3,inanimate
63,0,13,"(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

",DiGraph with 31 nodes and 30 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c2_15,c2_15,a_0,inanimate
64,0,13,"(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

",DiGraph with 31 nodes and 30 edges,and,huge,:mod,and,huge,:mod,a_0,a_0,h_23,h_23,inanimate
65,0,13,"(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
  :op1 (r / rattle-01
  :ARG1 (w / window
  :consist-of (g / glass)
  :part-of (d / door
  :part-of (f / foyer)))
  :manner (p2 / possible-01 :polarity -
  :ARG1 (c / control-01
  :ARG1 w)))
  :op2 (b / bang-01
  :source (b2 / below)
  :ARG1-of (r2 / resemble-01
  :ARG2 (t / tractor
  :ARG0-of (s / start-up-04)))
  :ARG0-of (c2 / cause-01
  :ARG1 (s2 / shake-01
  :ARG1 (b3 / bed
  :poss p
  :topic (s3 / sick-05))
  :manner (s4 / stop-01 :polarity -
  :ARG1 b3)))
  :mod (h / huge))
  :location (l / location
  :ARG1-of (r3 / reside-01
  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))

",DiGraph with 31 nodes and 30 edges,and,below,:source,and,below,:source,a_0,a_0,b2_11,b2_11,inanimate
66,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,profession,:mod,multi-sentence,profession,:mod,m2_0,m2_0,p3_12,p3_12,inanimate
67,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,polytechnic,:mod,multi-sentence,polytechnic,:mod,m2_0,m2_0,p4_15,p4_15,inanimate
68,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,technology,:mod,multi-sentence,technology,:mod,m2_0,m2_0,t3_17,t3_17,inanimate
69,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,that,:mod,multi-sentence,that,:mod,m2_0,m2_0,t4_20,t4_20,inanimate
70,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m2_0,m2_0,a_23,a_23,inanimate
71,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m2_0,m2_0,t5_26,t5_26,inanimate
72,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m2_0,m2_0,a3_27,a_23,inanimate
73,0,14,"(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}]","(m2 / multi-sentence
  :snt1 (c / contrast-01
  :ARG2 (s / say-01 :polarity -
  :ARG1 (s2 / stop-01
  :ARG0 (t / they)
  :ARG1 (h / hire-01
  :ARG0 t
  :ARG1 (p / person)))
  :concession-of (p2 / person
  :ARG1-of (g / graduate-01)
  :poss-of (d / diploma
  :mod (p3 / profession)
  :source (a2 / and
  :op1 (s3 / school
  :mod (p4 / polytechnic))
  :op2 (c2 / college
  :mod (t3 / technology))
  :op3 (u / university)))
  :domain (p6 / person
  :mod (t4 / that)
  :ARG1-of (t2 / take-in-06
  :ARG0 t)
  :mod (a / all)))))
  :snt2 (g2 / go-02
  :ARG0 (p5 / person
  :mod (t5 / this)
  :mod (a3 / all)
  :ARG2-of (s4 / staff-01))
  :ARG4 (m / manage-01)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,and,:source,multi-sentence,and,:source,m2_0,m2_0,a2_13,a2_13,inanimate
74,0,15,"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",[{'B_human': 'person'}],"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",DiGraph with 17 nodes and 16 edges,root-02,need-01,:mod,root-02,need-01,:mod,r_0,r_0,n_3,n_3,inanimate
75,0,15,"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",[{'B_human': 'person'}],"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",DiGraph with 17 nodes and 16 edges,root-02,all,:mod,root-02,all,:mod,r_0,r_0,a2_14,a2_14,inanimate
76,0,15,"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",[{'B_human': 'person'}],"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",DiGraph with 17 nodes and 16 edges,root-02,society,:mod,root-02,society,:mod,r_0,r_0,s_15,s_15,inanimate
77,0,15,"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",[{'B_human': 'person'}],"(r / root-02
  :ARG1 (m / mentality
  :ARG1-of (c / corrupt-01)
  :mod (n / need-01
  :ARG1 (a / and
  :op1 (t / treat-02
  :ARG1 (d2 / dinner))
  :op2 (g / gift-01))
  :purpose (g3 / get-04
  :ARG1 (d3 / do-02
  :ARG1 (t3 / thing)))))
  :ARG2 (m2 / mind
  :poss (p / person
  :source (w / walk
  :mod (a2 / all)
  :mod (s / society))))
  :ARG1-of (d / deep-02))

",DiGraph with 17 nodes and 16 edges,root-02,walk,:source,root-02,walk,:source,r_0,r_0,w_13,w_13,inanimate
78,0,16,"(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

","[{'LOC': 'Urumqi'}, {'MISC': 'Han'}, {'MISC': 'Chinese'}, {'MISC': 'Han'}, {'MISC': 'Uy'}, {'LOC': 'Uygh'}, {'B_human': 'pupil'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

",DiGraph with 28 nodes and 27 edges,and,primary,:mod,and,primary,:mod,a_0,a_0,p2_6,p2_6,inanimate
79,0,16,"(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

","[{'LOC': 'Urumqi'}, {'MISC': 'Han'}, {'MISC': 'Chinese'}, {'MISC': 'Han'}, {'MISC': 'Uy'}, {'LOC': 'Uygh'}, {'B_human': 'pupil'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

",DiGraph with 28 nodes and 27 edges,and,ethnic-group,:mod,and,ethnic-group,:mod,a_0,a_0,e_13,e_13,inanimate
80,0,16,"(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

","[{'LOC': 'Urumqi'}, {'MISC': 'Han'}, {'MISC': 'Chinese'}, {'MISC': 'Han'}, {'MISC': 'Uy'}, {'LOC': 'Uygh'}, {'B_human': 'pupil'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

",DiGraph with 28 nodes and 27 edges,and,ethnic-group,:mod,and,ethnic-group,:mod,a_0,a_0,e2_20,e_13,inanimate
81,0,16,"(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

","[{'LOC': 'Urumqi'}, {'MISC': 'Han'}, {'MISC': 'Chinese'}, {'MISC': 'Han'}, {'MISC': 'Uy'}, {'LOC': 'Uygh'}, {'B_human': 'pupil'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (i / inject-01
  :ARG2 (p / pupil
  :quant (o / over :op1 200)
  :location (s / school
  :mod (p2 / primary
  :ord (o2 / ordinal-entity :value 15))
  :location (c / city :wiki ""√úr√ºmqi"" :name (n2 / name :op1 ""Urumqi"")))
  :mod (e / ethnic-group :wiki ""Han_Chinese"" :name (n / name :op1 ""Han""))))
  :op2 (i2 / involve-01
  :ARG1 (p3 / person
  :source s
  :mod (e2 / ethnic-group :wiki ""Uyghurs"" :name (n3 / name :op1 ""Uyghur""))
  :ARG0-of (s2 / study-01))
  :ARG1-of (a2 / actual-02))
  :op3 (s3 / shock-01
  :ARG0 (i3 / it)))

",DiGraph with 28 nodes and 27 edges,and,s,:source,and,s,:source,a_0,a_0,s_19,s_19,inanimate
82,0,17,"(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

","[{'ORG': 'The'}, {'ORG': 'Carpenters'}, {'ORG': 'Carpenter'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'music'}]","(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

",DiGraph with 34 nodes and 33 edges,and,photograph,:mod,and,photograph,:mod,a_0,a_0,p2_26,p2_26,inanimate
83,0,17,"(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

","[{'ORG': 'The'}, {'ORG': 'Carpenters'}, {'ORG': 'Carpenter'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'music'}]","(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

",DiGraph with 34 nodes and 33 edges,and,compatriot,:mod,and,compatriot,:mod,a_0,a_0,c3_30,c3_30,inanimate
84,0,17,"(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

","[{'ORG': 'The'}, {'ORG': 'Carpenters'}, {'ORG': 'Carpenter'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'music'}]","(a / and
  :op1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t2 / thing
  :condition-of (r2 / recommend-01
  :ARG1 (c / cry-02
  :ARG0 (p / person)))))
  :op2 (l / lose-02
  :ARG1 (h / heart
  :part-of i))
  :time (a4 / and
  :op1 (l2 / listen-01
  :ARG1 (m / music :wiki ""Yesterday_Once_More_(song)"" :name (n / name :op1 ""Yesterday"" :op2 ""Once"" :op3 ""More"")
  :source (b / band :wiki ""The_Carpenters"" :name (n2 / name :op1 ""The"" :op2 ""Carpenters""))))
  :op2 (s / see-01
  :ARG1 (a2 / album
  :mod (p2 / photograph)
  :location-of (p3 / photo
  :ARG0-of (s2 / show-01
  :ARG1 (c2 / collage
  :mod (c3 / compatriot
  :ARG0-of (r / receive-01
  :ARG1 (t / thing
  :ARG1-of (a3 / award-01)))))))))))

",DiGraph with 34 nodes and 33 edges,and,band,:source,and,band,:source,a_0,a_0,b_19,b_19,inanimate
85,0,18,"(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

",DiGraph with 26 nodes and 25 edges,and,old,:mod,and,old,:mod,a_0,a_0,o_11,o_11,inanimate
86,0,18,"(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

",DiGraph with 26 nodes and 25 edges,and,little,:mod,and,little,:mod,a_0,a_0,l3_22,l3_22,inanimate
87,0,18,"(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (m / marry-01
  :ARG1 (h / he)
  :ARG2 (p / person
  :source (c / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing""))
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend)
  :mod (o / old)
  :location (s / school))))
  :op2 (s2 / stay-01
  :ARG1 p
  :ARG3 (b / behind
  :op1 h))
  :op3 (l / live-01
  :ARG0 (a2 / and
  :op1 h
  :op2 p)
  :ARG1 (l2 / life
  :mod (l3 / little)
  :poss a2)
  :location (c2 / country)
  :manner (t / together)))

",DiGraph with 26 nodes and 25 edges,and,city,:source,and,city,:source,a_0,a_0,c_4,c_4,inanimate
88,0,19,"(h / have-concession-91
  :ARG1 (l / look-02
  :ARG0 p
  :ARG1 (v / villager
  :source (c3 / countryside))
  :ARG1-of (c / complete-02)
  :time (t / today))
  :ARG2 (a / and
  :op1 (b / bear-02
  :ARG1 (p / person :wiki ""Li_Jianguo"" :name (n2 / name :op1 ""Jianguo""))
  :location (c2 / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing"")))
  :op2 (r / raise-03
  :ARG1 p
  :location c2)))

","[{'LOC': 'Li'}, {'LOC': 'Jianguo'}, {'LOC': 'Jianguo'}, {'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'village'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}]","(h / have-concession-91
  :ARG1 (l / look-02
  :ARG0 p
  :ARG1 (v / villager
  :source (c3 / countryside))
  :ARG1-of (c / complete-02)
  :time (t / today))
  :ARG2 (a / and
  :op1 (b / bear-02
  :ARG1 (p / person :wiki ""Li_Jianguo"" :name (n2 / name :op1 ""Jianguo""))
  :location (c2 / city :wiki ""Beijing"" :name (n / name :op1 ""Beijing"")))
  :op2 (r / raise-03
  :ARG1 p
  :location c2)))

",DiGraph with 20 nodes and 19 edges,have-concession-91,countryside,:source,have-concession-91,countryside,:source,h_0,h_0,c3_4,c3_4,inanimate
89,0,20,"(s / say-01
  :ARG0 (r / report
  :source (m / media)
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (e / expect-01
  :ARG1 (r2 / reach-01
  :ARG0 (m4 / monetary-quantity
  :ARG1-of (e2 / expend-01
  :ARG0 (c2 / country :wiki ""China""
  :name (n2 / name :op1 ""China""))
  :ARG2 (m2 / military)))
  :ARG1 (m3 / monetary-quantity :quant 200000000000
  :unit (d / dollar))
  :time (a / after
  :op1 (n3 / now)
  :quant (t2 / temporal-quantity :quant 2
  :unit (y / year))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
  :ARG0 (r / report
  :source (m / media)
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (e / expect-01
  :ARG1 (r2 / reach-01
  :ARG0 (m4 / monetary-quantity
  :ARG1-of (e2 / expend-01
  :ARG0 (c2 / country :wiki ""China""
  :name (n2 / name :op1 ""China""))
  :ARG2 (m2 / military)))
  :ARG1 (m3 / monetary-quantity :quant 200000000000
  :unit (d / dollar))
  :time (a / after
  :op1 (n3 / now)
  :quant (t2 / temporal-quantity :quant 2
  :unit (y / year))))))

",DiGraph with 24 nodes and 23 edges,say-01,country,:mod,say-01,country,:mod,s_0,s_0,c_3,c_3,inanimate
90,0,20,"(s / say-01
  :ARG0 (r / report
  :source (m / media)
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (e / expect-01
  :ARG1 (r2 / reach-01
  :ARG0 (m4 / monetary-quantity
  :ARG1-of (e2 / expend-01
  :ARG0 (c2 / country :wiki ""China""
  :name (n2 / name :op1 ""China""))
  :ARG2 (m2 / military)))
  :ARG1 (m3 / monetary-quantity :quant 200000000000
  :unit (d / dollar))
  :time (a / after
  :op1 (n3 / now)
  :quant (t2 / temporal-quantity :quant 2
  :unit (y / year))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
  :ARG0 (r / report
  :source (m / media)
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (e / expect-01
  :ARG1 (r2 / reach-01
  :ARG0 (m4 / monetary-quantity
  :ARG1-of (e2 / expend-01
  :ARG0 (c2 / country :wiki ""China""
  :name (n2 / name :op1 ""China""))
  :ARG2 (m2 / military)))
  :ARG1 (m3 / monetary-quantity :quant 200000000000
  :unit (d / dollar))
  :time (a / after
  :op1 (n3 / now)
  :quant (t2 / temporal-quantity :quant 2
  :unit (y / year))))))

",DiGraph with 24 nodes and 23 edges,say-01,media,:source,say-01,media,:source,s_0,s_0,m_2,m_2,inanimate
91,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,threaten-01,:mod,contrast-01,threaten-01,:mod,c_0,c_0,t6_11,t6_11,inanimate
92,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,military,:mod,contrast-01,military,:mod,c_0,c_0,m_12,m_12,inanimate
93,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,threaten-01,:mod,contrast-01,threaten-01,:mod,c_0,c_0,t7_16,t6_11,inanimate
94,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,certain,:mod,contrast-01,certain,:mod,c_0,c_0,c4_20,c4_20,inanimate
95,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,this,:mod,contrast-01,this,:domain,c_0,c_0,t4_36,t_3,inanimate
96,0,21,"(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / contrast-01
  :ARG1 (a / and
  :op1 (v / version
  :domain (t / this)
  :ARG1-of (r / refurbish-01
  :ARG1-of (c2 / clear-06))
  :topic (t2 / theory
  :source (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))
  :mod (t6 / threaten-01
  :mod (m / military))))
  :op2 (c5 / change-01
  :ARG1 t2
  :ARG2 (t3 / theory
  :mod (t7 / threaten-01
  :ARG1 (e2 / expend-01
  :ARG2 (m3 / military))))
  :time (n3 / now))
  :mod (c4 / certain))
  :ARG2 (a2 / and
  :op1 (u / use-02
  :ARG0 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
  :ARG1 (a4 / and
  :op1 (w / wag-01
  :ARG0 c3
  :ARG1 (f / finger))
  :op2 (c7 / criticize-01
  :ARG0 c3
  :ARG1 c6)))
  :op2 (b / believe-01
  :ARG0 (p / person
  :mod (t4 / this)
  :ARG0-of (w2 / write-01))
  :ARG1 (t5 / terminate-01
  :ARG0 c3
  :ARG1 (r2 / relation-03
  :ARG0 c3
  :ARG1 (e / economy)
  :ARG2 c6
  :ARG1-of (f2 / friendly-01))
  :time (o / or
  :op1 (s / soon)
  :op2 (a3 / after
  :op1 (n / now)))
  :time (g / grow-01
  :ARG1 (c8 / confident-01
  :ARG1 c6
  :ARG1-of (i / increase-01)))))))

",DiGraph with 53 nodes and 52 edges,contrast-01,country,:source,contrast-01,country,:source,c_0,c_0,c3_7,c3_7,inanimate
97,0,22,"(a / and
  :op1 (g / greet-01
  :ARG0 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (f / friend)))
  :ARG1 (i / i)
  :ARG3 (s / smile-01
  :ARG0 p2
  :ARG2 i))
  :op2 (a2 / ask-02
  :ARG0 p2
  :ARG1 (g2 / go-02
  :ARG0 i
  :ARG4 t
  :ARG1-of (c / cause-01
  :ARG0 (m / meet-03
  :ARG0 (p / person
  :ARG0-of (l / lead-02)
  :ARG0-of (s2 / study-01))
  :location (t / tent
  :poss p2))))
  :ARG2 i))

","[{'B_human': 'person'}, {'B_human': 'friend'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (g / greet-01
  :ARG0 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (f / friend)))
  :ARG1 (i / i)
  :ARG3 (s / smile-01
  :ARG0 p2
  :ARG2 i))
  :op2 (a2 / ask-02
  :ARG0 p2
  :ARG1 (g2 / go-02
  :ARG0 i
  :ARG4 t
  :ARG1-of (c / cause-01
  :ARG0 (m / meet-03
  :ARG0 (p / person
  :ARG0-of (l / lead-02)
  :ARG0-of (s2 / study-01))
  :location (t / tent
  :poss p2))))
  :ARG2 i))

",DiGraph with 23 nodes and 22 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c_15,c_15,a_0,animate
98,0,22,"(a / and
  :op1 (g / greet-01
  :ARG0 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (f / friend)))
  :ARG1 (i / i)
  :ARG3 (s / smile-01
  :ARG0 p2
  :ARG2 i))
  :op2 (a2 / ask-02
  :ARG0 p2
  :ARG1 (g2 / go-02
  :ARG0 i
  :ARG4 t
  :ARG1-of (c / cause-01
  :ARG0 (m / meet-03
  :ARG0 (p / person
  :ARG0-of (l / lead-02)
  :ARG0-of (s2 / study-01))
  :location (t / tent
  :poss p2))))
  :ARG2 i))

","[{'B_human': 'person'}, {'B_human': 'friend'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (g / greet-01
  :ARG0 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (f / friend)))
  :ARG1 (i / i)
  :ARG3 (s / smile-01
  :ARG0 p2
  :ARG2 i))
  :op2 (a2 / ask-02
  :ARG0 p2
  :ARG1 (g2 / go-02
  :ARG0 i
  :ARG4 t
  :ARG1-of (c / cause-01
  :ARG0 (m / meet-03
  :ARG0 (p / person
  :ARG0-of (l / lead-02)
  :ARG0-of (s2 / study-01))
  :location (t / tent
  :poss p2))))
  :ARG2 i))

",DiGraph with 23 nodes and 22 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c_15,c_15,a_0,animate
99,0,23,"(a2 / ask-01
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (r / relation-03
  :ARG1 (a4 / amr-unknown)
  :ARG2 (p2 / product :wiki ""Qihoo_360""
  :name (n3 / name :op1 360))
  :ARG1-of (c / cause-01
  :ARG0 (m2 / make-01
  :ARG0 (i / individual)
  :ARG1 (t / thing :wiki -
  :name (n / name :op1 ""Chargeback"" :op2 ""Rival""))))))

","[{'MISC': 'Qi'}, {'MISC': 'o_360'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'thing'}]","(a2 / ask-01
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (r / relation-03
  :ARG1 (a4 / amr-unknown)
  :ARG2 (p2 / product :wiki ""Qihoo_360""
  :name (n3 / name :op1 360))
  :ARG1-of (c / cause-01
  :ARG0 (m2 / make-01
  :ARG0 (i / individual)
  :ARG1 (t / thing :wiki -
  :name (n / name :op1 ""Chargeback"" :op2 ""Rival""))))))

",DiGraph with 17 nodes and 16 edges,ask-01,cause-01,:ARG1-of,ask-01,cause-01,cause-01,a2_0,c_9,c_9,a2_0,inanimate
100,0,23,"(a2 / ask-01
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (r / relation-03
  :ARG1 (a4 / amr-unknown)
  :ARG2 (p2 / product :wiki ""Qihoo_360""
  :name (n3 / name :op1 360))
  :ARG1-of (c / cause-01
  :ARG0 (m2 / make-01
  :ARG0 (i / individual)
  :ARG1 (t / thing :wiki -
  :name (n / name :op1 ""Chargeback"" :op2 ""Rival""))))))

","[{'MISC': 'Qi'}, {'MISC': 'o_360'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'thing'}]","(a2 / ask-01
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (r / relation-03
  :ARG1 (a4 / amr-unknown)
  :ARG2 (p2 / product :wiki ""Qihoo_360""
  :name (n3 / name :op1 360))
  :ARG1-of (c / cause-01
  :ARG0 (m2 / make-01
  :ARG0 (i / individual)
  :ARG1 (t / thing :wiki -
  :name (n / name :op1 ""Chargeback"" :op2 ""Rival""))))))

",DiGraph with 17 nodes and 16 edges,ask-01,cause-01,:ARG1-of,ask-01,cause-01,cause-01,a2_0,c_9,c_9,a2_0,inanimate
101,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c4_28,a2_0,animate
102,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c3_40,a2_0,animate
103,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c4_28,a2_0,animate
104,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c3_40,a2_0,animate
105,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,only,:mod,and,only,:mod,a2_0,a2_0,o2_2,o2_2,inanimate
106,0,24,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,courage,:mod,and,courage,:mod,a2_0,a2_0,c_15,c_15,inanimate
107,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c4_28,a2_0,animate
108,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c3_40,a2_0,animate
109,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c4_28,a2_0,animate
110,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a2_0,c3_40,c3_40,a2_0,animate
111,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,only,:mod,and,only,:mod,a2_0,a2_0,o2_2,o2_2,inanimate
112,0,25,"(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

","[{'PER': 'Wang'}, {'PER': 'P'}, {'LOC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'go'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a2 / and
  :op1 (t2 / thing
  :mod (o2 / only :polarity -)
  :domain (t3 / that))
  :op2 (l / lead-03
  :ARG0 (t / thing
  :ARG1-of (e2 / endeavor-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG2-of (g / generous-01
  :ARG0 p2)
  :mod (c / courage))
  :ARG2 (r / revenge-00
  :ARG0 (p / person
  :ARG1-of (r2 / report-01)))
  :example (a / and
  :op1 (b / beat-up-05
  :ARG0 (g2 / goon
  :ARG1-of (h / hire-01))
  :ARG1 p2
  :manner (s / severe)
  :time (r4 / report-01
  :ARG0 p2
  :ARG1 (c2 / corruption
  :ARG1-of (c4 / cause-01
  :ARG0 (p3 / person :wiki - :name (n3 / name :op1 ""Li"" :op2 ""Rongqi""))))))
  :op2 (a3 / and
  :op1 (r3 / retaliate-01
  :ARG0 f
  :ARG1 p2)
  :op2 (h2 / hospitalize-01
  :ARG1 p2
  :ARG1-of (c3 / cause-01
  :ARG0 (i / injure-01
  :ARG0 f
  :ARG1 p2)))
  :time (r5 / report-01
  :ARG0 p2
  :ARG1 (f / force
  :ARG1-of (b2 / black-07)))))
  :frequency (o / occasion-02
  :quant (n2 / numerous))))

",DiGraph with 50 nodes and 49 edges,and,courage,:mod,and,courage,:mod,a2_0,a2_0,c_15,c_15,inanimate
113,0,26,"(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

","[{'ORG': 'China'}, {'ORG': 'University'}, {'ORG': 'of'}, {'ORG': 'Mining'}, {'ORG': 'and_Technology'}, {'LOC': 'China'}, {'ORG': 'P'}, {'MISC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

",DiGraph with 30 nodes and 29 edges,suspend-01,cause-01,:ARG1-of,suspend-01,cause-01,cause-01,s_0,c_17,c_17,s_0,animate
114,0,26,"(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

","[{'ORG': 'China'}, {'ORG': 'University'}, {'ORG': 'of'}, {'ORG': 'Mining'}, {'ORG': 'and_Technology'}, {'LOC': 'China'}, {'ORG': 'P'}, {'MISC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

",DiGraph with 30 nodes and 29 edges,suspend-01,cause-01,:ARG1-of,suspend-01,cause-01,cause-01,s_0,c_17,c_17,s_0,animate
115,0,26,"(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

","[{'ORG': 'China'}, {'ORG': 'University'}, {'ORG': 'of'}, {'ORG': 'Mining'}, {'ORG': 'and_Technology'}, {'LOC': 'China'}, {'ORG': 'P'}, {'MISC': 'Ron'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / suspend-01
  :ARG0 (u / university :wiki ""China_University_of_Mining_and_Technology""
  :name (n / name :op1 ""China's"" :op2 ""University"" :op3 ""of"" :op4 ""Mining"" :op5 ""and"" :op6 ""Technology""))
  :ARG1 (d / duty
  :mod (t / teach-01)
  :poss (p2 / person :wiki -
  :name (n2 / name :op1 ""Wang"" :op2 ""Peirong"")))
  :ARG1-of (c / cause-01
  :ARG0 (p / pressure-01
  :ARG0 (p4 / person
  :ARG0-of (h / have-org-role-91
  :ARG2 (o / official))
  :ARG1-of (r / report-01)
  :example (p3 / person :wiki -
  :name (n3 / name :op1 ""Li"" :op2 ""Rongqi"")))
  :ARG1 u
  :ARG2 s)))

",DiGraph with 30 nodes and 29 edges,suspend-01,teach-01,:mod,suspend-01,teach-01,:mod,s_0,s_0,t_11,t_11,inanimate
116,0,27,"(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

",DiGraph with 25 nodes and 24 edges,pity,country,:mod,pity,country,:mod,p_0,p_0,c_3,c_3,inanimate
117,0,27,"(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

",DiGraph with 25 nodes and 24 edges,pity,imperialism,:mod,pity,imperialism,:mod,p_0,p_0,i_15,i_15,inanimate
118,0,27,"(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

",DiGraph with 25 nodes and 24 edges,pity,still,:mod,pity,still,:mod,p_0,p_0,s_24,s_24,inanimate
119,0,27,"(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

",DiGraph with 25 nodes and 24 edges,pity,generation,:destination,pity,generation,:source,p_0,p_0,g2_23,g_22,inanimate
120,0,27,"(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / pity
  :domain (h / hope-01
  :ARG0 (p2 / person
  :mod (c / country :wiki ""China"" :name (n / name :op1 ""China""))
  :quant (m / many))
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 p2
  :ARG1 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")
  :mod (i / imperialism)))
  :op2 (m2 / maintain-01
  :ARG0 p2
  :ARG1 (h2 / have-rel-role-91
  :ARG0 p2
  :ARG1 c2
  :ARG2 (f2 / friend))
  :source (g / generation)
  :destination (g2 / generation)))
  :mod (s / still)))

",DiGraph with 25 nodes and 24 edges,pity,generation,:source,pity,generation,:source,p_0,p_0,g_22,g_22,inanimate
121,0,28,"(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'friend'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

",DiGraph with 29 nodes and 28 edges,possible-01,imperialism,:mod,possible-01,imperialism,:mod,p_0,p_0,i_7,i_7,inanimate
122,0,28,"(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'friend'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

",DiGraph with 29 nodes and 28 edges,possible-01,only,:mod,possible-01,only,:mod,p_0,p_0,o_28,o_28,inanimate
123,0,28,"(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'friend'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

",DiGraph with 29 nodes and 28 edges,possible-01,generation,:destination,possible-01,generation,:source,p_0,p_0,g2_23,g_17,inanimate
124,0,28,"(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'friend'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(p / possible-01
  :ARG1 (a / and
  :op1 (b / befriend-01
  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""America"")
  :mod (i / imperialism))
  :ARG1 (c3 / country :wiki ""China"" :name (n2 / name :op1 ""China""))
  :ARG1-of (t2 / true-01))
  :op2 (c / coexist-01
  :ARG1 c3
  :ARG2 c2
  :manner (p2 / peaceful)
  :source (g / generation)
  :manner (h2 / have-rel-role-91
  :ARG0 c2
  :ARG1 c3
  :ARG2 (f / friend)
  :ARG3 (f2 / friend))
  :destination (g2 / generation)))
  :ARG1-of (h / have-condition-91
  :ARG2 (d / do-02
  :ARG0 c2
  :ARG1 (t / this))
  :mod (o / only)))

",DiGraph with 29 nodes and 28 edges,possible-01,generation,:source,possible-01,generation,:source,p_0,p_0,g_17,g_17,inanimate
125,0,29,"(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'politician'}]","(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

",DiGraph with 27 nodes and 26 edges,multi-sentence,politician,:condition,multi-sentence,politician,:condition,m_0,m_0,p4_22,p4_22,animate
126,0,29,"(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'politician'}]","(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

",DiGraph with 27 nodes and 26 edges,multi-sentence,rural,:mod,multi-sentence,rural,:mod,m_0,m_0,r_14,r_14,inanimate
127,0,29,"(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'politician'}]","(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

",DiGraph with 27 nodes and 26 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m_0,m_0,t3_20,t3_20,inanimate
128,0,29,"(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'politician'}]","(m / multi-sentence
  :snt1 (o / originate-01
  :ARG1 (t4 / thing
  :ARG1-of (p2 / propose-01)
  :topic (t2 / transfer-01
  :ARG1 (r2 / right-05
  :ARG2 (r3 / reproduce-01))))
  :ARG2 (t / track
  :ARG1-of (s / same-01
  :ARG2 (t5 / thing
  :ARG1-of (p / propose-01)
  :topic (c / control-01
  :ARG1 (n / number-01
  :ARG1 (c2 / child
  :mod (r / rural)
  :ARG0-of (g / go-02
  :ARG4 (c3 / college)))))))))
  :snt2 (a / amr-unknown
  :domain (p3 / person
  :ARG0-of (r4 / represent-01)
  :mod (t3 / this))
  :mod (e / else)
  :condition (p4 / politician :polarity -
  :ARG0-of (d / do-02
  :ARG1 (n2 / nothing))
  :domain p3)))

",DiGraph with 27 nodes and 26 edges,multi-sentence,else,:mod,multi-sentence,else,:mod,m_0,m_0,e_21,e_21,inanimate
129,0,30,"(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

","[{'B_human': 'man'}, {'B_human': 'con'}, {'B_human': 'mistress'}, {'W_Inanimate': 'variable'}]","(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

",DiGraph with 30 nodes and 29 edges,contrast-01,cause-01,:ARG1-of,contrast-01,cause-01,cause-01,c_0,c3_13,c3_13,c_0,animate
130,0,30,"(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

","[{'B_human': 'man'}, {'B_human': 'con'}, {'B_human': 'mistress'}, {'W_Inanimate': 'variable'}]","(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

",DiGraph with 30 nodes and 29 edges,contrast-01,cause-01,:ARG1-of,contrast-01,cause-01,cause-01,c_0,c3_13,c3_13,c_0,animate
131,0,30,"(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

","[{'B_human': 'man'}, {'B_human': 'con'}, {'B_human': 'mistress'}, {'W_Inanimate': 'variable'}]","(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

",DiGraph with 30 nodes and 29 edges,contrast-01,some,:mod,contrast-01,some,:mod,c_0,c_0,s_3,s_3,inanimate
132,0,30,"(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

","[{'B_human': 'man'}, {'B_human': 'con'}, {'B_human': 'mistress'}, {'W_Inanimate': 'variable'}]","(c / contrast-01
  :ARG2 (d / desire-01
  :ARG0 (m / man
  :mod (s / some)
  :mod (r / rich))
  :ARG1 (m2 / marry-01
  :ARG1 m
  :ARG2 (c2 / concubine
  :quant (v / variable :wiki -
  :name (n / name :op1 ""N""))))
  :ARG1-of (s2 / strong-02)
  :ARG1-of (c3 / cause-01
  :ARG0 (f / fuss-01
  :ARG0 (m3 / mistress
  :poss m)
  :ARG1 (w / want-01
  :ARG0 m3
  :ARG1 (m4 / marry-01
  :ARG1 m
  :ARG2 m3))
  :frequency (o / often)))
  :concession-of (a / and
  :op1 (a2 / allow-01 :polarity -
  :ARG1 m)
  :op2 (g / guilty-01
  :ARG1 m
  :ARG2 (b / bigamy)))))

",DiGraph with 30 nodes and 29 edges,contrast-01,rich,:mod,contrast-01,rich,:mod,c_0,c_0,r_4,r_4,inanimate
133,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,cause-01,:ARG1-of,case-03,cause-01,cause-01,c2_0,c_22,c_22,c2_0,animate
134,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,cause-01,:ARG1-of,case-03,cause-01,cause-01,c2_0,c_22,c_22,c2_0,animate
135,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,get-05,:condition,case-03,get-05,:condition,c2_0,c2_0,g2_13,g2_13,inanimate
136,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,deal-01,:condition,case-03,deal-01,:condition,c2_0,c2_0,d4_19,d4_19,inanimate
137,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,suffer-01,:mod,case-03,suffer-01,:mod,c2_0,c2_0,s_7,s_7,inanimate
138,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,ordinary,:mod,case-03,ordinary,:mod,c2_0,c2_0,o2_9,o2_9,inanimate
139,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,imprison-01,:mod,case-03,imprison-01,:mod,c2_0,c2_0,i_12,i_12,inanimate
140,0,31,"(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c2 / case-03
  :location (a / across
  :op1 (c3 / country))
  :frequency (r2 / rate-entity-91
  :ARG2 (t2 / temporal-quantity :quant 1
  :unit (y / year)))
  :mod (s / suffer-01
  :ARG0 (p / person
  :mod (o2 / ordinary))
  :ARG1 (o3 / or
  :op1 (d / disaster
  :mod (i / imprison-01)
  :condition (g2 / get-05
  :ARG1 p
  :ARG2 (u / up)
  :manner (l / light-06)))
  :op2 (d2 / disaster
  :mod (d3 / die-01)
  :condition (d4 / deal-01
  :ARG2 p
  :ARG1-of (h / harsh-02))))
  :ARG1-of (c / cause-01
  :ARG0 (p2 / person
  :ARG0-of (r / report-01)
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (g / government-organization
  :ARG0-of (g3 / govern-01))
  :ARG2 (o / official))))))

",DiGraph with 29 nodes and 28 edges,case-03,die-01,:mod,case-03,die-01,:mod,c2_0,c2_0,d3_18,d3_18,inanimate
141,0,32,"(q / quote-01
  :ARG1 (t2 / thing
  :ARG1-of (f / follow-04)
  :source (p / post-01
  :ARG0 p2
  :ord (o / ordinal-entity :value 10)))
  :ARG2 (p2 / person :wiki -
  :name (n / name :op1 ""Ninth"" :op2 ""Inspiration"")))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(q / quote-01
  :ARG1 (t2 / thing
  :ARG1-of (f / follow-04)
  :source (p / post-01
  :ARG0 p2
  :ord (o / ordinal-entity :value 10)))
  :ARG2 (p2 / person :wiki -
  :name (n / name :op1 ""Ninth"" :op2 ""Inspiration"")))

",DiGraph with 12 nodes and 11 edges,quote-01,post-01,:source,quote-01,post-01,:source,q_0,q_0,p_3,p_3,inanimate
142,0,33,"(l / letter
  :source (f / family
  :ARG1-of (h / have-org-role-91
  :ARG0 (v / victim)
  :ARG2 (m / member))))

","[{'B_human': 'victim'}, {'B_human': 'member'}]","(l / letter
  :source (f / family
  :ARG1-of (h / have-org-role-91
  :ARG0 (v / victim)
  :ARG2 (m / member))))

",DiGraph with 5 nodes and 4 edges,letter,family,:source,letter,family,:source,l_0,l_0,f_1,f_1,inanimate
143,0,34,"(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

",DiGraph with 28 nodes and 27 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c2_13,c2_13,a_0,animate
144,0,34,"(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

",DiGraph with 28 nodes and 27 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c2_13,c2_13,a_0,animate
145,0,34,"(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

",DiGraph with 28 nodes and 27 edges,and,blue,:mod,and,blue,:mod,a_0,a_0,b_20,b_20,inanimate
146,0,34,"(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

","[{'LOC': 'Beijing'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (a2 / alleviate-01
  :ARG0 (r / reduce-01
  :ARG1 (c / car
  :location (r2 / road)))
  :ARG1 (p / pressure-01
  :topic (t / traffic)
  :location (r3 / road)))
  :op2 (r4 / reduce-01
  :ARG0 r
  :ARG1 (p2 / pressure-01
  :ARG0 (p3 / pollute-01
  :ARG1 (a3 / air)))
  :ARG0-of (c2 / cause-01
  :ARG1 (p4 / possible-01
  :ARG1 (c3 / cheer-02
  :ARG0 (p5 / person
  :ARG0-of (r5 / reside-01)
  :quant (m / more))
  :ARG1 (s / sky
  :mod (b / blue)
  :poss (c4 / city :wiki ""Beijing""
  :name (n / name :op1 ""Beijing"")))
  :manner (h / heart
  :part-of p5))))
  :mod (a4 / also)))

",DiGraph with 28 nodes and 27 edges,and,also,:mod,and,also,:mod,a_0,a_0,a4_27,a4_27,inanimate
147,0,35,"(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,cause-01,:ARG0-of,multi-sentence,cause-01,cause-01,m_0,c_13,c_13,m_0,animate
148,0,35,"(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,cause-01,:ARG0-of,multi-sentence,cause-01,cause-01,m_0,c_13,c_13,m_0,animate
149,0,35,"(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m_0,m_0,t_4,t_4,inanimate
150,0,35,"(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (r / recommend-01
  :ARG1 (r2 / rot-01
  :ARG1 (p / person
  :mod (t / this)
  :ARG0-of (l / learn-01 :polarity -
  :ARG1 (g / good-02
  :ARG1 p)))
  :location (h / home))
  :mod (d / damn :mode expressive))
  :snt2 (a / amr-unknown
  :ARG0-of (c / cause-01
  :ARG1 (c2 / come-01
  :ARG1 (t2 / they)
  :direction (o / out)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,damn,:mod,multi-sentence,damn,:mod,m_0,m_0,d_10,d_10,inanimate
151,0,36,"(m / multi-sentence
  :snt1 (p5 / possible-01
  :ARG1 (f / foresee-01
  :ARG1 (a / and
  :op1 (p / put-01
  :ARG0 (t / they)
  :ARG1 (h / hand
  :part-of t)
  :ARG2 (c / country
  :ARG1-of (n / neighbor-01
  :ARG2 (w2 / we))))
  :op2 (i / instigate-01
  :ARG0 t
  :ARG1 (p2 / pressure-01
  :ARG1 (c2 / country
  :poss w2)
  :source (s / side
  :mod (a2 / all)))))))
  :snt2 (c3 / claim-01 :polarity -
  :ARG0 (g / government-organization
  :ARG0-of (h2 / have-03
  :ARG1 (p3 / power))
  :ARG1-of (r / run-01
  :ARG0 (p6 / political-party :wiki ""Communist_Party_of_China""
  :name (n2 / name :op1 ""Communist"" :op2 ""Party"")))
  :ARG0-of (g3 / govern-01))
  :ARG1 (s2 / strong-02
  :ARG1 g)
  :polarity (a3 / amr-unknown))
  :snt3 (n3 / now
  :time-of (p4 / play-08
  :ARG0 (w / wise
  :domain (y2 / you)))))

","[{'ORG': 'Communist_Party_of'}, {'ORG': 'China'}, {'ORG': 'Communist'}, {'ORG': 'Party'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (p5 / possible-01
  :ARG1 (f / foresee-01
  :ARG1 (a / and
  :op1 (p / put-01
  :ARG0 (t / they)
  :ARG1 (h / hand
  :part-of t)
  :ARG2 (c / country
  :ARG1-of (n / neighbor-01
  :ARG2 (w2 / we))))
  :op2 (i / instigate-01
  :ARG0 t
  :ARG1 (p2 / pressure-01
  :ARG1 (c2 / country
  :poss w2)
  :source (s / side
  :mod (a2 / all)))))))
  :snt2 (c3 / claim-01 :polarity -
  :ARG0 (g / government-organization
  :ARG0-of (h2 / have-03
  :ARG1 (p3 / power))
  :ARG1-of (r / run-01
  :ARG0 (p6 / political-party :wiki ""Communist_Party_of_China""
  :name (n2 / name :op1 ""Communist"" :op2 ""Party"")))
  :ARG0-of (g3 / govern-01))
  :ARG1 (s2 / strong-02
  :ARG1 g)
  :polarity (a3 / amr-unknown))
  :snt3 (n3 / now
  :time-of (p4 / play-08
  :ARG0 (w / wise
  :domain (y2 / you)))))

",DiGraph with 37 nodes and 36 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m_0,m_0,a2_17,a2_17,inanimate
152,0,36,"(m / multi-sentence
  :snt1 (p5 / possible-01
  :ARG1 (f / foresee-01
  :ARG1 (a / and
  :op1 (p / put-01
  :ARG0 (t / they)
  :ARG1 (h / hand
  :part-of t)
  :ARG2 (c / country
  :ARG1-of (n / neighbor-01
  :ARG2 (w2 / we))))
  :op2 (i / instigate-01
  :ARG0 t
  :ARG1 (p2 / pressure-01
  :ARG1 (c2 / country
  :poss w2)
  :source (s / side
  :mod (a2 / all)))))))
  :snt2 (c3 / claim-01 :polarity -
  :ARG0 (g / government-organization
  :ARG0-of (h2 / have-03
  :ARG1 (p3 / power))
  :ARG1-of (r / run-01
  :ARG0 (p6 / political-party :wiki ""Communist_Party_of_China""
  :name (n2 / name :op1 ""Communist"" :op2 ""Party"")))
  :ARG0-of (g3 / govern-01))
  :ARG1 (s2 / strong-02
  :ARG1 g)
  :polarity (a3 / amr-unknown))
  :snt3 (n3 / now
  :time-of (p4 / play-08
  :ARG0 (w / wise
  :domain (y2 / you)))))

","[{'ORG': 'Communist_Party_of'}, {'ORG': 'China'}, {'ORG': 'Communist'}, {'ORG': 'Party'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (p5 / possible-01
  :ARG1 (f / foresee-01
  :ARG1 (a / and
  :op1 (p / put-01
  :ARG0 (t / they)
  :ARG1 (h / hand
  :part-of t)
  :ARG2 (c / country
  :ARG1-of (n / neighbor-01
  :ARG2 (w2 / we))))
  :op2 (i / instigate-01
  :ARG0 t
  :ARG1 (p2 / pressure-01
  :ARG1 (c2 / country
  :poss w2)
  :source (s / side
  :mod (a2 / all)))))))
  :snt2 (c3 / claim-01 :polarity -
  :ARG0 (g / government-organization
  :ARG0-of (h2 / have-03
  :ARG1 (p3 / power))
  :ARG1-of (r / run-01
  :ARG0 (p6 / political-party :wiki ""Communist_Party_of_China""
  :name (n2 / name :op1 ""Communist"" :op2 ""Party"")))
  :ARG0-of (g3 / govern-01))
  :ARG1 (s2 / strong-02
  :ARG1 g)
  :polarity (a3 / amr-unknown))
  :snt3 (n3 / now
  :time-of (p4 / play-08
  :ARG0 (w / wise
  :domain (y2 / you)))))

",DiGraph with 37 nodes and 36 edges,multi-sentence,side,:source,multi-sentence,side,:source,m_0,m_0,s_16,s_16,inanimate
153,0,37,"(s / special-02
  :ARG1 (s2 / spoonbill
  :part (f / face
  :ARG1-of (b / black-04))
  :ARG1-of (i / include-91
  :ARG2 (b2 / bird
  :mod (c / common))))
  :degree (r / rather))

","[{'B_animal': 'spoon'}, {'B_animal': 'bird'}, {'PER': 'i'}]","(s / special-02
  :ARG1 (s2 / spoonbill
  :part (f / face
  :ARG1-of (b / black-04))
  :ARG1-of (i / include-91
  :ARG2 (b2 / bird
  :mod (c / common))))
  :degree (r / rather))

",DiGraph with 8 nodes and 7 edges,special-02,face,:part,special-02,face,:part,s_0,s_0,f_2,f_2,inanimate
154,0,37,"(s / special-02
  :ARG1 (s2 / spoonbill
  :part (f / face
  :ARG1-of (b / black-04))
  :ARG1-of (i / include-91
  :ARG2 (b2 / bird
  :mod (c / common))))
  :degree (r / rather))

","[{'B_animal': 'spoon'}, {'B_animal': 'bird'}, {'PER': 'i'}]","(s / special-02
  :ARG1 (s2 / spoonbill
  :part (f / face
  :ARG1-of (b / black-04))
  :ARG1-of (i / include-91
  :ARG2 (b2 / bird
  :mod (c / common))))
  :degree (r / rather))

",DiGraph with 8 nodes and 7 edges,special-02,common,:mod,special-02,common,:mod,s_0,s_0,c_6,c_6,inanimate
155,0,38,"(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

","[{'B_animal': 'spoon'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

",DiGraph with 16 nodes and 15 edges,infer-01,cause-01,:ARG1,infer-01,cause-01,cause-01,i_0,c_1,c_1,i_0,inanimate
156,0,38,"(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

","[{'B_animal': 'spoon'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

",DiGraph with 16 nodes and 15 edges,infer-01,cause-01,:ARG1,infer-01,cause-01,cause-01,i_0,c_1,c_1,i_0,inanimate
157,0,38,"(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

","[{'B_animal': 'spoon'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

",DiGraph with 16 nodes and 15 edges,infer-01,face,:part,infer-01,face,:part,i_0,i_0,f2_8,f2_8,inanimate
158,0,38,"(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

","[{'B_animal': 'spoon'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / infer-01
  :ARG1 (c / cause-01
  :ARG0 (u / unique-01
  :ARG1 (l / logo
  :poss (p / park
  :poss (w / we))))
  :ARG1 (f / feature-01
  :ARG1 (s / spoonbill
  :part (f2 / face
  :ARG1-of (b / black-04))
  :ARG0-of (d / draw-02
  :ARG1 (a / attend-02
  :ARG0 (p3 / person))
  :ARG1-of (p4 / possible-01)
  :ARG1-of (h3 / hope-01))
  :mod (t / this)))))

",DiGraph with 16 nodes and 15 edges,infer-01,this,:mod,infer-01,this,:mod,i_0,i_0,t_15,t_15,inanimate
159,0,39,"(s / start-01
  :ARG1 (e2 / event :wiki -
  :name (n / name :op1 ""The"" :op2 ""Wonder"" :op3 ""Tour""))
  :source (c / city :wiki ""Hong_Kong""
  :name (n2 / name :op1 ""Hong"" :op2 ""Kong"")))

","[{'LOC': 'Hong_Kong'}, {'LOC': 'Hong'}, {'LOC': 'Kong'}, {'W_Inanimate': 'event'}, {'W_Inanimate': 'city'}]","(s / start-01
  :ARG1 (e2 / event :wiki -
  :name (n / name :op1 ""The"" :op2 ""Wonder"" :op3 ""Tour""))
  :source (c / city :wiki ""Hong_Kong""
  :name (n2 / name :op1 ""Hong"" :op2 ""Kong"")))

",DiGraph with 12 nodes and 11 edges,start-01,city,:source,start-01,city,:source,s_0,s_0,c_7,c_7,inanimate
160,0,40,"(s / say-01
  :ARG0 (c / company)
  :ARG1 (s2 / sell-01
  :ARG1 (c2 / cigarette :quant 9800000000 :wiki ""Kent_(cigarette)""
  :name (k / name :op1 ""Kent"")
  :part (p / product
  :ARG0-of (f / filter-02)))
  :time (d / date-interval
  :op1 (d2 / date-entity :year 1953)
  :op2 (d3 / date-entity :year 1955))))

","[{'ORG': 'Kent'}, {'ORG': 'Kent'}]","(s / say-01
  :ARG0 (c / company)
  :ARG1 (s2 / sell-01
  :ARG1 (c2 / cigarette :quant 9800000000 :wiki ""Kent_(cigarette)""
  :name (k / name :op1 ""Kent"")
  :part (p / product
  :ARG0-of (f / filter-02)))
  :time (d / date-interval
  :op1 (d2 / date-entity :year 1953)
  :op2 (d3 / date-entity :year 1955))))

",DiGraph with 15 nodes and 14 edges,say-01,product,:part,say-01,product,:part,s_0,s_0,p_8,p_8,inanimate
161,0,41,"(p / possible-01
  :ARG1 (m / make-05
  :ARG0 (c / company :wiki ""Hallmark_Cards""
  :name (n / name :op1 ""Hallmark""))
  :ARG1 (f / fortune
  :source (g / guy
  :mod (t / this)))))

","[{'MISC': 'Hallmark'}, {'MISC': 'Cards'}, {'MISC': 'Hallmark'}, {'B_human': 'guy'}, {'W_Animate': 'company'}]","(p / possible-01
  :ARG1 (m / make-05
  :ARG0 (c / company :wiki ""Hallmark_Cards""
  :name (n / name :op1 ""Hallmark""))
  :ARG1 (f / fortune
  :source (g / guy
  :mod (t / this)))))

",DiGraph with 9 nodes and 8 edges,possible-01,this,:mod,possible-01,this,:mod,p_0,p_0,t_8,t_8,inanimate
162,0,41,"(p / possible-01
  :ARG1 (m / make-05
  :ARG0 (c / company :wiki ""Hallmark_Cards""
  :name (n / name :op1 ""Hallmark""))
  :ARG1 (f / fortune
  :source (g / guy
  :mod (t / this)))))

","[{'MISC': 'Hallmark'}, {'MISC': 'Cards'}, {'MISC': 'Hallmark'}, {'B_human': 'guy'}, {'W_Animate': 'company'}]","(p / possible-01
  :ARG1 (m / make-05
  :ARG0 (c / company :wiki ""Hallmark_Cards""
  :name (n / name :op1 ""Hallmark""))
  :ARG1 (f / fortune
  :source (g / guy
  :mod (t / this)))))

",DiGraph with 9 nodes and 8 edges,possible-01,guy,:source,possible-01,guy,:source,p_0,p_0,g_7,g_7,animate
163,0,42,"(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

","[{'B_human': 'king'}, {'B_human': 'boy'}, {'PER': 'i'}]","(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

",DiGraph with 15 nodes and 14 edges,stimulate-01,boy,:mod,stimulate-01,boy,:mod,s_0,s_0,b2_13,b2_13,inanimate
164,0,42,"(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

","[{'B_human': 'king'}, {'B_human': 'boy'}, {'PER': 'i'}]","(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

",DiGraph with 15 nodes and 14 edges,stimulate-01,next,:mod,stimulate-01,next,:mod,s_0,s_0,n_14,n_14,inanimate
165,0,42,"(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

","[{'B_human': 'king'}, {'B_human': 'boy'}, {'PER': 'i'}]","(s / stimulate-01
  :ARG0 (i / it)
  :ARG1 (o / other)
  :ARG3 (c / contribute-01
  :ARG0 o
  :degree (b / big))
  :purpose (p / possible-01
  :ARG1 (p2 / participate-01
  :ARG0 o
  :ARG1 (w / wave-04
  :ARG1 (c2 / cash
  :ARG1-of (f / free-03)
  :source (k / king
  :mod (b2 / boy)))
  :mod (n / next)))))

",DiGraph with 15 nodes and 14 edges,stimulate-01,king,:source,stimulate-01,king,:source,s_0,s_0,k_12,k_12,animate
166,0,43,"(m / multi-sentence
  :snt1 (d / do-02
  :ARG0 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1 (e / everything)
  :source (b / book :wiki ""Rules_for_Radicals"" :name (n2 / name :op1 ""Rules"" :op2 ""for"" :op3 ""Radicals"")
  :poss (p2 / person :wiki ""Saul_Alinsky"" :name (n3 / name :op1 ""Alinsky"")))
  :ARG1-of (s / straight-04))
  :snt2 (i / it
  :mod (a / all)))

","[{'PER': 'Barack'}, {'PER': 'Obama'}, {'PER': 'Obama'}, {'PER': 'Saul'}, {'PER': 'Ali'}, {'PER': 'Ali'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
  :snt1 (d / do-02
  :ARG0 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1 (e / everything)
  :source (b / book :wiki ""Rules_for_Radicals"" :name (n2 / name :op1 ""Rules"" :op2 ""for"" :op3 ""Radicals"")
  :poss (p2 / person :wiki ""Saul_Alinsky"" :name (n3 / name :op1 ""Alinsky"")))
  :ARG1-of (s / straight-04))
  :snt2 (i / it
  :mod (a / all)))

",DiGraph with 20 nodes and 19 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m_0,m_0,a_19,a_19,inanimate
167,0,43,"(m / multi-sentence
  :snt1 (d / do-02
  :ARG0 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1 (e / everything)
  :source (b / book :wiki ""Rules_for_Radicals"" :name (n2 / name :op1 ""Rules"" :op2 ""for"" :op3 ""Radicals"")
  :poss (p2 / person :wiki ""Saul_Alinsky"" :name (n3 / name :op1 ""Alinsky"")))
  :ARG1-of (s / straight-04))
  :snt2 (i / it
  :mod (a / all)))

","[{'PER': 'Barack'}, {'PER': 'Obama'}, {'PER': 'Obama'}, {'PER': 'Saul'}, {'PER': 'Ali'}, {'PER': 'Ali'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
  :snt1 (d / do-02
  :ARG0 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1 (e / everything)
  :source (b / book :wiki ""Rules_for_Radicals"" :name (n2 / name :op1 ""Rules"" :op2 ""for"" :op3 ""Radicals"")
  :poss (p2 / person :wiki ""Saul_Alinsky"" :name (n3 / name :op1 ""Alinsky"")))
  :ARG1-of (s / straight-04))
  :snt2 (i / it
  :mod (a / all)))

",DiGraph with 20 nodes and 19 edges,multi-sentence,book,:source,multi-sentence,book,:source,m_0,m_0,b_7,b_7,inanimate
168,0,44,"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",[{'PER': 'i'}],"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",DiGraph with 17 nodes and 16 edges,overhear-01,have-03,:condition,overhear-01,have-03,:condition,o_0,o_0,h_8,h_8,inanimate
169,0,44,"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",[{'PER': 'i'}],"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",DiGraph with 17 nodes and 16 edges,overhear-01,this,:mod,overhear-01,this,:mod,o_0,o_0,t_16,t_16,inanimate
170,0,44,"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",[{'PER': 'i'}],"(o / overhear-01
  :ARG0 (i / i)
  :ARG1 (s / say-01
  :ARG0 (m / man)
  :ARG1 (j / jump-03
  :ARG0 m
  :direction (o3 / off)
  :source (o2 / overpass)
  :condition (h / have-03
  :ARG0 m
  :ARG1 (g / guts
  :purpose j))))
  :time (r / ride-01
  :ARG1 (b / bus)
  :time (b2 / before)
  :time (w / week
  :mod (t / this))))

",DiGraph with 17 nodes and 16 edges,overhear-01,overpass,:source,overhear-01,overpass,:source,o_0,o_0,o2_7,o2_7,inanimate
171,0,45,"(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

","[{'B_human': 'woman'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m_0,m_0,t2_6,t2_6,inanimate
172,0,45,"(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

","[{'B_human': 'woman'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,some,:mod,multi-sentence,some,:mod,m_0,m_0,s_10,s_10,inanimate
173,0,45,"(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

","[{'B_human': 'woman'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(m / multi-sentence
  :snt1 (p / possible-01
  :ARG1 (g / good-02
  :ARG1 (i / idea
  :topic (t / track-01
  :ARG1 (w / woman
  :mod (t2 / this))))))
  :snt2 (p2 / possible-01
  :ARG1 (h / helpful-04
  :ARG0 (b / basic
  :mod (s / some)
  :source (b2 / biography
  :medium (p3 / publication :wiki ""Wikipedia"" :name (n / name :op1 ""Wiki""))
  :poss w)))))

",DiGraph with 17 nodes and 16 edges,multi-sentence,biography,:source,multi-sentence,biography,:source,m_0,m_0,b2_11,b2_11,inanimate
174,0,46,"(r / require-01 :polarity -
  :ARG0 (r2 / run-01
  :ARG1 (c / country
  :example (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))))
  :ARG1 (a / advice
  :source (p / person
  :ARG1-of (e / expert-01)))
  :ARG1-of (r3 / request-confirmation-91))

","[{'LOC': 'United_States'}, {'LOC': 'U.S.'}, {'B_human': 'person'}, {'B_human': 'expert'}, {'W_Inanimate': 'country'}]","(r / require-01 :polarity -
  :ARG0 (r2 / run-01
  :ARG1 (c / country
  :example (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))))
  :ARG1 (a / advice
  :source (p / person
  :ARG1-of (e / expert-01)))
  :ARG1-of (r3 / request-confirmation-91))

",DiGraph with 11 nodes and 10 edges,require-01,person,:source,require-01,person,:source,r_0,r_0,p_8,p_8,animate
175,0,47,"(c / contrast-01
  :ARG1 (e / explain-01
  :ARG1 (a / absence
  :poss (h / he))
  :quant (m / many)
  :manner (d / differ-02
  :quant (m2 / many)))
  :ARG2 (d2 / disappear-01
  :ARG1 h
  :source (s / scene)
  :manner (v / virtual)))

",[],"(c / contrast-01
  :ARG1 (e / explain-01
  :ARG1 (a / absence
  :poss (h / he))
  :quant (m / many)
  :manner (d / differ-02
  :quant (m2 / many)))
  :ARG2 (d2 / disappear-01
  :ARG1 h
  :source (s / scene)
  :manner (v / virtual)))

",DiGraph with 11 nodes and 10 edges,contrast-01,scene,:source,contrast-01,scene,:source,c_0,c_0,s_9,s_9,inanimate
176,0,48,"(l / look-01
  :ARG1 (i / information
  :source (o / or
  :op1 (a / anyone
  :ARG0-of (h / have-03
  :ARG1 (i2 / it)))
  :op2 (s / someone
  :ARG1-of (r / recuperate-01)))))

",[{'PER': 'i'}],"(l / look-01
  :ARG1 (i / information
  :source (o / or
  :op1 (a / anyone
  :ARG0-of (h / have-03
  :ARG1 (i2 / it)))
  :op2 (s / someone
  :ARG1-of (r / recuperate-01)))))

",DiGraph with 8 nodes and 7 edges,look-01,or,:source,look-01,or,:source,l_0,l_0,o_2,o_2,inanimate
177,0,49,"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",[],"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",DiGraph with 12 nodes and 11 edges,contrast-01,good-04,:consist-of,contrast-01,good-04,:consist-of,c_0,c_0,g_5,g_5,inanimate
178,0,49,"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",[],"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",DiGraph with 12 nodes and 11 edges,contrast-01,just,:mod,contrast-01,just,:mod,c_0,c_0,j_11,j_11,inanimate
179,0,49,"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",[],"(c / contrast-01
  :ARG2 (p / possible-01
  :ARG1 (d / do-02
  :ARG0 (y / you)
  :ARG1 (w / world
  :consist-of (g / good-04))
  :ARG2 y
  :ARG3 (w2 / walk-01
  :ARG0 y
  :direction (a / away)
  :source (h / he)
  :mod (j / just)))))

",DiGraph with 12 nodes and 11 edges,contrast-01,he,:source,contrast-01,he,:source,c_0,c_0,h_10,h_10,animate
180,0,50,"(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

","[{'B_human': 'person'}, {'PER': 'i'}]","(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

",DiGraph with 12 nodes and 11 edges,smoke,cause-01,:ARG1-of,smoke,cause-01,cause-01,s_0,c_3,c_3,s_0,animate
181,0,50,"(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

","[{'B_human': 'person'}, {'PER': 'i'}]","(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

",DiGraph with 12 nodes and 11 edges,smoke,cause-01,:ARG1-of,smoke,cause-01,cause-01,s_0,c_3,c_3,s_0,animate
182,0,50,"(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

","[{'B_human': 'person'}, {'PER': 'i'}]","(s / smoke
  :ARG1-of (b / blow-01)
  :domain (i / it)
  :ARG1-of (c / cause-01
  :ARG0 (p / person
  :domain (i2 / it)
  :ARG1-of (e / end-up-03
  :ARG2 (s2 / suffer-01
  :ARG0 p
  :ARG1 (m / move-03
  :manner (s3 / such
  :mod (a / any))))))))

",DiGraph with 12 nodes and 11 edges,smoke,any,:mod,smoke,any,:mod,s_0,s_0,a_11,a_11,inanimate
183,0,51,"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",[{'PER': 'i'}],"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",DiGraph with 8 nodes and 7 edges,possibility,cause-01,:ARG1-of,possibility,cause-01,cause-01,p_0,c_2,c_2,p_0,animate
184,0,51,"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",[{'PER': 'i'}],"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",DiGraph with 8 nodes and 7 edges,possibility,cause-01,:ARG1-of,possibility,cause-01,cause-01,p_0,c_2,c_2,p_0,animate
185,0,51,"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",[{'PER': 'i'}],"(p / possibility
  :mod (d / definite)
  :ARG1-of (c / cause-01
  :ARG0 (u / unlock-01
  :ARG0 (w / we)
  :ARG1 (c2 / car)
  :frequency (a / at-times)))
  :domain (i / it))

",DiGraph with 8 nodes and 7 edges,possibility,definite,:mod,possibility,definite,:mod,p_0,p_0,d_1,d_1,inanimate
186,0,52,"(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

",DiGraph with 20 nodes and 19 edges,recommend-01,cause-01,:ARG1-of,recommend-01,cause-01,cause-01,r_0,c2_9,c2_9,r_0,animate
187,0,52,"(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

",DiGraph with 20 nodes and 19 edges,recommend-01,cause-01,:ARG1-of,recommend-01,cause-01,cause-01,r_0,c2_9,c2_9,r_0,animate
188,0,52,"(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(r / recommend-01
  :ARG1 (g / get-03 :polarity -
  :ARG1 (p2 / person
  :ARG0-of (o / oppress-01))
  :ARG2 (c / comfy
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (t / too))))
  :ARG1-of (c2 / cause-01
  :ARG0 (f / find-out-03
  :ARG0 (p3 / person
  :ARG0-of (o2 / oppress-01)
  :location (w / world
  :mod (o3 / over)))
  :ARG1 (o4 / overthrow-01
  :ARG0 (f2 / force-04
  :ARG0 (w2 / will-02
  :ARG0 (p / public)))
  :ARG1 o2))))

",DiGraph with 20 nodes and 19 edges,recommend-01,over,:mod,recommend-01,over,:mod,r_0,r_0,o3_14,o3_14,inanimate
189,0,53,"(b / be-temporally-at-91
  :ARG2 (b2 / before
  :op1 (n2 / now)
  :quant (l / long))
  :ARG0-of (c2 / cause-01
  :ARG1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (d / do-02
  :ARG0 (t3 / they)
  :ARG2 (t2 / that)
  :time (n / now))))))

",[{'PER': 'i'}],"(b / be-temporally-at-91
  :ARG2 (b2 / before
  :op1 (n2 / now)
  :quant (l / long))
  :ARG0-of (c2 / cause-01
  :ARG1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (d / do-02
  :ARG0 (t3 / they)
  :ARG2 (t2 / that)
  :time (n / now))))))

",DiGraph with 13 nodes and 12 edges,be-temporally-at-91,cause-01,:ARG0-of,be-temporally-at-91,cause-01,cause-01,b_0,c2_4,c2_4,b_0,inanimate
190,0,53,"(b / be-temporally-at-91
  :ARG2 (b2 / before
  :op1 (n2 / now)
  :quant (l / long))
  :ARG0-of (c2 / cause-01
  :ARG1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (d / do-02
  :ARG0 (t3 / they)
  :ARG2 (t2 / that)
  :time (n / now))))))

",[{'PER': 'i'}],"(b / be-temporally-at-91
  :ARG2 (b2 / before
  :op1 (n2 / now)
  :quant (l / long))
  :ARG0-of (c2 / cause-01
  :ARG1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (d / do-02
  :ARG0 (t3 / they)
  :ARG2 (t2 / that)
  :time (n / now))))))

",DiGraph with 13 nodes and 12 edges,be-temporally-at-91,cause-01,:ARG0-of,be-temporally-at-91,cause-01,cause-01,b_0,c2_4,c2_4,b_0,inanimate
191,0,54,"(d / despair-01
  :ARG0 (a / and
  :op1 (s / she)
  :op2 (i / i))
  :ARG1 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1-of (c / cause-01
  :ARG0 (r / reason
  :ARG1-of (d2 / discuss-01
  :time (a2 / already)
  :manner (w / well)
  :medium (p2 / publication :wiki ""Access_to_Knowledge_movement"" :name (n2 / name :op1 ""A2K"")))
  :topic (m / mode
  :manner-of (g / get-along-18
  :ARG1 p)))))

","[{'PER': 'Barack'}, {'PER': 'Obama'}, {'PER': 'Obama'}, {'MISC': 'Knowledge'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'publication'}]","(d / despair-01
  :ARG0 (a / and
  :op1 (s / she)
  :op2 (i / i))
  :ARG1 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1-of (c / cause-01
  :ARG0 (r / reason
  :ARG1-of (d2 / discuss-01
  :time (a2 / already)
  :manner (w / well)
  :medium (p2 / publication :wiki ""Access_to_Knowledge_movement"" :name (n2 / name :op1 ""A2K"")))
  :topic (m / mode
  :manner-of (g / get-along-18
  :ARG1 p)))))

",DiGraph with 20 nodes and 19 edges,despair-01,cause-01,:ARG1-of,despair-01,cause-01,cause-01,d_0,c_8,c_8,d_0,inanimate
192,0,54,"(d / despair-01
  :ARG0 (a / and
  :op1 (s / she)
  :op2 (i / i))
  :ARG1 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1-of (c / cause-01
  :ARG0 (r / reason
  :ARG1-of (d2 / discuss-01
  :time (a2 / already)
  :manner (w / well)
  :medium (p2 / publication :wiki ""Access_to_Knowledge_movement"" :name (n2 / name :op1 ""A2K"")))
  :topic (m / mode
  :manner-of (g / get-along-18
  :ARG1 p)))))

","[{'PER': 'Barack'}, {'PER': 'Obama'}, {'PER': 'Obama'}, {'MISC': 'Knowledge'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'publication'}]","(d / despair-01
  :ARG0 (a / and
  :op1 (s / she)
  :op2 (i / i))
  :ARG1 (p / person :wiki ""Barack_Obama"" :name (n / name :op1 ""Obama""))
  :ARG1-of (c / cause-01
  :ARG0 (r / reason
  :ARG1-of (d2 / discuss-01
  :time (a2 / already)
  :manner (w / well)
  :medium (p2 / publication :wiki ""Access_to_Knowledge_movement"" :name (n2 / name :op1 ""A2K"")))
  :topic (m / mode
  :manner-of (g / get-along-18
  :ARG1 p)))))

",DiGraph with 20 nodes and 19 edges,despair-01,cause-01,:ARG1-of,despair-01,cause-01,cause-01,d_0,c_8,c_8,d_0,inanimate
193,0,55,"(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

","[{'MISC': 'Eurofighter_Typhoon'}, {'MISC': 'Typhoon'}, {'LOC': 'Ascension_Island'}, {'LOC': 'Ascension'}, {'LOC': 'Island'}, {'LOC': 'Falkland'}, {'LOC': 'Islands'}, {'LOC': 'F'}, {'LOC': 'alkland'}, {'PER': 'i'}, {'W_Inanimate': 'island'}, {'W_Inanimate': 'island'}]","(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

",DiGraph with 18 nodes and 17 edges,prove-01,island,:destination,prove-01,island,:source,p_0,p_0,i2_13,i_8,inanimate
194,0,55,"(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

","[{'MISC': 'Eurofighter_Typhoon'}, {'MISC': 'Typhoon'}, {'LOC': 'Ascension_Island'}, {'LOC': 'Ascension'}, {'LOC': 'Island'}, {'LOC': 'Falkland'}, {'LOC': 'Islands'}, {'LOC': 'F'}, {'LOC': 'alkland'}, {'PER': 'i'}, {'W_Inanimate': 'island'}, {'W_Inanimate': 'island'}]","(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

",DiGraph with 18 nodes and 17 edges,prove-01,island,:source,prove-01,island,:source,p_0,p_0,i_8,i_8,inanimate
195,0,56,"(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

","[{'MISC': 'Eurofighter_Typhoon'}, {'MISC': 'Typhoon'}, {'LOC': 'Ascension_Island'}, {'LOC': 'Ascension'}, {'LOC': 'Island'}, {'LOC': 'Falkland'}, {'LOC': 'Islands'}, {'LOC': 'F'}, {'LOC': 'alkland'}, {'PER': 'i'}, {'W_Inanimate': 'island'}, {'W_Inanimate': 'island'}]","(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

",DiGraph with 18 nodes and 17 edges,prove-01,island,:destination,prove-01,island,:source,p_0,p_0,i2_13,i_8,inanimate
196,0,56,"(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

","[{'MISC': 'Eurofighter_Typhoon'}, {'MISC': 'Typhoon'}, {'LOC': 'Ascension_Island'}, {'LOC': 'Ascension'}, {'LOC': 'Island'}, {'LOC': 'Falkland'}, {'LOC': 'Islands'}, {'LOC': 'F'}, {'LOC': 'alkland'}, {'PER': 'i'}, {'W_Inanimate': 'island'}, {'W_Inanimate': 'island'}]","(p / prove-01
  :ARG0 (w / we)
  :ARG1 (p2 / possible-01
  :ARG1 (f / fly-01
  :ARG2 (a / aircraft-type :wiki ""Eurofighter_Typhoon"" :name (n / name :op1 ""Typhoon""))
  :source (i / island :wiki ""Ascension_Island"" :name (n2 / name :op1 ""Ascension"" :op2 ""Island""))
  :destination (i2 / island :wiki ""Falkland_Islands"" :name (n3 / name :op1 ""Falkland"" :op2 ""Islands"")))))

",DiGraph with 18 nodes and 17 edges,prove-01,island,:source,prove-01,island,:source,p_0,p_0,i_8,i_8,inanimate
197,0,57,"(r / recommend-01 :polarity (a / amr-unknown)
  :ARG1 (h / have-04
  :ARG1 (t / take-away-05
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 (s / she)
  :ARG2 (k / kid)))
  :source s)))

","[{'B_human': 'person'}, {'B_human': 'kid'}]","(r / recommend-01 :polarity (a / amr-unknown)
  :ARG1 (h / have-04
  :ARG1 (t / take-away-05
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 (s / she)
  :ARG2 (k / kid)))
  :source s)))

",DiGraph with 8 nodes and 7 edges,amr-unknown,s,:source,amr-unknown,s,:source,r_0,r_0,s_7,s_7,inanimate
198,0,58,"(m2 / multi-sentence
  :snt1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (t2 / thing
  :ARG1-of (d / do-02)
  :ARG2-of (u / upset-01 :polarity -
  :ARG1 (p3 / person
  :ARG1-of (l / liberal-02
  :part (h / heart
  :ARG1-of (b / bleed-01)))))))
  :mod (a / along
  :prep-with (s / sentence-01
  :ARG1-of (h2 / have-degree-91
  :ARG2 (t / tough-03)
  :ARG3 (m / more)))))
  :snt2 (i2 / intend-01 :polarity -
  :ARG1 (p2 / pun)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(m2 / multi-sentence
  :snt1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (t2 / thing
  :ARG1-of (d / do-02)
  :ARG2-of (u / upset-01 :polarity -
  :ARG1 (p3 / person
  :ARG1-of (l / liberal-02
  :part (h / heart
  :ARG1-of (b / bleed-01)))))))
  :mod (a / along
  :prep-with (s / sentence-01
  :ARG1-of (h2 / have-degree-91
  :ARG2 (t / tough-03)
  :ARG3 (m / more)))))
  :snt2 (i2 / intend-01 :polarity -
  :ARG1 (p2 / pun)))

",DiGraph with 21 nodes and 20 edges,multi-sentence,heart,:part,multi-sentence,heart,:part,m2_0,m2_0,h_11,h_11,inanimate
199,0,58,"(m2 / multi-sentence
  :snt1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (t2 / thing
  :ARG1-of (d / do-02)
  :ARG2-of (u / upset-01 :polarity -
  :ARG1 (p3 / person
  :ARG1-of (l / liberal-02
  :part (h / heart
  :ARG1-of (b / bleed-01)))))))
  :mod (a / along
  :prep-with (s / sentence-01
  :ARG1-of (h2 / have-degree-91
  :ARG2 (t / tough-03)
  :ARG3 (m / more)))))
  :snt2 (i2 / intend-01 :polarity -
  :ARG1 (p2 / pun)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(m2 / multi-sentence
  :snt1 (k / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (t2 / thing
  :ARG1-of (d / do-02)
  :ARG2-of (u / upset-01 :polarity -
  :ARG1 (p3 / person
  :ARG1-of (l / liberal-02
  :part (h / heart
  :ARG1-of (b / bleed-01)))))))
  :mod (a / along
  :prep-with (s / sentence-01
  :ARG1-of (h2 / have-degree-91
  :ARG2 (t / tough-03)
  :ARG3 (m / more)))))
  :snt2 (i2 / intend-01 :polarity -
  :ARG1 (p2 / pun)))

",DiGraph with 21 nodes and 20 edges,multi-sentence,along,:mod,multi-sentence,along,:mod,m2_0,m2_0,a_13,a_13,inanimate
200,0,59,"(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

","[{'B_human': 'person'}, {'B_human': 'boyfriend'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

",DiGraph with 23 nodes and 22 edges,multi-sentence,cause-01,:snt1,multi-sentence,cause-01,cause-01,m_0,c2_13,c_1,m_0,inanimate
201,0,59,"(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

","[{'B_human': 'person'}, {'B_human': 'boyfriend'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

",DiGraph with 23 nodes and 22 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m_0,c2_13,c2_13,m_0,inanimate
202,0,59,"(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

","[{'B_human': 'person'}, {'B_human': 'boyfriend'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

",DiGraph with 23 nodes and 22 edges,multi-sentence,cause-01,:snt1,multi-sentence,cause-01,cause-01,m_0,c2_13,c_1,m_0,inanimate
203,0,59,"(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

","[{'B_human': 'person'}, {'B_human': 'boyfriend'}, {'PER': 'i'}]","(m / multi-sentence
  :snt1 (c / cause-01
  :ARG0 (b / bobby
  :domain (p2 / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (b2 / boyfriend))))
  :ARG1 (o / obligate-01
  :ARG1 b2
  :ARG2 (s / stay-01
  :ARG1 b2
  :time (l / late)
  :frequency (o2 / often)
  :ARG1-of (c2 / cause-01
  :ARG0 (j / job)))))
  :snt2 (p / pass-03
  :ARG1 (s2 / several
  :op1 (t / temporal-quantity :quant 1
  :unit (h / hour)))
  :time (b3 / before
  :op1 (g / get-back-10
  :ARG1 (h2 / he)))))

",DiGraph with 23 nodes and 22 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m_0,c2_13,c2_13,m_0,inanimate
204,0,60,"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",[{'PER': 'i'}],"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",DiGraph with 13 nodes and 12 edges,have-concession-91,cause-01,:ARG1-of,have-concession-91,cause-01,cause-01,h_0,c2_5,c2_5,h_0,inanimate
205,0,60,"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",[{'PER': 'i'}],"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",DiGraph with 13 nodes and 12 edges,have-concession-91,cause-01,:ARG1-of,have-concession-91,cause-01,cause-01,h_0,c2_5,c2_5,h_0,inanimate
206,0,60,"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",[{'PER': 'i'}],"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",DiGraph with 13 nodes and 12 edges,have-concession-91,just,:mod,have-concession-91,just,:mod,h_0,h_0,j_11,j_11,inanimate
207,0,60,"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",[{'PER': 'i'}],"(h / have-concession-91
  :ARG1 (b / blame-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (y / you)
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / have-03 :polarity -
  :ARG0 y
  :ARG1 (o / opportunity
  :ARG1-of (c / come-through-18))
  :mod (j / just)
  :mod (p / probable)))))

",DiGraph with 13 nodes and 12 edges,have-concession-91,probable,:mod,have-concession-91,probable,:mod,h_0,h_0,p_12,p_12,inanimate
208,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,cause-01,:ARG1-of,say-01,cause-01,cause-01,s_0,c2_19,c2_19,s_0,inanimate
209,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,cause-01,:ARG1-of,say-01,cause-01,cause-01,s_0,c2_19,c2_19,s_0,inanimate
210,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,go-02,:condition,say-01,go-02,:condition,s_0,s_0,g_14,g_14,inanimate
211,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,nothing,:condition,say-01,nothing,:condition,s_0,s_0,n_30,n_30,inanimate
212,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,even,:mod,say-01,even,:mod,s_0,s_0,e2_6,e2_6,inanimate
213,0,61,"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",[{'PER': 'i'}],"(s / say-01
  :ARG0 (i / i)
  :ARG1 (c / chance-02
  :ARG1 (e / end-up-03
  :ARG2 (f / feel-01
  :ARG1 (s2 / sad-02
  :mod (e2 / even)
  :ARG2-of (h / have-degree-91
  :ARG1 i
  :ARG3 (m / more)
  :ARG4 (s3 / sad-02
  :ARG1 (y / you))))))
  :ARG2 (p / percentage-entity :value 90)
  :condition (g / go-02
  :ARG0 y
  :ARG4 (s4 / see-01
  :ARG0 y
  :ARG1 (s5 / she)))
  :ARG1-of (c2 / cause-01
  :ARG0 (d / die-down-02 :polarity -
  :ARG1 (t2 / thing
  :ARG1-of (f2 / feel-01))
  :mod (j / just)
  :time (a / after
  :op1 (n2 / now)
  :quant (t / temporal-quantity :quant 2
  :unit (m2 / month)))
  :condition (n / nothing :polarity -
  :time (s6 / start-01))))))

",DiGraph with 33 nodes and 32 edges,say-01,just,:mod,say-01,just,:mod,s_0,s_0,j_24,j_24,inanimate
214,0,62,"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",[{'PER': 'i'}],"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",DiGraph with 12 nodes and 11 edges,possible-01,cause-01,:ARG0-of,possible-01,cause-01,cause-01,p_0,c_7,c_7,p_0,inanimate
215,0,62,"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",[{'PER': 'i'}],"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",DiGraph with 12 nodes and 11 edges,possible-01,cause-01,:ARG0-of,possible-01,cause-01,cause-01,p_0,c_7,c_7,p_0,inanimate
216,0,62,"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",[{'PER': 'i'}],"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",DiGraph with 12 nodes and 11 edges,possible-01,this,:mod,possible-01,this,:mod,p_0,p_0,t3_5,t3_5,inanimate
217,0,62,"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",[{'PER': 'i'}],"(p / possible-01
  :ARG1 (m / mole
  :domain (t / thing
  :ARG1-of (i / include-91
  :ARG2 (t2 / thing
  :mod (t3 / this)))
  :quant (s / some)))
  :ARG0-of (c / cause-01
  :ARG1 (s3 / safe-01 :polarity -
  :ARG1 (i2 / it)
  :mod (j / just))))

",DiGraph with 12 nodes and 11 edges,possible-01,just,:mod,possible-01,just,:mod,p_0,p_0,j_11,j_11,inanimate
218,0,63,"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",[{'PER': 'i'}],"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",DiGraph with 10 nodes and 9 edges,invest-01 :mode imperative,cause-01,:ARG1-of,invest-01 :mode imperative,cause-01,cause-01,i_0,c2_6,c2_6,i_0,inanimate
219,0,63,"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",[{'PER': 'i'}],"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",DiGraph with 10 nodes and 9 edges,invest-01 :mode imperative,cause-01,:ARG1-of,invest-01 :mode imperative,cause-01,cause-01,i_0,c2_6,c2_6,i_0,inanimate
220,0,63,"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",[{'PER': 'i'}],"(i / invest-01 :mode imperative
  :ARG0 (y / you)
  :ARG2 (t / tan
  :ARG1-of (s2 / spray-01)
  :ARG1-of (f / fake-02)
  :mod (p / professional))
  :ARG1-of (c2 / cause-01
  :ARG0 (s / salon
  :quant (n / number
  :ARG1-of (i2 / increase-01)))))

",DiGraph with 10 nodes and 9 edges,invest-01 :mode imperative,professional,:mod,invest-01 :mode imperative,professional,:mod,i_0,i_0,p_5,p_5,inanimate
221,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,eye,:part,cause-01,eye,:part,c_0,c_0,e2_24,e2_24,inanimate
222,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,country,:mod,cause-01,country,:mod,c_0,c_0,c2_5,c2_5,inanimate
223,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,vague,:mod,cause-01,vague,:mod,c_0,c_0,v3_16,v3_16,inanimate
224,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,cost-01,:mod,cause-01,cost-01,:mod,c_0,c_0,c5_18,c5_18,inanimate
225,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,probable,:mod,cause-01,probable,:mod,c_0,c_0,p4_21,p4_21,inanimate
226,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,unionist,:mod,cause-01,unionist,:mod,c_0,c_0,u_23,u_23,inanimate
227,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,vocal,:mod,cause-01,vocal,:mod,c_0,c_0,v_26,v_26,inanimate
228,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,country,:mod,cause-01,country,:mod,c_0,c_0,c3_30,c2_5,inanimate
229,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,pseudocolonial,:mod,cause-01,pseudocolonial,:mod,c_0,c_0,p5_38,p5_38,inanimate
230,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,respond-01,:mod,cause-01,respond-01,:mod,c_0,c_0,r_47,r_47,inanimate
231,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,this,:mod,cause-01,this,:mod,c_0,c_0,t3_49,t3_49,inanimate
232,0,64,"(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(c / cause-01
  :ARG0 (p / possible-01
  :ARG1 (s / split-01
  :ARG0 (y / you)
  :ARG1 (p2 / public
  :mod (c2 / country :wiki ""England"" :name (n / name :op1 ""England"")))
  :ARG2 (g2 / group :quant 2
  :example (a3 / and
  :op1 (m / majority
  :ARG0-of (c4 / care-01 :polarity -
  :ARG1 (n3 / notion
  :mod (v3 / vague)
  :quant (s3 / some)
  :mod (c5 / cost-01
  :ARG1 c2
  :ARG2 (m2 / money)
  :mod (p4 / probable)))))
  :op2 (m3 / minority
  :mod (u / unionist)
  :part (e2 / eye
  :ARG1-of (s2 / swivel-01))
  :mod (v / vocal
  :degree (v2 / very))
  :beneficiary-of (m4 / mark-01
  :ARG0 (i2 / independence
  :mod (c3 / country :wiki ""Scotland"" :name (n2 / name :op1 ""Scotland"")))
  :ARG1 (b / begin-01
  :ARG1 (e / end-01
  :ARG1 (a4 / ambition
  :poss m3
  :mod (p5 / pseudocolonial)))))))))
  :concession (a2 / as-far-as
  :op1 (p3 / possible-01
  :ARG1 (t2 / tell-01
  :ARG0 i
  :ARG1 p))))
  :ARG1 (k / know-01
  :ARG0 (i / i)
  :ARG1 (k2 / kind
  :mod (r / respond-01
  :ARG1 (t / thread
  :mod (t3 / this))
  :ARG1-of (g / get-01
  :ARG0 i)))
  :time (a / already)
  :manner (d / define-01
  :mod (a5 / almost))))

",DiGraph with 55 nodes and 54 edges,cause-01,almost,:mod,cause-01,almost,:mod,c_0,c_0,a5_54,a5_54,inanimate
233,0,65,"(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

","[{'LOC': 'Norway'}, {'LOC': 'Norway'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

",DiGraph with 27 nodes and 26 edges,and,cause-01,:op1,and,cause-01,cause-01,a_0,c_1,c_1,a_0,animate
234,0,65,"(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

","[{'LOC': 'Norway'}, {'LOC': 'Norway'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

",DiGraph with 27 nodes and 26 edges,and,cause-01,:op1,and,cause-01,cause-01,a_0,c_1,c_1,a_0,animate
235,0,65,"(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

","[{'LOC': 'Norway'}, {'LOC': 'Norway'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

",DiGraph with 27 nodes and 26 edges,and,country,:mod,and,country,:mod,a_0,a_0,c2_4,c2_4,inanimate
236,0,65,"(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

","[{'LOC': 'Norway'}, {'LOC': 'Norway'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (c / cause-01
  :ARG0 (i / invade-01
  :ARG0 (p / person
  :mod (c2 / country :wiki ""Norway"" :name (n / name :op1 ""Norway""))
  :ARG0-of (s / say-01
  :ARG1 (s2 / stranger
  :domain p))))
  :ARG1 (c3 / chase-01
  :ARG1 (w / we)
  :source c2
  :time (t / then))
  :concession (l / land
  :poss w
  :domain c2
  :duration (m / multiple
  :op1 (t2 / temporal-quantity :quant 1
  :unit (c4 / century)))))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (c5 / consider-02
  :ARG1 w
  :ARG2 s2)))

",DiGraph with 27 nodes and 26 edges,and,c2,:source,and,c2,:source,a_0,a_0,c2_13,c2_13,inanimate
237,0,66,"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",[],"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",DiGraph with 18 nodes and 17 edges,and,population,:part,and,population,:part,a2_0,a2_0,p_8,p_8,inanimate
238,0,66,"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",[],"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",DiGraph with 18 nodes and 17 edges,and,skin,:mod,and,skin,:mod,a2_0,a2_0,s_7,s_7,inanimate
239,0,66,"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",[],"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",DiGraph with 18 nodes and 17 edges,and,entire,:mod,and,entire,:mod,a2_0,a2_0,e_10,e_10,inanimate
240,0,66,"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",[],"(a2 / and
  :op1 (r / resemble-01 :polarity -
  :ARG1 (t / this)
  :ARG2 (a / ask-01
  :ARG1 (r2 / recommend-01
  :ARG1 (c2 / color
  :mod (s / skin
  :part (p / population
  :poss (n / nation)
  :mod (e / entire)))
  :mod (c3 / certain))))
  :ARG1-of (c / complete-02))
  :op2 (r3 / recommend-01
  :ARG1 (r4 / relevant-01 :polarity -
  :ARG1 (c4 / color
  :domain (s2 / skin)))))

",DiGraph with 18 nodes and 17 edges,and,certain,:mod,and,certain,:mod,a2_0,a2_0,c3_11,c3_11,inanimate
241,0,67,"(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

","[{'MISC': 'Eid'}, {'MISC': 'al'}, {'MISC': 'Adha'}, {'MISC': 'Eid'}, {'LOC': 'al'}, {'LOC': 'Ad'}, {'MISC': 'ha'}, {'B_human': 'person'}, {'B_human': 'cook'}, {'W_Inanimate': 'event'}]","(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

",DiGraph with 39 nodes and 38 edges,give-away-02,event,:mod,give-away-02,event,:mod,g_0,g_0,e_3,e_3,inanimate
242,0,67,"(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

","[{'MISC': 'Eid'}, {'MISC': 'al'}, {'MISC': 'Adha'}, {'MISC': 'Eid'}, {'LOC': 'al'}, {'LOC': 'Ad'}, {'MISC': 'ha'}, {'B_human': 'person'}, {'B_human': 'cook'}, {'W_Inanimate': 'event'}]","(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

",DiGraph with 39 nodes and 38 edges,give-away-02,or,:mod,give-away-02,or,:ARG1,g_0,g_0,o3_24,o2_13,inanimate
243,0,67,"(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

","[{'MISC': 'Eid'}, {'MISC': 'al'}, {'MISC': 'Adha'}, {'MISC': 'Eid'}, {'LOC': 'al'}, {'LOC': 'Ad'}, {'MISC': 'ha'}, {'B_human': 'person'}, {'B_human': 'cook'}, {'W_Inanimate': 'event'}]","(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

",DiGraph with 39 nodes and 38 edges,give-away-02,or,:mod,give-away-02,or,:ARG1,g_0,g_0,o5_34,o2_13,inanimate
244,0,67,"(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

","[{'MISC': 'Eid'}, {'MISC': 'al'}, {'MISC': 'Adha'}, {'MISC': 'Eid'}, {'LOC': 'al'}, {'LOC': 'Ad'}, {'MISC': 'ha'}, {'B_human': 'person'}, {'B_human': 'cook'}, {'W_Inanimate': 'event'}]","(g / give-away-02
  :ARG1 (m / meat
  :source (s / sacrifice-01
  :mod (e / event :wiki ""Eid_al-Adha"" :name (n / name :op1 ""Eid"" :op2 ""al-Adha"")))
  :quant (m3 / most))
  :ARG2 (o / other)
  :concession (l / limit-01 :polarity -
  :ARG1 (p / permit-01
  :ARG1 (o2 / or
  :op1 (e2 / eat-01
  :ARG1 m)
  :op2 (g2 / give-01
  :ARG1 m
  :manner (c / charity))
  :op3 (u / use-01
  :ARG1 m
  :ARG2 (f / feed-01
  :ARG1 m
  :ARG2 (p2 / person
  :mod (o3 / or
  :op1 (p3 / poor)
  :op2 (r / rich)))))
  :op4 (h / have-concession-91
  :ARG2 (e4 / even-if
  :op1 (w / want-01
  :ARG0 (o4 / one)
  :ARG1 (g3 / give-away-02
  :ARG0 o4
  :ARG1 m
  :mod (o5 / or
  :op1 (c2 / cook-01
  :ARG1 m)
  :op2 (c3 / cook-01 :polarity -))))))))))

",DiGraph with 39 nodes and 38 edges,give-away-02,sacrifice-01,:source,give-away-02,sacrifice-01,:source,g_0,g_0,s_2,s_2,inanimate
245,0,68,"(a / and
  :op1 (c / come-01
  :ARG1 (c2 / conjecture-01
  :quant (m / many)
  :ARG2-of (i / include-01
  :ARG1 (a2 / and
  :op1 (p / product :wiki ""Nonsteroidal_anti-inflammatory_drug"" :name (n / name :op1 ""NSAID""))
  :op2 (p2 / product :wiki ""Simvastatin"" :name (n2 / name :op1 ""Simvastatin""))
  :op3 (o / oil
  :source (f / fish))))))
  :op2 (g / go-02
  :ARG0 c2))

","[{'MISC': 'Si'}, {'MISC': 'vastat'}, {'MISC': 'Si'}, {'MISC': 'tat'}, {'B_animal': 'fish'}, {'PER': 'i'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'product'}]","(a / and
  :op1 (c / come-01
  :ARG1 (c2 / conjecture-01
  :quant (m / many)
  :ARG2-of (i / include-01
  :ARG1 (a2 / and
  :op1 (p / product :wiki ""Nonsteroidal_anti-inflammatory_drug"" :name (n / name :op1 ""NSAID""))
  :op2 (p2 / product :wiki ""Simvastatin"" :name (n2 / name :op1 ""Simvastatin""))
  :op3 (o / oil
  :source (f / fish))))))
  :op2 (g / go-02
  :ARG0 c2))

",DiGraph with 18 nodes and 17 edges,and,fish,:source,and,fish,:source,a_0,a_0,f_15,f_15,animate
246,0,69,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

",DiGraph with 16 nodes and 15 edges,think-01,cause-01,:ARG0-of,think-01,cause-01,cause-01,t_0,c_7,c_7,t_0,animate
247,0,69,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

",DiGraph with 16 nodes and 15 edges,think-01,cause-01,:ARG0-of,think-01,cause-01,cause-01,t_0,c_7,c_7,t_0,animate
248,0,69,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

",DiGraph with 16 nodes and 15 edges,think-01,each,:mod,think-01,each,:mod,t_0,t_0,e_13,e_13,inanimate
249,0,69,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (u / understand-01 :polarity -
  :ARG0 (p / person
  :quant (m / many))
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (i2 / insist-01
  :ARG0 (y / you)
  :ARG1 (m2 / murder-01
  :ARG0 y
  :ARG1 (o / other
  :mod (e / each))))))
  :mod (e2 / either)
  :ARG1-of (r / real-04)))

",DiGraph with 16 nodes and 15 edges,think-01,either,:mod,think-01,either,:mod,t_0,t_0,e2_14,e2_14,inanimate
250,0,70,"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",[],"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",DiGraph with 13 nodes and 12 edges,cause-01,each,:mod,cause-01,each,:mod,c_0,c_0,e_9,e_9,inanimate
251,0,70,"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",[],"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",DiGraph with 13 nodes and 12 edges,cause-01,walk-01,:mod,cause-01,walk-01,:ARG2,c_0,c_0,w_12,w2_3,inanimate
252,0,70,"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",[],"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",DiGraph with 13 nodes and 12 edges,cause-01,r,:destination,cause-01,r,:destination,c_0,c_0,r_7,r_7,inanimate
253,0,70,"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",[],"(c / cause-01
  :ARG0 (o / obligate-01
  :ARG1 (m2 / man)
  :ARG2 (w2 / walk-01
  :source (r / rendezvous-01
  :ARG0 m
  :ARG1-of (a / assign-01))
  :destination r
  :frequency (n / night
  :mod (e / each))))
  :ARG1 (t / term-01
  :ARG1 (m / marry-01
  :mod (w / walk-01))))

",DiGraph with 13 nodes and 12 edges,cause-01,rendezvous-01,:source,cause-01,rendezvous-01,:source,c_0,c_0,r_4,r_4,inanimate
254,0,71,"(m / multi-sentence
  :snt1 (l / love-01
  :ARG0 (i / i)
  :ARG1 (a / advertise-01)
  :time (u / until
  :op1 (s / see-01
  :ARG0 i
  :ARG1 (b / benefit-01
  :ARG0 a
  :ARG1 (c / company :wiki ""Chrysler"" :name (n / name :op1 ""Chrysler""))))))
  :snt2 (s2 / slogan
  :ARG1-of (g / good-02)
  :domain (i2 / import-01
  :source (c2 / city :wiki ""Detroit"" :name (n2 / name :op1 ""Detroit"")))
  :condition (c3 / consider-01
  :ARG1 (o / own-01
  :ARG0 (c4 / company :wiki ""Fiat_S.p.A."" :name (n3 / name :op1 ""Fiat""))
  :ARG1 (t / they)))))

","[{'ORG': 'Chrysler'}, {'ORG': 'Chrysler'}, {'LOC': 'Detroit'}, {'LOC': 'Detroit'}, {'ORG': 'Fiat'}, {'ORG': 'S'}, {'ORG': 'p'}, {'ORG': 'A'}, {'ORG': 'Fiat'}, {'PER': 'i'}, {'W_Animate': 'company'}, {'W_Inanimate': 'city'}, {'W_Animate': 'company'}]","(m / multi-sentence
  :snt1 (l / love-01
  :ARG0 (i / i)
  :ARG1 (a / advertise-01)
  :time (u / until
  :op1 (s / see-01
  :ARG0 i
  :ARG1 (b / benefit-01
  :ARG0 a
  :ARG1 (c / company :wiki ""Chrysler"" :name (n / name :op1 ""Chrysler""))))))
  :snt2 (s2 / slogan
  :ARG1-of (g / good-02)
  :domain (i2 / import-01
  :source (c2 / city :wiki ""Detroit"" :name (n2 / name :op1 ""Detroit"")))
  :condition (c3 / consider-01
  :ARG1 (o / own-01
  :ARG0 (c4 / company :wiki ""Fiat_S.p.A."" :name (n3 / name :op1 ""Fiat""))
  :ARG1 (t / they)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,consider-01,:condition,multi-sentence,consider-01,:condition,m_0,m_0,c3_20,c3_20,inanimate
255,0,71,"(m / multi-sentence
  :snt1 (l / love-01
  :ARG0 (i / i)
  :ARG1 (a / advertise-01)
  :time (u / until
  :op1 (s / see-01
  :ARG0 i
  :ARG1 (b / benefit-01
  :ARG0 a
  :ARG1 (c / company :wiki ""Chrysler"" :name (n / name :op1 ""Chrysler""))))))
  :snt2 (s2 / slogan
  :ARG1-of (g / good-02)
  :domain (i2 / import-01
  :source (c2 / city :wiki ""Detroit"" :name (n2 / name :op1 ""Detroit"")))
  :condition (c3 / consider-01
  :ARG1 (o / own-01
  :ARG0 (c4 / company :wiki ""Fiat_S.p.A."" :name (n3 / name :op1 ""Fiat""))
  :ARG1 (t / they)))))

","[{'ORG': 'Chrysler'}, {'ORG': 'Chrysler'}, {'LOC': 'Detroit'}, {'LOC': 'Detroit'}, {'ORG': 'Fiat'}, {'ORG': 'S'}, {'ORG': 'p'}, {'ORG': 'A'}, {'ORG': 'Fiat'}, {'PER': 'i'}, {'W_Animate': 'company'}, {'W_Inanimate': 'city'}, {'W_Animate': 'company'}]","(m / multi-sentence
  :snt1 (l / love-01
  :ARG0 (i / i)
  :ARG1 (a / advertise-01)
  :time (u / until
  :op1 (s / see-01
  :ARG0 i
  :ARG1 (b / benefit-01
  :ARG0 a
  :ARG1 (c / company :wiki ""Chrysler"" :name (n / name :op1 ""Chrysler""))))))
  :snt2 (s2 / slogan
  :ARG1-of (g / good-02)
  :domain (i2 / import-01
  :source (c2 / city :wiki ""Detroit"" :name (n2 / name :op1 ""Detroit"")))
  :condition (c3 / consider-01
  :ARG1 (o / own-01
  :ARG0 (c4 / company :wiki ""Fiat_S.p.A."" :name (n3 / name :op1 ""Fiat""))
  :ARG1 (t / they)))))

",DiGraph with 27 nodes and 26 edges,multi-sentence,city,:source,multi-sentence,city,:source,m_0,m_0,c2_16,c2_16,inanimate
256,0,72,"(p / provide-01
  :ARG0 (i / i)
  :ARG1 (a / ammo
  :part (p2 / point
  :mod (h / hollow))
  :ARG1-of (n / nice-01))
  :ARG2 (t / they)
  :purpose (u / use-01
  :ARG0 t))

",[{'PER': 'i'}],"(p / provide-01
  :ARG0 (i / i)
  :ARG1 (a / ammo
  :part (p2 / point
  :mod (h / hollow))
  :ARG1-of (n / nice-01))
  :ARG2 (t / they)
  :purpose (u / use-01
  :ARG0 t))

",DiGraph with 9 nodes and 8 edges,provide-01,point,:part,provide-01,point,:part,p_0,p_0,p2_3,p2_3,inanimate
257,0,72,"(p / provide-01
  :ARG0 (i / i)
  :ARG1 (a / ammo
  :part (p2 / point
  :mod (h / hollow))
  :ARG1-of (n / nice-01))
  :ARG2 (t / they)
  :purpose (u / use-01
  :ARG0 t))

",[{'PER': 'i'}],"(p / provide-01
  :ARG0 (i / i)
  :ARG1 (a / ammo
  :part (p2 / point
  :mod (h / hollow))
  :ARG1-of (n / nice-01))
  :ARG2 (t / they)
  :purpose (u / use-01
  :ARG0 t))

",DiGraph with 9 nodes and 8 edges,provide-01,hollow,:mod,provide-01,hollow,:mod,p_0,p_0,h_4,h_4,inanimate
258,0,73,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c_3,e_0,animate
259,0,73,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c2_9,e_0,animate
260,0,73,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c_3,e_0,animate
261,0,73,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c2_9,e_0,animate
262,0,74,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c_3,e_0,animate
263,0,74,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c2_9,e_0,animate
264,0,74,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c_3,e_0,animate
265,0,74,"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",[{'PER': 'i'}],"(e / explain-01
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG1-of (c / cause-01
  :ARG0 (d / do-02
  :ARG0 (h / he)
  :ARG1 (t3 / thing
  :ARG1-of (d2 / do-02
  :ARG0 h))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / we)
  :degree (p / part)))))
  :ARG2 (y / you))

",DiGraph with 13 nodes and 12 edges,explain-01,cause-01,:ARG1-of,explain-01,cause-01,cause-01,e_0,c2_9,c2_9,e_0,animate
266,0,75,"(a / and
  :op1 (u / use-01 :polarity -
  :ARG0 (h / he)
  :ARG1 (i2 / it))
  :op2 (g / go-01
  :ARG1 i2
  :ARG4 (t / tip)
  :mod (p / probable)
  :condition (s / sell-01 :polarity -
  :ARG1 i2)))

",[],"(a / and
  :op1 (u / use-01 :polarity -
  :ARG0 (h / he)
  :ARG1 (i2 / it))
  :op2 (g / go-01
  :ARG1 i2
  :ARG4 (t / tip)
  :mod (p / probable)
  :condition (s / sell-01 :polarity -
  :ARG1 i2)))

",DiGraph with 12 nodes and 11 edges,and,sell-01,:condition,and,sell-01,:condition,a_0,a_0,s_9,s_9,inanimate
267,0,75,"(a / and
  :op1 (u / use-01 :polarity -
  :ARG0 (h / he)
  :ARG1 (i2 / it))
  :op2 (g / go-01
  :ARG1 i2
  :ARG4 (t / tip)
  :mod (p / probable)
  :condition (s / sell-01 :polarity -
  :ARG1 i2)))

",[],"(a / and
  :op1 (u / use-01 :polarity -
  :ARG0 (h / he)
  :ARG1 (i2 / it))
  :op2 (g / go-01
  :ARG1 i2
  :ARG4 (t / tip)
  :mod (p / probable)
  :condition (s / sell-01 :polarity -
  :ARG1 i2)))

",DiGraph with 12 nodes and 11 edges,and,probable,:mod,and,probable,:mod,a_0,a_0,p_8,p_8,inanimate
268,0,76,"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",[],"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",DiGraph with 10 nodes and 9 edges,seem-01,cause-01,:ARG1-of,seem-01,cause-01,cause-01,s_0,c_6,c_6,s_0,inanimate
269,0,76,"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",[],"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",DiGraph with 10 nodes and 9 edges,seem-01,cause-01,:ARG1-of,seem-01,cause-01,cause-01,s_0,c_6,c_6,s_0,inanimate
270,0,76,"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",[],"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",DiGraph with 10 nodes and 9 edges,seem-01,history,:mod,seem-01,history,:mod,s_0,s_0,h_5,h_5,inanimate
271,0,76,"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",[],"(s / seem-01
  :ARG1 (l / lesson
  :ARG1-of (f / forget-01)
  :quant (n / number
  :ARG1-of (i2 / increase-01))
  :mod (h / history))
  :ARG1-of (c / cause-01
  :ARG0 (g / go-01
  :ARG1 (y / year
  :mod (e / each)))))

",DiGraph with 10 nodes and 9 edges,seem-01,each,:mod,seem-01,each,:mod,s_0,s_0,e_9,e_9,inanimate
272,0,77,"(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

",DiGraph with 18 nodes and 17 edges,and,final,:mod,and,final,:mod,a_0,a_0,f_3,f_3,inanimate
273,0,77,"(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

",DiGraph with 18 nodes and 17 edges,and,sordid,:mod,and,sordid,:mod,a_0,a_0,s_6,s_6,inanimate
274,0,77,"(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

",DiGraph with 18 nodes and 17 edges,and,t,:mod,and,t,:mod,a_0,a_0,t_13,t_13,inanimate
275,0,77,"(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

",DiGraph with 18 nodes and 17 edges,and,whole,:mod,and,whole,:mod,a_0,a_0,w_14,w_14,inanimate
276,0,77,"(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (c / chapter
  :domain (t / this)
  :mod (f / final)
  :part-of (t2 / thing
  :ARG1-of (l / long-03)
  :mod (s / sordid)
  :ARG1-of (g / go-on-15
  :location (u / university
  :ARG1-of (h / have-org-role-91
  :ARG0 (i / i))))))
  :op2 (r / resemble-01
  :ARG1 (t3 / thing
  :mod t
  :mod (w / whole))
  :ARG2 (p / plot
  :source (m / movie
  :ARG1-of (b / bad-07)))))

",DiGraph with 18 nodes and 17 edges,and,movie,:source,and,movie,:source,a_0,a_0,m_16,m_16,inanimate
277,0,78,"(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

",DiGraph with 28 nodes and 27 edges,observe-01,cause-01,:ARG1-of,observe-01,cause-01,cause-01,o_0,c2_20,c2_20,o_0,inanimate
278,0,78,"(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

",DiGraph with 28 nodes and 27 edges,observe-01,cause-01,:ARG1-of,observe-01,cause-01,cause-01,o_0,c2_20,c2_20,o_0,inanimate
279,0,78,"(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

",DiGraph with 28 nodes and 27 edges,observe-01,country,:mod,observe-01,country,:mod,o_0,o_0,c_2,c_2,inanimate
280,0,78,"(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

",DiGraph with 28 nodes and 27 edges,observe-01,this,:mod,observe-01,this,:mod,o_0,o_0,t_7,t_7,inanimate
281,0,78,"(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(o / observe-01
  :ARG0 (p / person
  :mod (c / country :wiki ""Japan"" :name (n / name :op1 ""Japan"")))
  :ARG1 (d / day
  :mod (t / this))
  :manner (t2 / tell-01
  :ARG0 p
  :ARG1 (o2 / or
  :op1 (h / have-polarity-91
  :ARG1 (i / it)
  :ARG2 -
  :time (e / ever))
  :op2 (m / make-02
  :ARG0 (w / we)
  :ARG1 (a / attack-01
  :ARG0 p
  :ARG1 w)
  :ARG1-of (c2 / cause-01
  :ARG0 (g / give-01 :polarity -
  :ARG0 w
  :ARG1 (t3 / thing)
  :ARG2 p))))
  :ARG2 (e2 / everyone))
  :mod (a2 / as-well))

",DiGraph with 28 nodes and 27 edges,observe-01,as-well,:mod,observe-01,as-well,:mod,o_0,o_0,a2_27,a2_27,inanimate
282,0,79,"(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

","[{'MISC': 'USS'}, {'MISC': 'John'}, {'ORG': 'F'}, {'MISC': 'Kennedy'}, {'LOC': 'Portsmouth'}, {'LOC': 'Naval_Shipyard'}, {'W_Inanimate': 'ship'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'facility'}]","(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

",DiGraph with 40 nodes and 39 edges,have-concession-91,cause-01,:ARG1-of,have-concession-91,cause-01,cause-01,h3_0,c2_16,c2_16,h3_0,inanimate
283,0,79,"(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

","[{'MISC': 'USS'}, {'MISC': 'John'}, {'ORG': 'F'}, {'MISC': 'Kennedy'}, {'LOC': 'Portsmouth'}, {'LOC': 'Naval_Shipyard'}, {'W_Inanimate': 'ship'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'facility'}]","(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

",DiGraph with 40 nodes and 39 edges,have-concession-91,cause-01,:ARG1-of,have-concession-91,cause-01,cause-01,h3_0,c2_16,c2_16,h3_0,inanimate
284,0,79,"(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

","[{'MISC': 'USS'}, {'MISC': 'John'}, {'ORG': 'F'}, {'MISC': 'Kennedy'}, {'LOC': 'Portsmouth'}, {'LOC': 'Naval_Shipyard'}, {'W_Inanimate': 'ship'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'facility'}]","(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

",DiGraph with 40 nodes and 39 edges,have-concession-91,additional,:mod,have-concession-91,additional,:mod,h3_0,h3_0,a3_15,a3_15,inanimate
285,0,79,"(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

","[{'MISC': 'USS'}, {'MISC': 'John'}, {'ORG': 'F'}, {'MISC': 'Kennedy'}, {'LOC': 'Portsmouth'}, {'LOC': 'Naval_Shipyard'}, {'W_Inanimate': 'ship'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'facility'}]","(h3 / have-concession-91
  :ARG1 (d2 / due-03
  :ARG1 (s2 / ship :wiki ""USS_John_F._Kennedy_(CV-67)"" :name (n / name :op1 ""Carrier"" :op2 ""JFK"" :op3 ""CV67""))
  :ARG2 (a / arrive-01
  :ARG1 s2)
  :time (y / yesterday))
  :ARG2 (a2 / and
  :op1 (h / hold-off-08
  :ARG1 s2
  :duration (d / day
  :mod (a3 / additional))
  :ARG1-of (c2 / cause-01
  :ARG0 (w / wind
  :ARG1-of (h2 / high-02)
  :location (a4 / area))))
  :op2 (a5 / arrive-01
  :ARG1 s2
  :ARG4 (r2 / reserve
  :location (f2 / facility :wiki ""Portsmouth_Naval_Shipyard"" :name (n3 / name :op1 ""PNSY"")
  :time (f3 / former)
  :location-of (r / reside-01
  :ARG0 s2
  :ARG1 (m / mothball)
  :time (a6 / after
  :op1 (n4 / now)
  :duration (t2 / temporal-quantity :quant 2
  :unit (y2 / year)))))
  :mod (s3 / ship
  :ARG0-of (a7 / activity-06 :polarity -)))
  :time (t / today))))

",DiGraph with 40 nodes and 39 edges,have-concession-91,ship,:mod,have-concession-91,ship,:ARG1,h3_0,h3_0,s3_36,s2_2,inanimate
286,0,80,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG1-of,waste-01,cause-01,cause-01,w_0,c2_9,c_2,w_0,inanimate
287,0,80,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG0-of,waste-01,cause-01,cause-01,w_0,c2_9,c2_9,w_0,inanimate
288,0,80,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG1-of,waste-01,cause-01,cause-01,w_0,c2_9,c_2,w_0,inanimate
289,0,80,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG0-of,waste-01,cause-01,cause-01,w_0,c2_9,c2_9,w_0,inanimate
290,0,81,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG1-of,waste-01,cause-01,cause-01,w_0,c2_9,c_2,w_0,inanimate
291,0,81,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG0-of,waste-01,cause-01,cause-01,w_0,c2_9,c2_9,w_0,inanimate
292,0,81,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG1-of,waste-01,cause-01,cause-01,w_0,c2_9,c_2,w_0,inanimate
293,0,81,"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",[{'W_Inanimate': 'location'}],"(w / waste-01
  :ARG1 (m / money)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :purpose (m2 / maintain-01
  :ARG1 (s / ship
  :prep-in (s2 / shape
  :ARG1-of (b / bad-07
  :degree (s3 / such))
  :ARG0-of (c2 / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (o2 / operate-01
  :ARG0 s
  :location (a2 / air)
  :time (b2 / before
  :op1 (d / decommission-01
  :ARG0 (t / they)
  :ARG1 s)))))))))

",DiGraph with 19 nodes and 18 edges,waste-01,cause-01,:ARG0-of,waste-01,cause-01,cause-01,w_0,c2_9,c2_9,w_0,inanimate
294,0,82,"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",[],"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",DiGraph with 23 nodes and 22 edges,get-03 :li 2,cause-01,:ARG0-of,get-03 :li 2,cause-01,cause-01,g_0,c_8,c_8,g_0,inanimate
295,0,82,"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",[],"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",DiGraph with 23 nodes and 22 edges,get-03 :li 2,cause-01,:ARG0-of,get-03 :li 2,cause-01,cause-01,g_0,c_8,c_8,g_0,inanimate
296,0,82,"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",[],"(g / get-03 :li 2
  :ARG1 (a2 / and
  :op1 (s / scrap-01)
  :op2 (b / break-01))
  :ARG2 (h / have-degree-91
  :ARG1 a2
  :ARG2 (e / expensive)
  :ARG3 (s4 / so))
  :ARG0-of (c / cause-01
  :ARG1 (c2 / consider-01
  :ARG1 (s2 / slash
  :op1 (h2 / have-degree-91
  :ARG1 s3
  :ARG2 (g2 / good-02
  :ARG1 s3)
  :ARG3 (m / more))
  :op2 (h3 / have-degree-91
  :ARG1 (s3 / sinkex-02
  :example (w / wire-02))
  :ARG2 (e2 / effective-04
  :ARG1 (c3 / cost))
  :ARG3 (m2 / more)))))
  :mod (w2 / wow))

",DiGraph with 23 nodes and 22 edges,get-03 :li 2,wow,:mod,get-03 :li 2,wow,:mod,g_0,g_0,w2_22,w2_22,inanimate
297,0,83,"(b2 / be-located-at-91
  :ARG1 (i / i)
  :ARG2 (r2 / room
  :location (r / relative-position
  :op1 (h / hallway
  :mod (m / main))
  :direction (o / off))
  :location-of (g / get-04
  :ARG1 (s / sign-in-06
  :ARG1 i
  :ARG2 (m2 / meet-03))))
  :time (s2 / shout-01
  :ARG0 (s3 / someone)
  :ARG1 (a / and
  :op1 (s4 / security :mode expressive)
  :op2 (s5 / security :mode expressive)
  :op3 (s6 / spray-01 :mode expressive
  :ARG0 (t / they)
  :ARG1 (p / pepper)
  :ARG2 (w / we)))
  :source h))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(b2 / be-located-at-91
  :ARG1 (i / i)
  :ARG2 (r2 / room
  :location (r / relative-position
  :op1 (h / hallway
  :mod (m / main))
  :direction (o / off))
  :location-of (g / get-04
  :ARG1 (s / sign-in-06
  :ARG1 i
  :ARG2 (m2 / meet-03))))
  :time (s2 / shout-01
  :ARG0 (s3 / someone)
  :ARG1 (a / and
  :op1 (s4 / security :mode expressive)
  :op2 (s5 / security :mode expressive)
  :op3 (s6 / spray-01 :mode expressive
  :ARG0 (t / they)
  :ARG1 (p / pepper)
  :ARG2 (w / we)))
  :source h))

",DiGraph with 24 nodes and 23 edges,be-located-at-91,main,:mod,be-located-at-91,main,:mod,b2_0,b2_0,m_5,m_5,inanimate
298,0,83,"(b2 / be-located-at-91
  :ARG1 (i / i)
  :ARG2 (r2 / room
  :location (r / relative-position
  :op1 (h / hallway
  :mod (m / main))
  :direction (o / off))
  :location-of (g / get-04
  :ARG1 (s / sign-in-06
  :ARG1 i
  :ARG2 (m2 / meet-03))))
  :time (s2 / shout-01
  :ARG0 (s3 / someone)
  :ARG1 (a / and
  :op1 (s4 / security :mode expressive)
  :op2 (s5 / security :mode expressive)
  :op3 (s6 / spray-01 :mode expressive
  :ARG0 (t / they)
  :ARG1 (p / pepper)
  :ARG2 (w / we)))
  :source h))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(b2 / be-located-at-91
  :ARG1 (i / i)
  :ARG2 (r2 / room
  :location (r / relative-position
  :op1 (h / hallway
  :mod (m / main))
  :direction (o / off))
  :location-of (g / get-04
  :ARG1 (s / sign-in-06
  :ARG1 i
  :ARG2 (m2 / meet-03))))
  :time (s2 / shout-01
  :ARG0 (s3 / someone)
  :ARG1 (a / and
  :op1 (s4 / security :mode expressive)
  :op2 (s5 / security :mode expressive)
  :op3 (s6 / spray-01 :mode expressive
  :ARG0 (t / they)
  :ARG1 (p / pepper)
  :ARG2 (w / we)))
  :source h))

",DiGraph with 24 nodes and 23 edges,be-located-at-91,h,:source,be-located-at-91,h,:source,b2_0,b2_0,h_23,h_23,inanimate
299,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,cause-01,:ARG1-of,contrast-01,cause-01,cause-01,c_0,c2_9,c2_9,c_0,animate
300,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,cause-01,:ARG1-of,contrast-01,cause-01,cause-01,c_0,c2_9,c2_9,c_0,animate
301,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,need-01,:condition,contrast-01,need-01,:condition,c_0,c_0,n_19,n_19,inanimate
302,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,much,:mod,contrast-01,much,:mod,c_0,c_0,m2_8,m2_8,inanimate
303,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,large,:mod,contrast-01,large,:mod,c_0,c_0,l2_14,l2_14,inanimate
304,0,84,"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (y / yeah)
  :ARG2 (t / think-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (m / make-01
  :ARG0 (i2 / it)
  :ARG1 (d / difference
  :mod (m2 / much))
  :ARG1-of (c2 / cause-01
  :ARG0 (h / have-03
  :ARG0 (w / we)
  :ARG1 (s / ship
  :ARG1-of (l / land-01)
  :mod (l2 / large)
  :quant (p / plenty)
  :ARG1-of (m3 / manufacture-01
  :ARG0 w
  :ARG1-of (p2 / possible-01)
  :condition (n / need-01)
  :mod (i3 / indigenous)))
  :time (a / already))))))

",DiGraph with 22 nodes and 21 edges,contrast-01,indigenous,:mod,contrast-01,indigenous,:mod,c_0,c_0,i3_20,i3_20,inanimate
305,0,85,"(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'B_human': 'member'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m_0,m_0,a3_14,a3_14,inanimate
306,0,85,"(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'B_human': 'member'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,ethnic,:mod,multi-sentence,ethnic,:mod,m_0,m_0,e_18,e_18,inanimate
307,0,85,"(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'B_human': 'member'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,frank,:mod,multi-sentence,frank,:mod,m_0,m_0,f2_19,f2_19,inanimate
308,0,85,"(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'B_human': 'member'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,anyway,:mod,multi-sentence,anyway,:mod,m_0,m_0,a5_29,a5_29,inanimate
309,0,85,"(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'B_human': 'member'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (l / level
  :quant-of (a2 / and
  :op1 (o / organize-01)
  :op2 (c / commit-01))
  :ARG1-of (s / show-01
  :ARG0 (t / they)))
  :op2 (f / fail-01 :polarity -
  :ARG1 t
  :degree (m2 / miserable)
  :time (b / before))
  :op3 (m3 / member
  :mod (a3 / all)
  :ARG1-of (r / remove-01)
  :source (b2 / background
  :ARG1-of (s2 / same-01)
  :mod (e / ethnic)))
  :mod (f2 / frank))
  :snt2 (m4 / mean-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :location (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
  :ARG2 (a4 / amr-unknown)
  :mod (a5 / anyway)))

",DiGraph with 30 nodes and 29 edges,multi-sentence,background,:source,multi-sentence,background,:source,m_0,m_0,b2_16,b2_16,inanimate
310,0,86,"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",[{'B_human': 'person'}],"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",DiGraph with 11 nodes and 10 edges,jail-01,cause-01,:ARG1-of,jail-01,cause-01,cause-01,j_0,c_3,c_3,j_0,inanimate
311,0,86,"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",[{'B_human': 'person'}],"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",DiGraph with 11 nodes and 10 edges,jail-01,cause-01,:ARG1-of,jail-01,cause-01,cause-01,j_0,c_3,c_3,j_0,inanimate
312,0,86,"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",[{'B_human': 'person'}],"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",DiGraph with 11 nodes and 10 edges,jail-01,spray-01,:condition,jail-01,spray-01,:condition,j_0,j_0,s_5,s_5,inanimate
313,0,86,"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",[{'B_human': 'person'}],"(j / jail-01 :polarity -
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown :mode expressive))
  :condition (s / spray-01
  :ARG0 t
  :ARG1 (p / pepper)
  :ARG2 (p2 / person))
  :purpose (m / matter
  :mod (t2 / that)))

",DiGraph with 11 nodes and 10 edges,jail-01,that,:mod,jail-01,that,:mod,j_0,j_0,t2_10,t2_10,inanimate
314,0,87,"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",[],"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",DiGraph with 12 nodes and 11 edges,think-01,cause-01,:ARG1-of,think-01,cause-01,cause-01,t_0,c_7,c_7,t_0,inanimate
315,0,87,"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",[],"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",DiGraph with 12 nodes and 11 edges,think-01,cause-01,:ARG1-of,think-01,cause-01,cause-01,t_0,c_7,c_7,t_0,inanimate
316,0,87,"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",[],"(t / think-01
  :ARG0 (n / no-one)
  :ARG1 (r / record-01
  :ARG0 n
  :ARG1 (s / scene)
  :instrument (p / phone
  :poss n))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :condition (m / make-01
  :ARG1 s
  :time (a2 / already)))

",DiGraph with 12 nodes and 11 edges,think-01,make-01,:condition,think-01,make-01,:condition,t_0,t_0,m_9,m_9,inanimate
317,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c3_4,c3_4,a_0,animate
318,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c3_4,c3_4,a_0,animate
319,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,only,:mod,and,only,:mod,a_0,a_0,o_2,o_2,inanimate
320,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,country,:mod,and,country,:mod,a_0,a_0,c_7,c_7,inanimate
321,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,particular,:mod,and,particular,:mod,a_0,a_0,p2_14,p2_14,inanimate
322,0,88,"(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'India'}, {'LOC': 'India'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
  :op2 (r / reason
  :mod (o / only)
  :domain (t / this)
  :ARG0-of (c3 / cause-01
  :ARG1 (a2 / agree-01
  :ARG0 (p / person
  :mod (c / country :wiki ""United_States""
  :name (n / name :op1 ""America"")))
  :ARG1 (s2 / supply-01
  :ARG0 p
  :ARG1 (s3 / ship
  :mod (p2 / particular)
  :mod (t2 / this))
  :ARG2 (c2 / country :wiki ""India""
  :name (n2 / name :op1 ""India"")))
  :manner (s / sudden)))))

",DiGraph with 21 nodes and 20 edges,and,this,:mod,and,this,:domain,a_0,a_0,t2_15,t_3,inanimate
323,0,89,"(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

",DiGraph with 25 nodes and 24 edges,multi-sentence,hear-01,:condition,multi-sentence,hear-01,:condition,m_0,m_0,h_19,h_19,inanimate
324,0,89,"(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

",DiGraph with 25 nodes and 24 edges,multi-sentence,all,:mod,multi-sentence,all,:mod,m_0,m_0,a3_4,a3_4,inanimate
325,0,89,"(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

",DiGraph with 25 nodes and 24 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m_0,m_0,t_10,t_10,inanimate
326,0,89,"(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

",DiGraph with 25 nodes and 24 edges,multi-sentence,site,:mod,multi-sentence,site,:mod,m_0,m_0,s2_23,s2_23,inanimate
327,0,89,"(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
  :snt1 (a / and
  :op1 (a2 / absurd
  :domain (i2 / it)
  :mod (a3 / all)
  :degree (s / so))
  :op2 (a4 / astound-01
  :ARG0 (l / level
  :ARG1-of (g / go-through-20
  :ARG0 (p / person
  :mod (t / this))
  :purpose (r / remain-01
  :ARG1 p
  :location (o / office))))))
  :snt2 (u / update-02 :polite + :mode imperative
  :ARG0 (y / you)
  :ARG1 (w / we)
  :condition (h / hear-01
  :ARG0 y
  :ARG1 (a5 / anything
  :topic (f / facility
  :mod (s2 / site
  :mod (o2 / off)))))))

",DiGraph with 25 nodes and 24 edges,multi-sentence,off,:mod,multi-sentence,off,:mod,m_0,m_0,o2_24,o2_24,inanimate
328,0,90,"(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 7 nodes and 6 edges,discuss-01,cause-01,:ARG1-of,discuss-01,cause-01,cause-01,d_0,c_5,c_5,d_0,inanimate
329,0,90,"(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 7 nodes and 6 edges,discuss-01,cause-01,:ARG1-of,discuss-01,cause-01,cause-01,d_0,c_5,c_5,d_0,inanimate
330,0,90,"(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(d / discuss-01
  :ARG0 (y / you)
  :ARG1 (i / it)
  :location (t / thread
  :mod (t2 / this))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 7 nodes and 6 edges,discuss-01,this,:mod,discuss-01,this,:mod,d_0,d_0,t2_4,t2_4,inanimate
331,0,91,"(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

","[{'ORG': 'KSA'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

",DiGraph with 22 nodes and 21 edges,contrast-01,jack,:mod,contrast-01,jack,:mod,c_0,c_0,j_5,j_5,inanimate
332,0,91,"(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

","[{'ORG': 'KSA'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

",DiGraph with 22 nodes and 21 edges,contrast-01,just,:mod,contrast-01,just,:mod,c_0,c_0,j2_19,j2_19,inanimate
333,0,91,"(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

","[{'ORG': 'KSA'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(c / contrast-01
  :ARG1 (d / do-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / poo-poo
  :mod (j / jack))
  :ARG2 (m / money
  :source (o / organization :wiki -
  :name (n / name :op1 ""KSA""))))
  :ARG2 (w / want-01
  :ARG0 i
  :ARG1 (a / and
  :op1 (l / learn-01
  :ARG0 i)
  :op2 (g / go-02
  :ARG1 i
  :ARG4 (h / home)))
  :mod (j2 / just))
  :ARG2-of (s / serious-01
  :ARG1 i))

",DiGraph with 22 nodes and 21 edges,contrast-01,organization,:source,contrast-01,organization,:source,c_0,c_0,o_7,o_7,animate
334,0,92,"(a / and
  :op1 (d / deride-01
  :ARG1 (i / i)
  :ARG2 (u / undertake-01
  :ARG0 i
  :ARG1 (o / overcautious
  :ARG1-of (s / seem-01))
  :time (a2 / always)))
  :op2 (l / laugh-01
  :ARG2 i
  :ARG1-of (c2 / cause-01
  :ARG0 u))
  :quant (l2 / lot))

",[{'PER': 'i'}],"(a / and
  :op1 (d / deride-01
  :ARG1 (i / i)
  :ARG2 (u / undertake-01
  :ARG0 i
  :ARG1 (o / overcautious
  :ARG1-of (s / seem-01))
  :time (a2 / always)))
  :op2 (l / laugh-01
  :ARG2 i
  :ARG1-of (c2 / cause-01
  :ARG0 u))
  :quant (l2 / lot))

",DiGraph with 13 nodes and 12 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c2_10,c2_10,a_0,inanimate
335,0,92,"(a / and
  :op1 (d / deride-01
  :ARG1 (i / i)
  :ARG2 (u / undertake-01
  :ARG0 i
  :ARG1 (o / overcautious
  :ARG1-of (s / seem-01))
  :time (a2 / always)))
  :op2 (l / laugh-01
  :ARG2 i
  :ARG1-of (c2 / cause-01
  :ARG0 u))
  :quant (l2 / lot))

",[{'PER': 'i'}],"(a / and
  :op1 (d / deride-01
  :ARG1 (i / i)
  :ARG2 (u / undertake-01
  :ARG0 i
  :ARG1 (o / overcautious
  :ARG1-of (s / seem-01))
  :time (a2 / always)))
  :op2 (l / laugh-01
  :ARG2 i
  :ARG1-of (c2 / cause-01
  :ARG0 u))
  :quant (l2 / lot))

",DiGraph with 13 nodes and 12 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c2_10,c2_10,a_0,inanimate
336,0,93,"(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

","[{'ORG': 'Royal_Navy'}, {'ORG': 'Navy'}, {'B_human': 'guy'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Animate': 'military'}, {'W_Inanimate': 'location'}]","(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

",DiGraph with 45 nodes and 44 edges,read-01,cause-01,:ARG0-of,read-01,cause-01,cause-01,r_0,c2_20,c2_20,r_0,inanimate
337,0,93,"(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

","[{'ORG': 'Royal_Navy'}, {'ORG': 'Navy'}, {'B_human': 'guy'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Animate': 'military'}, {'W_Inanimate': 'location'}]","(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

",DiGraph with 45 nodes and 44 edges,read-01,cause-01,:ARG0-of,read-01,cause-01,cause-01,r_0,c2_20,c2_20,r_0,inanimate
338,0,93,"(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

","[{'ORG': 'Royal_Navy'}, {'ORG': 'Navy'}, {'B_human': 'guy'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Animate': 'military'}, {'W_Inanimate': 'location'}]","(r / read-01
  :ARG0 (i / i)
  :ARG1 (s / story
  :ARG1-of (r2 / relate-01
  :ARG2 (t / thing
  :mod (t2 / trichlorethylene)
  :ARG1-of (u / use-01
  :ARG2 (c / clean-01
  :ARG1 (t3 / tank
  :location (m / military :wiki ""Royal_Navy"" :name (n / name :op1 ""Royal"" :op2 ""Navy"")))
  :time (d / date-entity :decade 1970))))))
  :ARG3 (b / be-located-at-91
  :ARG1 (g / guy)
  :ARG2 (a / around
  :op1 t)
  :ARG0-of (c2 / cause-01
  :ARG1 (a2 / and
  :op1 (e / eat-away-03
  :ARG0 t
  :ARG1 (m2 / myelin
  :poss g
  :ARG1-of (m3 / mean-01
  :ARG2 (c3 / cover
  :ARG1-of (f / fat-03)
  :location (a3 / around
  :op1 (s2 / spine))))))
  :op2 (g2 / go-08
  :ARG1 g
  :ARG2 (b2 / bonker)
  :duration (f2 / few
  :op1 (t5 / temporal-quantity :quant 1
  :unit (h / hour))))
  :op3 (d2 / die-01
  :ARG1 g
  :time g2)))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (l / long-03
  :ARG1 b)
  :ARG3 (t4 / too))))

",DiGraph with 45 nodes and 44 edges,read-01,trichlorethylene,:mod,read-01,trichlorethylene,:mod,r_0,r_0,t2_5,t2_5,inanimate
339,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,cause-01,:ARG0-of,understand-01,cause-01,cause-01,u_0,c2_12,c_4,u_0,inanimate
340,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,cause-01,:ARG0-of,understand-01,cause-01,cause-01,u_0,c2_12,c2_12,u_0,inanimate
341,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,cause-01,:ARG0-of,understand-01,cause-01,cause-01,u_0,c2_12,c_4,u_0,inanimate
342,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,cause-01,:ARG0-of,understand-01,cause-01,cause-01,u_0,c2_12,c2_12,u_0,inanimate
343,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,that,:mod,understand-01,that,:mod,u_0,u_0,t2_9,t2_9,inanimate
344,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,just,:mod,understand-01,just,:mod,u_0,u_0,j_15,j_15,inanimate
345,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,literal,:mod,understand-01,literal,:mod,u_0,u_0,l_32,l_32,inanimate
346,0,94,"(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(u / understand-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (a / and :polarity -
  :op1 (m3 / mug-01
  :ARG1 (p / person
  :mod (t2 / that)))
  :op2 (b / beat-01
  :ARG1 p
  :ARG0-of (c2 / cause-01
  :ARG1 (d / die-01
  :ARG1 p)))
  :mod (j / just)
  :time (a3 / as-soon-as
  :op1 (a2 / and
  :op1 (s / start-01
  :ARG0 p
  :ARG1 (s2 / steal-01
  :ARG0 p
  :ARG1 (m / monetary-quantity :quant 2000000
  :unit (d2 / dollar)
  :source (m2 / money
  :poss (p2 / person
  :ARG0-of (s3 / study-01))))))
  :op2 (t3 / throw-03
  :ARG0 p
  :ARG1 (p3 / party-01)
  :instrument m
  :time (t4 / then)))))))
  :mod (l / literal))

",DiGraph with 33 nodes and 32 edges,understand-01,money,:source,understand-01,money,:source,u_0,u_0,m2_24,m2_24,inanimate
347,0,95,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,stab-01,:condition,feel-01 :polarity -,stab-01,:condition,f_0,f_0,s_3,s_3,inanimate
348,0,95,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,and,:condition,feel-01 :polarity -,and,:condition,f_0,f_0,a2_12,a2_12,inanimate
349,0,95,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,security,:mod,feel-01 :polarity -,security,:mod,f_0,f_0,s6_23,s6_23,inanimate
350,0,95,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,whatsoever,:mod,feel-01 :polarity -,whatsoever,:mod,f_0,f_0,w_25,w_25,inanimate
351,0,96,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,stab-01,:condition,feel-01 :polarity -,stab-01,:condition,f_0,f_0,s_3,s_3,inanimate
352,0,96,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,and,:condition,feel-01 :polarity -,and,:condition,f_0,f_0,a2_12,a2_12,inanimate
353,0,96,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,security,:mod,feel-01 :polarity -,security,:mod,f_0,f_0,s6_23,s6_23,inanimate
354,0,96,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (r / remorse)
  :condition (s / stab-01
  :ARG0 i
  :ARG1 (o / or
  :op1 (s2 / someone)
  :op2 (a / anyone
  :ARG1-of (i2 / involve-01
  :ARG2 (b / bullshit-01
  :ARG0 s2))))
  :location (s3 / street))
  :condition (a2 / and
  :op1 (s4 / steal-01
  :ARG0 s2
  :ARG1 (m / money
  :poss i)
  :location (s5 / school))
  :op2 (h / hire-01
  :ARG0 s2
  :ARG1 (p / person
  :ARG0-of (g / guard-01
  :ARG1 s2)
  :mod (s6 / security))
  :time (t / then)))
  :mod (w / whatsoever))

",DiGraph with 26 nodes and 25 edges,feel-01 :polarity -,whatsoever,:mod,feel-01 :polarity -,whatsoever,:mod,f_0,f_0,w_25,w_25,inanimate
355,0,97,"(m / multi-sentence
  :snt1 (p / possible-01 :polarity -
  :ARG1 (c / choose-01
  :ARG0 (t / they)
  :ARG1 (a / allocate-01 :polarity -
  :ARG0 t
  :ARG1 (m2 / money)
  :ARG2 (c2 / club))))
  :snt2 (g / get-01
  :ARG0 (c3 / club)
  :ARG1 (m3 / money)
  :condition (r / require-01
  :ARG0 c3
  :ARG1 (m4 / membership))
  :time (t2 / then)))

",[],"(m / multi-sentence
  :snt1 (p / possible-01 :polarity -
  :ARG1 (c / choose-01
  :ARG0 (t / they)
  :ARG1 (a / allocate-01 :polarity -
  :ARG0 t
  :ARG1 (m2 / money)
  :ARG2 (c2 / club))))
  :snt2 (g / get-01
  :ARG0 (c3 / club)
  :ARG1 (m3 / money)
  :condition (r / require-01
  :ARG0 c3
  :ARG1 (m4 / membership))
  :time (t2 / then)))

",DiGraph with 17 nodes and 16 edges,multi-sentence,require-01,:condition,multi-sentence,require-01,:condition,m_0,m_0,r_13,r_13,inanimate
356,0,98,"(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

","[{'MISC': 'Stanley_Cup'}, {'MISC': 'Stanley'}, {'MISC': 'Cup'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'game'}]","(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

",DiGraph with 25 nodes and 24 edges,sure-02,bore-02,:condition,sure-02,bore-02,:condition,s2_0,s2_0,b_23,b_23,inanimate
357,0,98,"(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

","[{'MISC': 'Stanley_Cup'}, {'MISC': 'Stanley'}, {'MISC': 'Cup'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'game'}]","(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

",DiGraph with 25 nodes and 24 edges,sure-02,original,:mod,sure-02,original,:mod,s2_0,s2_0,o2_9,o2_9,inanimate
358,0,98,"(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

","[{'MISC': 'Stanley_Cup'}, {'MISC': 'Stanley'}, {'MISC': 'Cup'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'game'}]","(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

",DiGraph with 25 nodes and 24 edges,sure-02,game,:mod,sure-02,game,:mod,s2_0,s2_0,g_11,g_11,inanimate
359,0,98,"(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

","[{'MISC': 'Stanley_Cup'}, {'MISC': 'Stanley'}, {'MISC': 'Cup'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'game'}]","(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

",DiGraph with 25 nodes and 24 edges,sure-02,security,:mod,sure-02,security,:mod,s2_0,s2_0,s_20,s_20,inanimate
360,0,98,"(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

","[{'MISC': 'Stanley_Cup'}, {'MISC': 'Stanley'}, {'MISC': 'Cup'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'game'}]","(s2 / sure-02
  :ARG0 (i / i)
  :ARG1 (p / possible-01
  :ARG1 (m / match-01
  :ARG0 y
  :ARG1 (p2 / person
  :location (p3 / picture
  :location (t2 / thing
  :ARG1-of (p5 / post-01)
  :mod (o2 / original))))
  :ARG2 (r / riot-01
  :mod (g / game :wiki ""Stanley_Cup"" :name (n / name :op1 ""Stanley"" :op2 ""Cup""))
  :time (r2 / recent)
  :time-of (p4 / picture
  :ARG1-of (t / take-01
  :ARG0 (c / camera
  :mod (s / security
  :mod (c2 / circuit
  :ARG1-of (c3 / close-01)))))))))
  :condition (b / bore-02
  :ARG1 (y / you)))

",DiGraph with 25 nodes and 24 edges,sure-02,circuit,:mod,sure-02,circuit,:mod,s2_0,s2_0,c2_21,c2_21,inanimate
361,0,99,"(b / bother-02
  :ARG0 (a / anyone)
  :ARG1 (a2 / ask-01
  :ARG0 a
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (d / do-02
  :ARG0 (p / person :wiki ""Saddam_Hussein"" :name (n / name :op1 ""Saddam""))
  :ARG1 (t / thing
  :ARG3-of (h / hanging-07
  :ARG1 p))))))
  :polarity (a4 / amr-unknown)
  :time (e / ever))

","[{'PER': 'Saddam'}, {'PER': 'Hussein'}, {'PER': 'Saddam'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(b / bother-02
  :ARG0 (a / anyone)
  :ARG1 (a2 / ask-01
  :ARG0 a
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (d / do-02
  :ARG0 (p / person :wiki ""Saddam_Hussein"" :name (n / name :op1 ""Saddam""))
  :ARG1 (t / thing
  :ARG3-of (h / hanging-07
  :ARG1 p))))))
  :polarity (a4 / amr-unknown)
  :time (e / ever))

",DiGraph with 16 nodes and 15 edges,bother-02,cause-01,:ARG0-of,bother-02,cause-01,cause-01,b_0,c_5,c_5,b_0,animate
362,0,99,"(b / bother-02
  :ARG0 (a / anyone)
  :ARG1 (a2 / ask-01
  :ARG0 a
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (d / do-02
  :ARG0 (p / person :wiki ""Saddam_Hussein"" :name (n / name :op1 ""Saddam""))
  :ARG1 (t / thing
  :ARG3-of (h / hanging-07
  :ARG1 p))))))
  :polarity (a4 / amr-unknown)
  :time (e / ever))

","[{'PER': 'Saddam'}, {'PER': 'Hussein'}, {'PER': 'Saddam'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(b / bother-02
  :ARG0 (a / anyone)
  :ARG1 (a2 / ask-01
  :ARG0 a
  :ARG1 (t2 / thing
  :ARG0-of (c / cause-01
  :ARG1 (d / do-02
  :ARG0 (p / person :wiki ""Saddam_Hussein"" :name (n / name :op1 ""Saddam""))
  :ARG1 (t / thing
  :ARG3-of (h / hanging-07
  :ARG1 p))))))
  :polarity (a4 / amr-unknown)
  :time (e / ever))

",DiGraph with 16 nodes and 15 edges,bother-02,cause-01,:ARG0-of,bother-02,cause-01,cause-01,b_0,c_5,c_5,b_0,animate
363,0,100,"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",[{'W_Inanimate': 'law'}],"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",DiGraph with 17 nodes and 16 edges,know-01,and,:part,know-01,and,:part,k_0,k_0,a3_8,a3_8,inanimate
364,0,100,"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",[{'W_Inanimate': 'law'}],"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",DiGraph with 17 nodes and 16 edges,section,"""A""",:mod,section,"""A""",:mod,s2_9,s2_9,"""A""_10","""A""_10",inanimate
365,0,100,"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",[{'W_Inanimate': 'law'}],"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",DiGraph with 17 nodes and 16 edges,section,"""B""",:mod,section,"""B""",,s3_11,s2_9,"""B""_12","""B""_12",inanimate
366,0,100,"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",[{'W_Inanimate': 'law'}],"(k / know-01
  :ARG0 (y / you)
  :ARG1 (a / against
  :op1 (l / law :wiki -
  :name (n / name :op1 ""Societies"" :op2 ""Act"")
  :part (a3 / and
  :op1 (s2 / section :mod ""A"")
  :op2 (s3 / section :mod ""B"")
  :op3 (s4 / section :mod ""C"")))
  :domain (t / this))
  :ARG1-of (r / request-confirmation-91))

",DiGraph with 17 nodes and 16 edges,section,"""C""",:mod,section,"""C""",,s4_13,s2_9,"""C""_14","""C""_14",inanimate
367,0,101,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 y2
  :ARG1 m2
  :ARG1-of (h / have-degree-91
  :ARG2 (e / easy-05
  :ARG1 f)
  :ARG3 (m / more)))
  :condition (l / look-04
  :ARG0 (y2 / you)
  :ARG1 (m2 / make-trouble-06
  :ARG0 y2)
  :concession-of (b / bother-01 :polarity -
  :ARG0 (n / nobody)
  :ARG1 y2
  :degree (r / really)
  :time (t2 / then)
  :condition (l2 / look-04 :polarity -
  :ARG0 y2
  :ARG1 m2))))

",[],"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 y2
  :ARG1 m2
  :ARG1-of (h / have-degree-91
  :ARG2 (e / easy-05
  :ARG1 f)
  :ARG3 (m / more)))
  :condition (l / look-04
  :ARG0 (y2 / you)
  :ARG1 (m2 / make-trouble-06
  :ARG0 y2)
  :concession-of (b / bother-01 :polarity -
  :ARG0 (n / nobody)
  :ARG1 y2
  :degree (r / really)
  :time (t2 / then)
  :condition (l2 / look-04 :polarity -
  :ARG0 y2
  :ARG1 m2))))

",DiGraph with 22 nodes and 21 edges,possible-01,look-04,:condition,possible-01,look-04,:condition,p_0,p_0,l_8,l_8,inanimate
368,0,101,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 y2
  :ARG1 m2
  :ARG1-of (h / have-degree-91
  :ARG2 (e / easy-05
  :ARG1 f)
  :ARG3 (m / more)))
  :condition (l / look-04
  :ARG0 (y2 / you)
  :ARG1 (m2 / make-trouble-06
  :ARG0 y2)
  :concession-of (b / bother-01 :polarity -
  :ARG0 (n / nobody)
  :ARG1 y2
  :degree (r / really)
  :time (t2 / then)
  :condition (l2 / look-04 :polarity -
  :ARG0 y2
  :ARG1 m2))))

",[],"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 y2
  :ARG1 m2
  :ARG1-of (h / have-degree-91
  :ARG2 (e / easy-05
  :ARG1 f)
  :ARG3 (m / more)))
  :condition (l / look-04
  :ARG0 (y2 / you)
  :ARG1 (m2 / make-trouble-06
  :ARG0 y2)
  :concession-of (b / bother-01 :polarity -
  :ARG0 (n / nobody)
  :ARG1 y2
  :degree (r / really)
  :time (t2 / then)
  :condition (l2 / look-04 :polarity -
  :ARG0 y2
  :ARG1 m2))))

",DiGraph with 22 nodes and 21 edges,possible-01,look-04,:condition,possible-01,look-04,:condition,p_0,p_0,l2_18,l_8,inanimate
369,0,102,"(w / whack-01 :polarity -
  :ARG0 (w2 / we)
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :time (a2 / as-soon-as
  :op1 (i / identify-01
  :ARG1 t)))

",[{'PER': 'i'}],"(w / whack-01 :polarity -
  :ARG0 (w2 / we)
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :time (a2 / as-soon-as
  :op1 (i / identify-01
  :ARG1 t)))

",DiGraph with 8 nodes and 7 edges,whack-01 :polarity -,cause-01,:ARG1-of,whack-01 :polarity -,cause-01,cause-01,w_0,c_3,c_3,w_0,inanimate
370,0,102,"(w / whack-01 :polarity -
  :ARG0 (w2 / we)
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :time (a2 / as-soon-as
  :op1 (i / identify-01
  :ARG1 t)))

",[{'PER': 'i'}],"(w / whack-01 :polarity -
  :ARG0 (w2 / we)
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown))
  :time (a2 / as-soon-as
  :op1 (i / identify-01
  :ARG1 t)))

",DiGraph with 8 nodes and 7 edges,whack-01 :polarity -,cause-01,:ARG1-of,whack-01 :polarity -,cause-01,cause-01,w_0,c_3,c_3,w_0,inanimate
371,0,103,"(h / have-concession-91
  :ARG2 (p / possible-01
  :ARG1 (a / admit-01
  :ARG0 y
  :ARG1 (w / weak-02
  :ARG1 (c / candidate
  :source (p2 / party
  :poss y)))
  :ARG2-of (a2 / arrest-01 :polarity -
  :ARG1 (y / you)))))

",[{'B_human': 'candidate'}],"(h / have-concession-91
  :ARG2 (p / possible-01
  :ARG1 (a / admit-01
  :ARG0 y
  :ARG1 (w / weak-02
  :ARG1 (c / candidate
  :source (p2 / party
  :poss y)))
  :ARG2-of (a2 / arrest-01 :polarity -
  :ARG1 (y / you)))))

",DiGraph with 11 nodes and 10 edges,have-concession-91,party,:source,have-concession-91,party,:source,h_0,h_0,p2_6,p2_6,inanimate
372,0,104,"(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

","[{'B_human': 'man'}, {'PER': 'i'}]","(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

",DiGraph with 11 nodes and 10 edges,apply-02,wrist,:part,apply-02,wrist,:part,a3_0,a3_0,w_6,w_6,inanimate
373,0,104,"(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

","[{'B_human': 'man'}, {'PER': 'i'}]","(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

",DiGraph with 11 nodes and 10 edges,apply-02,limp,:mod,apply-02,limp,:mod,a3_0,a3_0,l3_7,l3_7,inanimate
374,0,104,"(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

","[{'B_human': 'man'}, {'PER': 'i'}]","(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

",DiGraph with 11 nodes and 10 edges,apply-02,know-06,:mod,apply-02,know-06,:mod,a3_0,a3_0,k_8,k_8,inanimate
375,0,104,"(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

","[{'B_human': 'man'}, {'PER': 'i'}]","(a3 / apply-02
  :ARG1 (i / it)
  :ARG2 (m2 / man
  :ARG0-of (a2 / adhere-02
  :ARG1 (f / feminism))
  :ARG1-of (l2 / left-19)
  :part (w / wrist
  :mod (l3 / limp)))
  :mod (k / know-06
  :ARG0 (y / you))
  :mod (t / too))

",DiGraph with 11 nodes and 10 edges,apply-02,too,:mod,apply-02,too,:mod,a3_0,a3_0,t_10,t_10,inanimate
376,0,105,"(o / oppose-01
  :ARG0 (h / he)
  :ARG1 (c / charity
  :source (g / government-organization
  :ARG0-of (g2 / govern-01))))

",[],"(o / oppose-01
  :ARG0 (h / he)
  :ARG1 (c / charity
  :source (g / government-organization
  :ARG0-of (g2 / govern-01))))

",DiGraph with 5 nodes and 4 edges,oppose-01,government-organization,:source,oppose-01,government-organization,:source,o_0,o_0,g_3,g_3,inanimate
377,0,106,"(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 13 nodes and 12 edges,involve-01,cause-01,:ARG1-of,involve-01,cause-01,cause-01,i_0,c_11,c_11,i_0,inanimate
378,0,106,"(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 13 nodes and 12 edges,involve-01,cause-01,:ARG1-of,involve-01,cause-01,cause-01,i_0,c_11,c_11,i_0,inanimate
379,0,106,"(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(i / involve-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / intelligent-01))
  :ARG1 p2
  :ARG2 (b / business
  :part (t2 / thing
  :ARG0-of (v / violate-01
  :ARG1 (t / thing
  :ARG1-of (b2 / believe-01
  :ARG0 p2))
  :ARG1-of (p3 / possible-01))))
  :ARG1-of (c / cause-01
  :ARG0 (a / amr-unknown)))

",DiGraph with 13 nodes and 12 edges,involve-01,thing,:part,involve-01,thing,:part,i_0,i_0,t2_5,t2_5,inanimate
380,0,107,"(l / live-01
  :ARG0 (s / she)
  :ARG1 (h / house-01
  :ARG1 s
  :ARG2 (a / apartment
  :part (a2 / and
  :op1 (b / bedroom :quant 3)
  :op2 (b2 / bath :quant 2))
  :ARG1-of (n2 / nice-01))
  :mod (l2 / law :wiki ""Section_8_(housing)""
  :name (n / name :op1 ""Section"" :op2 8))))

",[{'W_Inanimate': 'law'}],"(l / live-01
  :ARG0 (s / she)
  :ARG1 (h / house-01
  :ARG1 s
  :ARG2 (a / apartment
  :part (a2 / and
  :op1 (b / bedroom :quant 3)
  :op2 (b2 / bath :quant 2))
  :ARG1-of (n2 / nice-01))
  :mod (l2 / law :wiki ""Section_8_(housing)""
  :name (n / name :op1 ""Section"" :op2 8))))

",DiGraph with 16 nodes and 15 edges,live-01,and,:part,live-01,and,:part,l_0,l_0,a2_5,a2_5,inanimate
381,0,107,"(l / live-01
  :ARG0 (s / she)
  :ARG1 (h / house-01
  :ARG1 s
  :ARG2 (a / apartment
  :part (a2 / and
  :op1 (b / bedroom :quant 3)
  :op2 (b2 / bath :quant 2))
  :ARG1-of (n2 / nice-01))
  :mod (l2 / law :wiki ""Section_8_(housing)""
  :name (n / name :op1 ""Section"" :op2 8))))

",[{'W_Inanimate': 'law'}],"(l / live-01
  :ARG0 (s / she)
  :ARG1 (h / house-01
  :ARG1 s
  :ARG2 (a / apartment
  :part (a2 / and
  :op1 (b / bedroom :quant 3)
  :op2 (b2 / bath :quant 2))
  :ARG1-of (n2 / nice-01))
  :mod (l2 / law :wiki ""Section_8_(housing)""
  :name (n / name :op1 ""Section"" :op2 8))))

",DiGraph with 16 nodes and 15 edges,live-01,law,:mod,live-01,law,:mod,l_0,l_0,l2_11,l2_11,inanimate
382,0,108,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (p2 / problem
  :part (a2 / and
  :op1 (m / make-02
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01))
  :ARG1 (h2 / have-degree-91
  :ARG1 g3
  :ARG2 (e / easy-05
  :ARG1 (g3 / get-01
  :ARG1 (b / benefit)))
  :ARG3 (t2 / too)))
  :op2 (d / do-02 :polarity -
  :ARG0 g
  :ARG1 (a3 / anything)
  :ARG3 (h / hold-02
  :ARG0 (p / person)
  :ARG1 (a4 / accountable-02
  :ARG0 p))))
  :mod (a / at-least)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (p2 / problem
  :part (a2 / and
  :op1 (m / make-02
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01))
  :ARG1 (h2 / have-degree-91
  :ARG1 g3
  :ARG2 (e / easy-05
  :ARG1 (g3 / get-01
  :ARG1 (b / benefit)))
  :ARG3 (t2 / too)))
  :op2 (d / do-02 :polarity -
  :ARG0 g
  :ARG1 (a3 / anything)
  :ARG3 (h / hold-02
  :ARG0 (p / person)
  :ARG1 (a4 / accountable-02
  :ARG0 p))))
  :mod (a / at-least)))

",DiGraph with 22 nodes and 21 edges,think-01,and,:part,think-01,and,:part,t_0,t_0,a2_3,a2_3,inanimate
383,0,108,"(t / think-01
  :ARG0 (i / i)
  :ARG1 (p2 / problem
  :part (a2 / and
  :op1 (m / make-02
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01))
  :ARG1 (h2 / have-degree-91
  :ARG1 g3
  :ARG2 (e / easy-05
  :ARG1 (g3 / get-01
  :ARG1 (b / benefit)))
  :ARG3 (t2 / too)))
  :op2 (d / do-02 :polarity -
  :ARG0 g
  :ARG1 (a3 / anything)
  :ARG3 (h / hold-02
  :ARG0 (p / person)
  :ARG1 (a4 / accountable-02
  :ARG0 p))))
  :mod (a / at-least)))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / think-01
  :ARG0 (i / i)
  :ARG1 (p2 / problem
  :part (a2 / and
  :op1 (m / make-02
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01))
  :ARG1 (h2 / have-degree-91
  :ARG1 g3
  :ARG2 (e / easy-05
  :ARG1 (g3 / get-01
  :ARG1 (b / benefit)))
  :ARG3 (t2 / too)))
  :op2 (d / do-02 :polarity -
  :ARG0 g
  :ARG1 (a3 / anything)
  :ARG3 (h / hold-02
  :ARG0 (p / person)
  :ARG1 (a4 / accountable-02
  :ARG0 p))))
  :mod (a / at-least)))

",DiGraph with 22 nodes and 21 edges,think-01,at-least,:mod,think-01,at-least,:mod,t_0,t_0,a_21,a_21,inanimate
384,0,109,"(m / moan-01
  :ARG0 (p2 / person
  :ARG1-of (l / left-19)
  :part (b / brain
  :ARG1-of (d2 / die-01)))
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (p / person
  :mod (r / rich)
  :ARG1-of (i / idle-01))
  :ARG1 (m2 / money
  :poss p)
  :conj-as-if (e / exist-01
  :ARG1 p))
  :location (t / thread
  :ARG1-of (f / frequent-02)
  :location (h / here)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(m / moan-01
  :ARG0 (p2 / person
  :ARG1-of (l / left-19)
  :part (b / brain
  :ARG1-of (d2 / die-01)))
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (p / person
  :mod (r / rich)
  :ARG1-of (i / idle-01))
  :ARG1 (m2 / money
  :poss p)
  :conj-as-if (e / exist-01
  :ARG1 p))
  :location (t / thread
  :ARG1-of (f / frequent-02)
  :location (h / here)))

",DiGraph with 17 nodes and 16 edges,moan-01,brain,:part,moan-01,brain,:part,m_0,m_0,b_3,b_3,inanimate
385,0,109,"(m / moan-01
  :ARG0 (p2 / person
  :ARG1-of (l / left-19)
  :part (b / brain
  :ARG1-of (d2 / die-01)))
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (p / person
  :mod (r / rich)
  :ARG1-of (i / idle-01))
  :ARG1 (m2 / money
  :poss p)
  :conj-as-if (e / exist-01
  :ARG1 p))
  :location (t / thread
  :ARG1-of (f / frequent-02)
  :location (h / here)))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(m / moan-01
  :ARG0 (p2 / person
  :ARG1-of (l / left-19)
  :part (b / brain
  :ARG1-of (d2 / die-01)))
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (p / person
  :mod (r / rich)
  :ARG1-of (i / idle-01))
  :ARG1 (m2 / money
  :poss p)
  :conj-as-if (e / exist-01
  :ARG1 p))
  :location (t / thread
  :ARG1-of (f / frequent-02)
  :location (h / here)))

",DiGraph with 17 nodes and 16 edges,moan-01,rich,:mod,moan-01,rich,:mod,m_0,m_0,r_8,r_8,inanimate
386,0,110,"(p / pull-01
  :ARG0 (p2 / person :wiki ""Barack_Obama""
  :name (n / name :op1 ""Obama""))
  :ARG1 (c / country)
  :ARG2 (b / back-02
  :ARG1 c)
  :source (b2 / brink
  :poss (d / disaster)
  :ARG2-of (l / leave-12
  :ARG0 (a / and
  :op1 (p3 / person :wiki ""George_W._Bush""
  :name (n2 / name :op1 ""Bush""))
  :op2 (p4 / person :wiki ""Dick_Cheney""
  :name (n3 / name :op1 ""Cheney"")))
  :ARG1 c)))

","[{'PER': 'Barack'}, {'PER': 'Obama'}, {'PER': 'Obama'}, {'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'PER': 'Dick'}, {'MISC': 'Cheney'}, {'PER': 'Cheney'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(p / pull-01
  :ARG0 (p2 / person :wiki ""Barack_Obama""
  :name (n / name :op1 ""Obama""))
  :ARG1 (c / country)
  :ARG2 (b / back-02
  :ARG1 c)
  :source (b2 / brink
  :poss (d / disaster)
  :ARG2-of (l / leave-12
  :ARG0 (a / and
  :op1 (p3 / person :wiki ""George_W._Bush""
  :name (n2 / name :op1 ""Bush""))
  :op2 (p4 / person :wiki ""Dick_Cheney""
  :name (n3 / name :op1 ""Cheney"")))
  :ARG1 c)))

",DiGraph with 21 nodes and 20 edges,pull-01,brink,:source,pull-01,brink,:source,p_0,p_0,b2_8,b2_8,inanimate
387,0,111,"(g / get-01
  :ARG0 (h / he)
  :ARG1 (p / person :wiki ""Osama_bin_Laden""
  :name (n / name :op1 ""Bin"" :op2 ""Laden""))
  :source (p2 / place
  :ARG4-of (g2 / go-01
  :ARG2-of (d / dare-01 :polarity -
  :ARG1 (p3 / person :wiki ""George_W._Bush""
  :name (n2 / name :op1 ""Bush""))))))

","[{'MISC': 'O'}, {'MISC': 'La'}, {'PER': 'George'}, {'PER': 'W'}, {'LOC': '.'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(g / get-01
  :ARG0 (h / he)
  :ARG1 (p / person :wiki ""Osama_bin_Laden""
  :name (n / name :op1 ""Bin"" :op2 ""Laden""))
  :source (p2 / place
  :ARG4-of (g2 / go-01
  :ARG2-of (d / dare-01 :polarity -
  :ARG1 (p3 / person :wiki ""George_W._Bush""
  :name (n2 / name :op1 ""Bush""))))))

",DiGraph with 15 nodes and 14 edges,get-01,place,:source,get-01,place,:source,g_0,g_0,p2_7,p2_7,inanimate
388,0,112,"(t / that
  :source (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG2 (w / wife)
  :time (e / ex))
  :mod (j / just :polarity -)))

","[{'B_human': 'person'}, {'B_human': 'wife'}]","(t / that
  :source (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG2 (w / wife)
  :time (e / ex))
  :mod (j / just :polarity -)))

",DiGraph with 7 nodes and 6 edges,that,just,:mod,that,just,:mod,t_0,t_0,j_5,j_5,inanimate
389,0,112,"(t / that
  :source (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG2 (w / wife)
  :time (e / ex))
  :mod (j / just :polarity -)))

","[{'B_human': 'person'}, {'B_human': 'wife'}]","(t / that
  :source (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG2 (w / wife)
  :time (e / ex))
  :mod (j / just :polarity -)))

",DiGraph with 7 nodes and 6 edges,that,person,:source,that,person,:source,t_0,t_0,p_1,p_1,animate
390,0,113,"(i / it
  :source (p / people
  :ARG0-of (w / work-01
  :ARG3 (h / he))))

",[{'PER': 'i'}],"(i / it
  :source (p / people
  :ARG0-of (w / work-01
  :ARG3 (h / he))))

",DiGraph with 4 nodes and 3 edges,it,people,:source,it,people,:source,i_0,i_0,p_1,p_1,inanimate
391,0,114,"(p7 / possible-01
  :ARG1 (a3 / and
  :op1 (h / have-03
  :ARG0 (p / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (p2 / political-party :wiki ""Democratic_Party_(United_States)"" :name (n / name :op1 ""Democratic"" :op2 ""Party""))))
  :ARG1 (a2 / and
  :op1 (p4 / person :wiki - :name (n2 / name :op1 ""Clinton""))
  :op2 (p5 / person :wiki - :name (n3 / name :op1 ""Weiner""))))
  :op2 (m / move-01
  :ARG1 p
  :source (i / it)
  :manner (q / quick-02
  :ARG2-of (h3 / have-degree-91
  :ARG1 m
  :ARG3 (m2 / more)
  :ARG4 (p6 / possible-01
  :ARG1 (m3 / move-01
  :ARG0 (w / we)
  :source i)))))))

","[{'ORG': 'Democratic_Party'}, {'LOC': 'United'}, {'LOC': 'States'}, {'MISC': 'Democratic'}, {'PER': 'Clinton'}, {'PER': 'Wei'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(p7 / possible-01
  :ARG1 (a3 / and
  :op1 (h / have-03
  :ARG0 (p / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (p2 / political-party :wiki ""Democratic_Party_(United_States)"" :name (n / name :op1 ""Democratic"" :op2 ""Party""))))
  :ARG1 (a2 / and
  :op1 (p4 / person :wiki - :name (n2 / name :op1 ""Clinton""))
  :op2 (p5 / person :wiki - :name (n3 / name :op1 ""Weiner""))))
  :op2 (m / move-01
  :ARG1 p
  :source (i / it)
  :manner (q / quick-02
  :ARG2-of (h3 / have-degree-91
  :ARG1 m
  :ARG3 (m2 / more)
  :ARG4 (p6 / possible-01
  :ARG1 (m3 / move-01
  :ARG0 (w / we)
  :source i)))))))

",DiGraph with 30 nodes and 29 edges,possible-01,it,:source,possible-01,it,:source,p7_0,p7_0,i_21,i_21,inanimate
392,0,114,"(p7 / possible-01
  :ARG1 (a3 / and
  :op1 (h / have-03
  :ARG0 (p / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (p2 / political-party :wiki ""Democratic_Party_(United_States)"" :name (n / name :op1 ""Democratic"" :op2 ""Party""))))
  :ARG1 (a2 / and
  :op1 (p4 / person :wiki - :name (n2 / name :op1 ""Clinton""))
  :op2 (p5 / person :wiki - :name (n3 / name :op1 ""Weiner""))))
  :op2 (m / move-01
  :ARG1 p
  :source (i / it)
  :manner (q / quick-02
  :ARG2-of (h3 / have-degree-91
  :ARG1 m
  :ARG3 (m2 / more)
  :ARG4 (p6 / possible-01
  :ARG1 (m3 / move-01
  :ARG0 (w / we)
  :source i)))))))

","[{'ORG': 'Democratic_Party'}, {'LOC': 'United'}, {'LOC': 'States'}, {'MISC': 'Democratic'}, {'PER': 'Clinton'}, {'PER': 'Wei'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(p7 / possible-01
  :ARG1 (a3 / and
  :op1 (h / have-03
  :ARG0 (p / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 (p2 / political-party :wiki ""Democratic_Party_(United_States)"" :name (n / name :op1 ""Democratic"" :op2 ""Party""))))
  :ARG1 (a2 / and
  :op1 (p4 / person :wiki - :name (n2 / name :op1 ""Clinton""))
  :op2 (p5 / person :wiki - :name (n3 / name :op1 ""Weiner""))))
  :op2 (m / move-01
  :ARG1 p
  :source (i / it)
  :manner (q / quick-02
  :ARG2-of (h3 / have-degree-91
  :ARG1 m
  :ARG3 (m2 / more)
  :ARG4 (p6 / possible-01
  :ARG1 (m3 / move-01
  :ARG0 (w / we)
  :source i)))))))

",DiGraph with 30 nodes and 29 edges,possible-01,i,:source,possible-01,i,:source,p7_0,p7_0,i_29,i_29,animate
393,0,115,"(n / negative-03
  :ARG1-of (c / cause-01
  :ARG0 (a / asshole)))

",[],"(n / negative-03
  :ARG1-of (c / cause-01
  :ARG0 (a / asshole)))

",DiGraph with 3 nodes and 2 edges,negative-03,cause-01,:ARG1-of,negative-03,cause-01,cause-01,n_0,c_1,c_1,n_0,animate
394,0,115,"(n / negative-03
  :ARG1-of (c / cause-01
  :ARG0 (a / asshole)))

",[],"(n / negative-03
  :ARG1-of (c / cause-01
  :ARG0 (a / asshole)))

",DiGraph with 3 nodes and 2 edges,negative-03,cause-01,:ARG1-of,negative-03,cause-01,cause-01,n_0,c_1,c_1,n_0,animate
395,0,116,"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",[{'B_human': 'scientist'}],"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",DiGraph with 10 nodes and 9 edges,possible-01,cause-01,:ARG0-of,possible-01,cause-01,cause-01,p_0,c_4,c_4,p_0,animate
396,0,116,"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",[{'B_human': 'scientist'}],"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",DiGraph with 10 nodes and 9 edges,possible-01,cause-01,:ARG0-of,possible-01,cause-01,cause-01,p_0,c_4,c_4,p_0,animate
397,0,116,"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",[{'B_human': 'scientist'}],"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",DiGraph with 10 nodes and 9 edges,possible-01,rocket,:mod,possible-01,rocket,:mod,p_0,p_0,r_6,r_6,inanimate
398,0,116,"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",[{'B_human': 'scientist'}],"(p / possible-01
  :ARG1 (s / see-01
  :ARG0 (w / we)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (s2 / scientist
  :mod (r / rocket)
  :domain (y / you)
  :mod (s3 / such)))))
  :time (n / now))

",DiGraph with 10 nodes and 9 edges,possible-01,such,:mod,possible-01,such,:mod,p_0,p_0,s3_8,s3_8,inanimate
399,0,117,"(a / and
  :op1 (k / knuckle-under-00
  :ARG1 (t2 / thing
  :ARG1-of (t / threaten-01)))
  :op2 (c / cave-in-02
  :ARG1-of (c2 / cause-01
  :ARG0 (p / pressure-01)))
  :ARG1-of (m / mean-01
  :ARG0 (y / you)
  :polarity (a2 / amr-unknown)))

",[],"(a / and
  :op1 (k / knuckle-under-00
  :ARG1 (t2 / thing
  :ARG1-of (t / threaten-01)))
  :op2 (c / cave-in-02
  :ARG1-of (c2 / cause-01
  :ARG0 (p / pressure-01)))
  :ARG1-of (m / mean-01
  :ARG0 (y / you)
  :polarity (a2 / amr-unknown)))

",DiGraph with 10 nodes and 9 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c2_5,c2_5,a_0,animate
400,0,117,"(a / and
  :op1 (k / knuckle-under-00
  :ARG1 (t2 / thing
  :ARG1-of (t / threaten-01)))
  :op2 (c / cave-in-02
  :ARG1-of (c2 / cause-01
  :ARG0 (p / pressure-01)))
  :ARG1-of (m / mean-01
  :ARG0 (y / you)
  :polarity (a2 / amr-unknown)))

",[],"(a / and
  :op1 (k / knuckle-under-00
  :ARG1 (t2 / thing
  :ARG1-of (t / threaten-01)))
  :op2 (c / cave-in-02
  :ARG1-of (c2 / cause-01
  :ARG0 (p / pressure-01)))
  :ARG1-of (m / mean-01
  :ARG0 (y / you)
  :polarity (a2 / amr-unknown)))

",DiGraph with 10 nodes and 9 edges,and,cause-01,:ARG1-of,and,cause-01,cause-01,a_0,c2_5,c2_5,a_0,animate
401,0,118,"(s / sure-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (t2 / try-01
  :ARG0 (h / he)
  :ARG1 (p / pretend-01
  :ARG0 h
  :ARG1 (r / rich :polarity -
  :domain h))))))

",[{'PER': 'i'}],"(s / sure-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (t2 / try-01
  :ARG0 (h / he)
  :ARG1 (p / pretend-01
  :ARG0 h
  :ARG1 (r / rich :polarity -
  :domain h))))))

",DiGraph with 11 nodes and 10 edges,sure-02,cause-01,:ARG0-of,sure-02,cause-01,cause-01,s_0,c_4,c_4,s_0,animate
402,0,118,"(s / sure-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (t2 / try-01
  :ARG0 (h / he)
  :ARG1 (p / pretend-01
  :ARG0 h
  :ARG1 (r / rich :polarity -
  :domain h))))))

",[{'PER': 'i'}],"(s / sure-02 :polarity -
  :ARG0 (i / i)
  :ARG1 (t / thing
  :ARG0-of (c / cause-01
  :ARG1 (t2 / try-01
  :ARG0 (h / he)
  :ARG1 (p / pretend-01
  :ARG0 h
  :ARG1 (r / rich :polarity -
  :domain h))))))

",DiGraph with 11 nodes and 10 edges,sure-02,cause-01,:ARG0-of,sure-02,cause-01,cause-01,s_0,c_4,c_4,s_0,animate
403,0,119,"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",[{'B_human': 'person'}],"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",DiGraph with 28 nodes and 27 edges,see-01,greedy,:mod,see-01,greedy,:mod,s_0,s_0,g_5,g_5,inanimate
404,0,119,"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",[{'B_human': 'person'}],"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",DiGraph with 28 nodes and 27 edges,see-01,well,:mod,see-01,well,:mod,s_0,s_0,w2_27,w2_27,inanimate
405,0,119,"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",[{'B_human': 'person'}],"(s / see-01
  :ARG0 (y / you)
  :ARG1 (d / deserve-01 :polarity -
  :ARG0 (b2 / bastard
  :mod (g / greedy
  :degree (r2 / really))
  :domain (p / person
  :ARG0-of (b / build-01
  :ARG1 (w / wealth
  :poss p)
  :purpose (c / care-03
  :ARG0 p
  :ARG1 (f2 / family
  :poss p)))))
  :ARG1 (o / or
  :op1 (f / fruit
  :source (l / labor-01
  :ARG0 b2))
  :op2 (r / right-05
  :ARG1 b2
  :ARG2 (d2 / decide-01
  :ARG0 b2
  :ARG1 (t / thing
  :ARG1-of (d3 / do-02
  :ARG0 b2
  :ARG2 f))))))
  :mod (w2 / well))

",DiGraph with 28 nodes and 27 edges,see-01,labor-01,:source,see-01,labor-01,:source,s_0,s_0,l_17,l_17,inanimate
406,0,120,"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",[],"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",DiGraph with 8 nodes and 7 edges,section,8,:mod,section,8,:mod,s_3,s_3,8_4,8_4,inanimate
407,0,120,"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",[],"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",DiGraph with 8 nodes and 7 edges,article,1,:mod,article,1,:mod,a2_5,a2_5,1_6,1_6,inanimate
408,0,120,"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",[],"(f / flow-01
  :ARG1 (a / authority
  :purpose (t / tax-01))
  :source (s / section :mod 8
  :part-of (a2 / article :mod 1
  :part-of (c / constitution))))

",DiGraph with 8 nodes and 7 edges,flow-01,section,:source,flow-01,section,:source,f_0,f_0,s_3,s_3,inanimate
409,0,121,"(g / get-01
  :ARG0 (s / state)
  :ARG1 (t / thing
  :poss s)
  :time (t2 / top)
  :source (i2 / income
  :poss (i / i)))

",[{'PER': 'i'}],"(g / get-01
  :ARG0 (s / state)
  :ARG1 (t / thing
  :poss s)
  :time (t2 / top)
  :source (i2 / income
  :poss (i / i)))

",DiGraph with 7 nodes and 6 edges,get-01,income,:source,get-01,income,:source,g_0,g_0,i2_5,i2_5,inanimate
410,0,122,"(a / and
  :op1 (l / lay-off-02
  :ARG0 (j / job
  :poss y)
  :ARG1 (y / you))
  :op2 (g / get-01
  :ARG0 y
  :ARG1 (l2 / letter
  :source (p / person
  :ARG0-of (e2 / employ-01
  :ARG1 y))
  :ARG0-of (t2 / tell-01
  :ARG1 (h / have-03
  :ARG0 y
  :ARG1 (o2 / opt-01
  :ARG0 y
  :ARG1 (c2 / continue-01
  :ARG0 y
  :ARG1 (c3 / cover-01
  :ARG1 (i / insure-02
  :ARG1 (h2 / health
  :poss y))))))
  :ARG2 y))
  :time (a2 / after
  :op1 l
  :quant (t / temporal-quantity :quant 30
  :unit (d / day)))))

","[{'B_human': 'person'}, {'PER': 'i'}]","(a / and
  :op1 (l / lay-off-02
  :ARG0 (j / job
  :poss y)
  :ARG1 (y / you))
  :op2 (g / get-01
  :ARG0 y
  :ARG1 (l2 / letter
  :source (p / person
  :ARG0-of (e2 / employ-01
  :ARG1 y))
  :ARG0-of (t2 / tell-01
  :ARG1 (h / have-03
  :ARG0 y
  :ARG1 (o2 / opt-01
  :ARG0 y
  :ARG1 (c2 / continue-01
  :ARG0 y
  :ARG1 (c3 / cover-01
  :ARG1 (i / insure-02
  :ARG1 (h2 / health
  :poss y))))))
  :ARG2 y))
  :time (a2 / after
  :op1 l
  :quant (t / temporal-quantity :quant 30
  :unit (d / day)))))

",DiGraph with 28 nodes and 27 edges,and,person,:source,and,person,:source,a_0,a_0,p_8,p_8,animate
411,0,123,"(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

","[{'LOC': 'America'}, {'MISC': 'Choice'}, {'MISC': 'Act'}, {'MISC': 'of'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'law'}]","(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

",DiGraph with 16 nodes and 15 edges,have-condition-91,plan-01,:mod,have-condition-91,plan-01,:mod,h_0,h_0,p_4,p_4,inanimate
412,0,123,"(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

","[{'LOC': 'America'}, {'MISC': 'Choice'}, {'MISC': 'Act'}, {'MISC': 'of'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'law'}]","(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

",DiGraph with 16 nodes and 15 edges,have-condition-91,product,:mod,have-condition-91,product,:mod,h_0,h_0,p2_6,p2_6,inanimate
413,0,123,"(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

","[{'LOC': 'America'}, {'MISC': 'Choice'}, {'MISC': 'Act'}, {'MISC': 'of'}, {'W_Inanimate': 'product'}, {'W_Inanimate': 'law'}]","(h / have-condition-91 :polarity -
  :ARG2 (c / change-01
  :ARG1 (l / language
  :mod (p / plan-01
  :ARG1 (i2 / insure-02)
  :mod (p2 / product :wiki ""Public_health_insurance_option"" :name (n / name :op1 ""Public"" :op2 ""Option""))
  :source (l3 / law :wiki ""America's_Affordable_Health_Choices_Act_of_2009"" :name (n2 / name :op1 ""HR"" :op2 ""3200""))))
  :ARG2 (s / something)))

",DiGraph with 16 nodes and 15 edges,have-condition-91,law,:source,have-condition-91,law,:source,h_0,h_0,l3_11,l3_11,inanimate
414,0,124,"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",[],"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",DiGraph with 21 nodes and 20 edges,contrast-01,any,:mod,contrast-01,any,:mod,c_0,c_0,a_8,a_8,inanimate
415,0,124,"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",[],"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",DiGraph with 21 nodes and 20 edges,contrast-01,other,:mod,contrast-01,other,:mod,c_0,c_0,o2_11,o2_11,inanimate
416,0,124,"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",[],"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",DiGraph with 21 nodes and 20 edges,contrast-01,that,:mod,contrast-01,that,:mod,c_0,c_0,t_12,t_12,inanimate
417,0,124,"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",[],"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",DiGraph with 21 nodes and 20 edges,contrast-01,just,:mod,contrast-01,just,:mod,c_0,c_0,j_20,j_20,inanimate
418,0,124,"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",[],"(c / contrast-01
  :ARG1 (b / buy-01 :mode imperative
  :ARG0 (y / you)
  :ARG1 (o / or
  :op1 (i2 / insure-02
  :source (i3 / internet))
  :op2 (p2 / plan
  :mod (a / any)
  :ARG1-of (i4 / include-91
  :ARG2 (p / plan
  :mod (o2 / other)
  :mod (t / that)))))
  :ARG1-of (s / sure-02))
  :ARG2 (g / get-03 :polarity - :mode imperative
  :ARG1 y
  :ARG2 (s2 / sick-05
  :ARG1 y)
  :mod (j / just)))

",DiGraph with 21 nodes and 20 edges,contrast-01,internet,:source,contrast-01,internet,:source,c_0,c_0,i3_6,i3_6,inanimate
419,0,125,"(s2 / suppose-01
  :ARG0 i
  :ARG1 (p / possible-01
  :ARG1 (g / get-01
  :ARG0 (i / i)
  :ARG2 (p2 / plan
  :ARG0-of (i2 / insure-02
  :ARG1 (h2 / health)))
  :source (s / state :wiki ""Washington_(state)"" :name (n2 / name :op1 ""Washington"")))))

","[{'LOC': 'Washington'}, {'LOC': 'Washington'}, {'PER': 'i'}, {'W_Inanimate': 'state'}]","(s2 / suppose-01
  :ARG0 i
  :ARG1 (p / possible-01
  :ARG1 (g / get-01
  :ARG0 (i / i)
  :ARG2 (p2 / plan
  :ARG0-of (i2 / insure-02
  :ARG1 (h2 / health)))
  :source (s / state :wiki ""Washington_(state)"" :name (n2 / name :op1 ""Washington"")))))

",DiGraph with 12 nodes and 11 edges,suppose-01,state,:source,suppose-01,state,:source,s2_0,s2_0,s_8,s_8,inanimate
420,0,126,"(p2 / possible-01 :polarity -
  :ARG1 (d / deal-01
  :ARG0 (t / they)
  :ARG2 (t2 / that))
  :time (a / ask-02
  :ARG0 (y / you)
  :ARG1 (a2 / and
  :op1 (d2 / decency)
  :op2 (r / respect)
  :location (f / fly-01
  :ARG1 (t3 / tissue
  :part-of (h / human)
  :ARG1-of (d4 / distance-01
  :ARG2 (p3 / part-01
  :ARG1 (j / jet))))
  :source (a3 / aircraft
  :ARG1-of (d3 / destroy-01))
  :location (b / building
  :location (b2 / below))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (f2 / far)
  :ARG3 (e / equal)
  :ARG4 p3))
  :mod (l / little))
  :ARG2 t))

","[{'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p2 / possible-01 :polarity -
  :ARG1 (d / deal-01
  :ARG0 (t / they)
  :ARG2 (t2 / that))
  :time (a / ask-02
  :ARG0 (y / you)
  :ARG1 (a2 / and
  :op1 (d2 / decency)
  :op2 (r / respect)
  :location (f / fly-01
  :ARG1 (t3 / tissue
  :part-of (h / human)
  :ARG1-of (d4 / distance-01
  :ARG2 (p3 / part-01
  :ARG1 (j / jet))))
  :source (a3 / aircraft
  :ARG1-of (d3 / destroy-01))
  :location (b / building
  :location (b2 / below))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (f2 / far)
  :ARG3 (e / equal)
  :ARG4 p3))
  :mod (l / little))
  :ARG2 t))

",DiGraph with 25 nodes and 24 edges,possible-01 :polarity -,little,:mod,possible-01 :polarity -,little,:mod,p2_0,p2_0,l_23,l_23,inanimate
421,0,126,"(p2 / possible-01 :polarity -
  :ARG1 (d / deal-01
  :ARG0 (t / they)
  :ARG2 (t2 / that))
  :time (a / ask-02
  :ARG0 (y / you)
  :ARG1 (a2 / and
  :op1 (d2 / decency)
  :op2 (r / respect)
  :location (f / fly-01
  :ARG1 (t3 / tissue
  :part-of (h / human)
  :ARG1-of (d4 / distance-01
  :ARG2 (p3 / part-01
  :ARG1 (j / jet))))
  :source (a3 / aircraft
  :ARG1-of (d3 / destroy-01))
  :location (b / building
  :location (b2 / below))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (f2 / far)
  :ARG3 (e / equal)
  :ARG4 p3))
  :mod (l / little))
  :ARG2 t))

","[{'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p2 / possible-01 :polarity -
  :ARG1 (d / deal-01
  :ARG0 (t / they)
  :ARG2 (t2 / that))
  :time (a / ask-02
  :ARG0 (y / you)
  :ARG1 (a2 / and
  :op1 (d2 / decency)
  :op2 (r / respect)
  :location (f / fly-01
  :ARG1 (t3 / tissue
  :part-of (h / human)
  :ARG1-of (d4 / distance-01
  :ARG2 (p3 / part-01
  :ARG1 (j / jet))))
  :source (a3 / aircraft
  :ARG1-of (d3 / destroy-01))
  :location (b / building
  :location (b2 / below))
  :ARG1-of (h2 / have-degree-91
  :ARG2 (f2 / far)
  :ARG3 (e / equal)
  :ARG4 p3))
  :mod (l / little))
  :ARG2 t))

",DiGraph with 25 nodes and 24 edges,possible-01 :polarity -,aircraft,:source,possible-01 :polarity -,aircraft,:source,p2_0,p2_0,a3_15,a3_15,inanimate
422,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,hood,:part,remain-01,hood,:part,r_0,r_0,h_6,h_6,inanimate
423,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,grill,:part,remain-01,grill,:part,r_0,r_0,g_8,g_8,inanimate
424,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,front,:mod,remain-01,front,:mod,r_0,r_0,f_9,f_9,inanimate
425,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,police,:mod,remain-01,police,:mod,r_0,r_0,p2_14,p2_14,inanimate
426,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,orange,:mod,remain-01,orange,:mod,r_0,r_0,o2_16,o2_16,inanimate
427,0,127,"(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

","[{'ORG': 'Ford_Motor_Company'}, {'ORG': 'Ford'}, {'ORG': 'Kansas'}, {'ORG': 'Supreme_Court'}, {'W_Inanimate': 'location'}]","(r / remain-01
  :ARG1 (c / car-make :wiki ""Ford_Motor_Company""
  :name (n / name :op1 ""Ford"")
  :ARG1-of (b / black-04)
  :part (h / hood :polarity -)
  :part (g / grill
  :mod (f / front)
  :ARG1-of (b2 / beat-up-05))
  :ARG1-of (s / set-01
  :ARG0 (a2 / and
  :op1 (c2 / car
  :mod (p2 / police))
  :op2 (c3 / cone
  :mod (o2 / orange)))
  :ARG2 (o / off)))
  :location (l / lot
  :purpose (p / park-01)
  :mod (g2 / government-organization :wiki ""Kansas_Supreme_Court""
  :name (n2 / name :op1 ""Judicial"" :op2 ""Center"")))
  :time (d / date-entity
  :weekday (w / wednesday)
  :dayperiod (a / afternoon)))

",DiGraph with 28 nodes and 27 edges,remain-01,government-organization,:mod,remain-01,government-organization,:mod,r_0,r_0,g2_20,g2_20,inanimate
428,0,128,"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",[],"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",DiGraph with 9 nodes and 8 edges,possible-01,that,:mod,possible-01,that,:mod,p_0,p_0,t_3,t_3,inanimate
429,0,128,"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",[],"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",DiGraph with 9 nodes and 8 edges,possible-01,also,:mod,possible-01,also,:mod,p_0,p_0,a2_8,a2_8,inanimate
430,0,128,"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",[],"(p / possible-01
  :ARG1 (d / drive-02
  :ARG0 (p2 / power
  :mod (t / that))
  :ARG1 (c / change-01
  :direction (a / away
  :source (o / oil))
  :manner (r / rapid)))
  :mod (a2 / also))

",DiGraph with 9 nodes and 8 edges,possible-01,oil,:source,possible-01,oil,:source,p_0,p_0,o_6,o_6,inanimate
431,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,cause-01,:ARG1-of,exemplify-01,cause-01,cause-01,e_0,c8_21,c5_15,e_0,inanimate
432,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,cause-01,:ARG1-of,exemplify-01,cause-01,cause-01,e_0,c8_21,c8_21,e_0,inanimate
433,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,cause-01,:ARG1-of,exemplify-01,cause-01,cause-01,e_0,c8_21,c5_15,e_0,inanimate
434,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,cause-01,:ARG1-of,exemplify-01,cause-01,cause-01,e_0,c8_21,c8_21,e_0,inanimate
435,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,inner,:part,exemplify-01,inner,:part,e_0,e_0,i2_24,i2_24,inanimate
436,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,country,:mod,exemplify-01,country,:mod,e_0,e_0,c_5,c_5,inanimate
437,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,city,:mod,exemplify-01,city,:mod,e_0,e_0,c9_23,c9_23,inanimate
438,0,129,"(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

","[{'LOC': 'United_States'}, {'LOC': 'US'}, {'W_Inanimate': 'country'}]","(e / exemplify-01
  :ARG0 (w / wonder-01
  :ARG1 (t / thing
  :ARG1-of (p / plan-01
  :ARG0 (g / government-organization
  :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""US""))))
  :ARG1-of (d / do-02
  :ARG0 g
  :ARG2 (a2 / affect-01
  :ARG1 (c3 / change-01
  :ARG1 (r / reduce-01
  :ARG1 (c4 / crime-02
  :ARG1-of (c5 / cause-01
  :ARG0 (a3 / and
  :op1 (c6 / cost-01
  :ARG1-of (r2 / relate-01
  :ARG2 (d2 / drug)))
  :op2 (c7 / cost
  :ARG1-of (c8 / cause-01
  :ARG0 (v / violence
  :mod (c9 / city
  :part (i2 / inner))
  :mod (d3 / domestic))))))))))))
  :polarity (a / amr-unknown))
  :ARG1 (f / factor-01
  :ARG2 (c2 / cost-01
  :ARG1 (h / healthcare))
  :ARG1-of (m / major-02)))

",DiGraph with 31 nodes and 30 edges,exemplify-01,domestic,:mod,exemplify-01,domestic,:mod,e_0,e_0,d3_25,d3_25,inanimate
439,0,130,"(a / and
  :op2 (c / couch
  :domain (i2 / it)
  :mod (o / old)
  :ARG1-of (w / white-03)
  :ARG1-of (h / have-03
  :ARG0 (w2 / we)
  :time (b2 / before
  :time-of (a3 / age-01
  :ARG1 i
  :ARG2 (t / temporal-quantity :quant 2
  :unit (y / year)))))
  :part (t2 / texture
  :ARG1-of (r / remember-01
  :ARG0 (i / i)))
  :ARG1-of (t3 / throw-away-07
  :ARG0 w2
  :time (b / before
  :op1 (a2 / age-01
  :ARG1 i
  :ARG2 (t4 / temporal-quantity :quant 3
  :unit (y2 / year)))))))

",[{'PER': 'i'}],"(a / and
  :op2 (c / couch
  :domain (i2 / it)
  :mod (o / old)
  :ARG1-of (w / white-03)
  :ARG1-of (h / have-03
  :ARG0 (w2 / we)
  :time (b2 / before
  :time-of (a3 / age-01
  :ARG1 i
  :ARG2 (t / temporal-quantity :quant 2
  :unit (y / year)))))
  :part (t2 / texture
  :ARG1-of (r / remember-01
  :ARG0 (i / i)))
  :ARG1-of (t3 / throw-away-07
  :ARG0 w2
  :time (b / before
  :op1 (a2 / age-01
  :ARG1 i
  :ARG2 (t4 / temporal-quantity :quant 3
  :unit (y2 / year)))))))

",DiGraph with 24 nodes and 23 edges,and,texture,:part,and,texture,:part,a_0,a_0,t2_13,t2_13,inanimate
440,0,130,"(a / and
  :op2 (c / couch
  :domain (i2 / it)
  :mod (o / old)
  :ARG1-of (w / white-03)
  :ARG1-of (h / have-03
  :ARG0 (w2 / we)
  :time (b2 / before
  :time-of (a3 / age-01
  :ARG1 i
  :ARG2 (t / temporal-quantity :quant 2
  :unit (y / year)))))
  :part (t2 / texture
  :ARG1-of (r / remember-01
  :ARG0 (i / i)))
  :ARG1-of (t3 / throw-away-07
  :ARG0 w2
  :time (b / before
  :op1 (a2 / age-01
  :ARG1 i
  :ARG2 (t4 / temporal-quantity :quant 3
  :unit (y2 / year)))))))

",[{'PER': 'i'}],"(a / and
  :op2 (c / couch
  :domain (i2 / it)
  :mod (o / old)
  :ARG1-of (w / white-03)
  :ARG1-of (h / have-03
  :ARG0 (w2 / we)
  :time (b2 / before
  :time-of (a3 / age-01
  :ARG1 i
  :ARG2 (t / temporal-quantity :quant 2
  :unit (y / year)))))
  :part (t2 / texture
  :ARG1-of (r / remember-01
  :ARG0 (i / i)))
  :ARG1-of (t3 / throw-away-07
  :ARG0 w2
  :time (b / before
  :op1 (a2 / age-01
  :ARG1 i
  :ARG2 (t4 / temporal-quantity :quant 3
  :unit (y2 / year)))))))

",DiGraph with 24 nodes and 23 edges,and,old,:mod,and,old,:mod,a_0,a_0,o_3,o_3,inanimate
441,0,131,"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",[{'PER': 'i'}],"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",DiGraph with 19 nodes and 18 edges,infer-01,corduroy,:consist-of,infer-01,corduroy,:consist-of,i2_0,i2_0,c_7,c_7,inanimate
442,0,131,"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",[{'PER': 'i'}],"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",DiGraph with 19 nodes and 18 edges,infer-01,inner,:part,infer-01,inner,:part,i2_0,i2_0,i3_18,i3_18,inanimate
443,0,131,"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",[{'PER': 'i'}],"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",DiGraph with 19 nodes and 18 edges,infer-01,still,:mod,infer-01,still,:mod,i2_0,i2_0,s_3,s_3,inanimate
444,0,131,"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",[{'PER': 'i'}],"(i2 / infer-01
  :ARG1 (d / diaper-01
  :ARG1 (i / i)
  :mod (s / still))
  :ARG2 (s2 / snap-04
  :ARG0 (j / jumpsuit :quant 2
  :consist-of (c / corduroy)
  :ARG2-of (i4 / include-91
  :ARG1 (j2 / jumpsuit :quant 1
  :ARG1-of (p / pink-04)))
  :ARG2-of (i5 / include-91
  :ARG1 (j3 / jumpsuit :quant 1
  :mod (b / blue))))
  :direction (u / up)
  :path (l / leg
  :part (i3 / inner))))

",DiGraph with 19 nodes and 18 edges,infer-01,blue,:mod,infer-01,blue,:mod,i2_0,i2_0,b_15,b_15,inanimate
445,0,132,"(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

","[{'LOC': 'Seattle'}, {'LOC': 'Seattle'}, {'LOC': 'Upstate'}, {'LOC': 'New'}, {'LOC': 'York'}, {'LOC': 'Upstate'}, {'LOC': 'York'}, {'B_human': 'grandmother'}, {'B_human': 'person'}, {'B_human': 'aunt'}, {'PER': 'i'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

",DiGraph with 31 nodes and 30 edges,and,person,:consist-of,and,person,:op1,a_0,a_0,p2_21,p_16,animate
446,0,132,"(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

","[{'LOC': 'Seattle'}, {'LOC': 'Seattle'}, {'LOC': 'Upstate'}, {'LOC': 'New'}, {'LOC': 'York'}, {'LOC': 'Upstate'}, {'LOC': 'York'}, {'B_human': 'grandmother'}, {'B_human': 'person'}, {'B_human': 'aunt'}, {'PER': 'i'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

",DiGraph with 31 nodes and 30 edges,and,then,:mod,and,then,:mod,a_0,a_0,t_30,t_30,inanimate
447,0,132,"(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

","[{'LOC': 'Seattle'}, {'LOC': 'Seattle'}, {'LOC': 'Upstate'}, {'LOC': 'New'}, {'LOC': 'York'}, {'LOC': 'Upstate'}, {'LOC': 'York'}, {'B_human': 'grandmother'}, {'B_human': 'person'}, {'B_human': 'aunt'}, {'PER': 'i'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

",DiGraph with 31 nodes and 30 edges,and,local-region,:destination,and,local-region,:destination,a_0,a_0,l_7,l_7,inanimate
448,0,132,"(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

","[{'LOC': 'Seattle'}, {'LOC': 'Seattle'}, {'LOC': 'Upstate'}, {'LOC': 'New'}, {'LOC': 'York'}, {'LOC': 'Upstate'}, {'LOC': 'York'}, {'B_human': 'grandmother'}, {'B_human': 'person'}, {'B_human': 'aunt'}, {'PER': 'i'}, {'W_Inanimate': 'city'}]","(a / and
  :op1 (f / fly-01
  :ARG0 (w / we)
  :source (c2 / city :wiki ""Seattle""
  :name (n3 / name :op1 ""Seattle""))
  :destination (l / local-region :wiki ""Upstate_New_York""
  :name (n4 / name :op1 ""Upstate"" :op2 ""New"" :op3 ""York""))
  :purpose (v / visit-01
  :ARG0 w
  :ARG1 (a2 / and
  :op1 (p / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 (i / i)
  :ARG2 (g / grandmother)))
  :op2 (r / raft
  :consist-of (p2 / person
  :ARG0-of (h2 / have-org-role-91
  :ARG1 i
  :ARG2 (a3 / and
  :op1 (u / uncle)
  :op2 (a4 / aunt))))))))
  :op2 (d / drive-01
  :ARG0 w
  :ARG1 (b / back)
  :mod (t / then)))

",DiGraph with 31 nodes and 30 edges,and,city,:source,and,city,:source,a_0,a_0,c2_3,c2_3,inanimate
449,0,133,"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",[],"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",DiGraph with 10 nodes and 9 edges,turn-01,chimney,:part,turn-01,chimney,:part,t_0,t_0,c_5,c_5,inanimate
450,0,133,"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",[],"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",DiGraph with 10 nodes and 9 edges,turn-01,green,:mod,turn-01,green,:mod,t_0,t_0,g2_3,g2_3,inanimate
451,0,133,"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",[],"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",DiGraph with 10 nodes and 9 edges,turn-01,giant,:mod,turn-01,giant,:mod,t_0,t_0,g3_4,g3_4,inanimate
452,0,133,"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",[],"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",DiGraph with 10 nodes and 9 edges,turn-01,mile,:mod,turn-01,mile,:mod,t_0,t_0,m2_7,m2_7,inanimate
453,0,133,"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",[],"(t / turn-01
  :ARG0 (h / house
  :domain (a / another)
  :mod (g2 / green)
  :mod (g3 / giant)
  :part (c / chimney
  :ARG1-of (h5 / high-02
  :mod (m2 / mile))))
  :ARG1 (t2 / turbine
  :mod (w / wind)))

",DiGraph with 10 nodes and 9 edges,turn-01,wind,:mod,turn-01,wind,:mod,t_0,t_0,w_9,w_9,inanimate
454,0,134,"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",[{'W_Inanimate': 'location'}],"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",DiGraph with 12 nodes and 11 edges,make-01,top,:part,make-01,top,:part,m_0,m_0,t2_10,t2_10,inanimate
455,0,134,"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",[{'W_Inanimate': 'location'}],"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",DiGraph with 12 nodes and 11 edges,make-01,wind,:mod,make-01,wind,:mod,m_0,m_0,w_2,w_2,inanimate
456,0,134,"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",[{'W_Inanimate': 'location'}],"(m / make-01
  :ARG0 (t / turbine
  :mod (w / wind))
  :ARG1 (e / electricity)
  :mod (s / still)
  :time (b / blow-01
  :ARG0 w)
  :location (l / location
  :ARG2-of (i2 / include-91
  :ARG1 (r / ridge
  :part (t2 / top)))
  :quant (f / few)))

",DiGraph with 12 nodes and 11 edges,make-01,still,:mod,make-01,still,:mod,m_0,m_0,s_4,s_4,inanimate
457,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,cause-01,:ARG0-of,absent-01,cause-01,cause-01,a2_0,c_26,c_26,a2_0,inanimate
458,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,cause-01,:ARG0-of,absent-01,cause-01,cause-01,a2_0,c_26,c_26,a2_0,inanimate
459,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,barrel,:part,absent-01,barrel,:part,a2_0,a2_0,b_7,b_7,inanimate
460,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,well,:mod,absent-01,well,:mod,a2_0,a2_0,w2_18,w2_18,inanimate
461,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,some,:mod,absent-01,some,:mod,a2_0,a2_0,s5_22,s5_22,inanimate
462,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,any,:mod,absent-01,any,:mod,a2_0,a2_0,a3_25,a3_25,inanimate
463,0,135,"(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

","[{'MISC': 'United'}, {'MISC': 'States'}, {'MISC': 'Constitution'}, {'PER': 'i'}, {'W_Inanimate': 'law'}]","(a2 / absent-01
  :ARG1 (e / evidence-01
  :ARG1 (t / tend-02
  :ARG1 (s3 / show-01
  :ARG1 (o2 / or
  :op1 (p2 / possess-01
  :ARG1 (s4 / shotgun
  :part (b / barrel
  :ARG1-of (l3 / long-03
  :ARG2 (l / less-than
  :op1 (d / distance-quantity :quant 18
  :unit (i2 / inch))))))
  :ARG1-of (r3 / relation-03
  :ARG2 (o3 / or
  :op1 (p3 / preserve-01
  :ARG1 (r2 / regulate-01
  :ARG1 (m / militia)
  :mod (w2 / well)))
  :op2 (e2 / efficient-01
  :ARG1 r2))
  :ARG1-of (r4 / reasonable-02
  :mod (s5 / some))))
  :op2 (u / use-01
  :ARG1 s4))))
  :mod (a3 / any))
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (s / say-01
  :ARG0 (w / we)
  :ARG1 (g / guarantee-01
  :ARG0 (l2 / law :wiki ""Second_Amendment_to_the_United_States_Constitution"" :name (n / name :op1 ""Second"" :op2 ""Amendment""))
  :ARG1 (r / right-05
  :ARG2 (a / and
  :op1 (k / keep-01
  :ARG1 (i / instrument
  :mod (s2 / such)))
  :op2 (b2 / bear-01
  :ARG1 i))))))))

",DiGraph with 44 nodes and 43 edges,absent-01,such,:mod,absent-01,such,:mod,a2_0,a2_0,s2_41,s2_41,inanimate
464,0,136,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,eye,:part,contrast-01,eye,:part,c_0,c_0,e_20,e_20,inanimate
465,0,136,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,lip,:part,contrast-01,lip,:part,c_0,c_0,l_22,l_22,inanimate
466,0,136,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,any,:mod,contrast-01,any,:mod,c_0,c_0,a_5,a_5,inanimate
467,0,137,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,eye,:part,contrast-01,eye,:part,c_0,c_0,e_20,e_20,inanimate
468,0,137,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,lip,:part,contrast-01,lip,:part,c_0,c_0,l_22,l_22,inanimate
469,0,137,"(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

","[{'MISC': 'The'}, {'MISC': 'Story'}, {'MISC': 'of'}, {'MISC': 'Little'}, {'MISC': 'Black'}, {'MISC': 'Sambo'}, {'ORG': 'L'}, {'MISC': 'Sambo'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(c / contrast-01
  :ARG1 (r / read-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (b / book
  :mod (a / any)
  :poss (b3 / book :wiki ""The_Story_of_Little_Black_Sambo"" :name (n / name :op1 ""LBS""))))
  :ARG2 (s / see-01
  :ARG0 i
  :ARG1 (d / depict-01
  :ARG0 (s2 / short-07
  :ARG1 (m / movie)
  :quant (m2 / many))
  :ARG1 (p / person :wiki ""Sambo_(racial_term)"" :name (n2 / name :op1 ""Sambo"")
  :part (e / eye
  :ARG1-of (w / wide-02))
  :part (l / lip
  :ARG1-of (w2 / wide-02)
  :ARG1-of (w3 / white-03))
  :ARG1-of (s3 / stereotypic-02)
  :ARG1-of (c3 / concoct-01
  :ARG1-of (s5 / seem-01)
  :purpose (d2 / denigrate-01
  :ARG1 (p2 / person
  :ARG1-of (b2 / black-05))))))))

",DiGraph with 31 nodes and 30 edges,contrast-01,any,:mod,contrast-01,any,:mod,c_0,c_0,a_5,a_5,inanimate
470,0,138,"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",[],"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",DiGraph with 17 nodes and 16 edges,and,inside,:part,and,inside,:part,a_0,a_0,i3_5,i3_5,inanimate
471,0,138,"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",[],"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",DiGraph with 17 nodes and 16 edges,and,outside,:part,and,outside,:part,a_0,a_0,o2_13,o2_13,inanimate
472,0,138,"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",[],"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",DiGraph with 17 nodes and 16 edges,and,front,:mod,and,front,:mod,a_0,a_0,f_4,f_4,inanimate
473,0,138,"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",[],"(a / and
  :op1 (i2 / indicate-01
  :ARG0 (w / wear-01
  :ARG1 (p / part
  :mod (f / front
  :part (i3 / inside))
  :part-of (s / shoe))
  :ARG1-of (e / excessive-02))
  :ARG1 (p2 / pronate-01
  :ARG1-of (o / over-03)))
  :op2 (i4 / indicate-01
  :ARG0 (w2 / wear-01
  :ARG1 (f2 / front
  :part (o2 / outside)
  :part-of s)
  :mod (s2 / such))
  :ARG1 (s3 / supinate-01)))

",DiGraph with 17 nodes and 16 edges,and,such,:mod,and,such,:mod,a_0,a_0,s2_15,s2_15,inanimate
474,0,139,"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",[{'B_human': 'person'}],"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",DiGraph with 22 nodes and 21 edges,stare-01,brain,:part,stare-01,brain,:part,s_0,s_0,b_2,b_2,inanimate
475,0,139,"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",[{'B_human': 'person'}],"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",DiGraph with 22 nodes and 21 edges,stare-01,even,:mod,stare-01,even,:mod,s_0,s_0,e2_17,e2_17,inanimate
476,0,139,"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",[{'B_human': 'person'}],"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",DiGraph with 22 nodes and 21 edges,stare-01,apathetic,:mod,stare-01,apathetic,:mod,s_0,s_0,a_18,a_18,inanimate
477,0,139,"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",[{'B_human': 'person'}],"(s / stare-01
  :ARG0 (p / person
  :part (b / brain
  :ARG1-of (h / have-degree-91
  :ARG2 (c / clog-up-03
  :ARG1 b)
  :ARG3 (s2 / so)
  :ARG6 (k / know-01 :polarity -
  :ARG0 p
  :ARG2-of (h2 / have-degree-91
  :ARG1 p
  :ARG3 (e / enough)
  :ARG6 (s3 / say-01
  :ARG0 p
  :ARG1 (m / morning
  :ARG1-of (g / good-02))))
  :mod (e2 / even)))))
  :mod (a / apathetic)
  :mod (j / just)
  :time (s4 / since
  :op1 (t / then)))

",DiGraph with 22 nodes and 21 edges,stare-01,just,:mod,stare-01,just,:mod,s_0,s_0,j_19,j_19,inanimate
478,0,140,"(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'LOC': 'US'}, {'ORG': 'Navy'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'PER': 'US'}, {'W_Animate': 'military'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

",DiGraph with 20 nodes and 19 edges,mean-01,cargo,:mod,mean-01,cargo,:mod,m2_0,m2_0,c3_11,c3_11,inanimate
479,0,140,"(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'LOC': 'US'}, {'ORG': 'Navy'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'PER': 'US'}, {'W_Animate': 'military'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

",DiGraph with 20 nodes and 19 edges,mean-01,country,:mod,mean-01,country,:mod,m2_0,m2_0,c_12,c_12,inanimate
480,0,140,"(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'LOC': 'US'}, {'ORG': 'Navy'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'PER': 'US'}, {'W_Animate': 'military'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m2 / mean-01 :polarity -
  :ARG1 (t / that)
  :ARG2 (s / stop-01 :polarity -
  :ARG0 (m / military :wiki ""United_States_Navy"" :name (n / name :op1 ""US"" :op2 ""Navy""))
  :ARG1 (s2 / ship
  :mod (c3 / cargo)
  :mod (c / country :wiki ""North_Korea"" :name (n2 / name :op1 ""North"" :op2 ""Korea""))
  :destination (c2 / country :wiki ""Iran"" :name (n3 / name :op1 ""Iran"")))))

",DiGraph with 20 nodes and 19 edges,mean-01,country,:destination,mean-01,country,:mod,m2_0,m2_0,c2_17,c_12,inanimate
481,0,141,"(a / and
  :op1 (b / box-03
  :ARG0 (i / i
  :part (e / ear)))
  :op2 (r / run-16
  :ARG0 i
  :ARG2 (s / school
  :poss i)
  :manner (c / cry-02
  :ARG0 i)
  :frequency (t / time
  :ARG1-of (h2 / have-degree-91
  :ARG2 (m / many)
  :ARG3 (s2 / so))))
  :op3 (t2 / throw-01
  :ARG0 (k / kid)
  :ARG1 (a2 / and
  :op1 (s3 / snowball)
  :op2 (a3 / apple)
  :op3 (r2 / rock
  :mod (e2 / even)))
  :ARG2 i))

","[{'B_human': 'kid'}, {'PER': 'i'}]","(a / and
  :op1 (b / box-03
  :ARG0 (i / i
  :part (e / ear)))
  :op2 (r / run-16
  :ARG0 i
  :ARG2 (s / school
  :poss i)
  :manner (c / cry-02
  :ARG0 i)
  :frequency (t / time
  :ARG1-of (h2 / have-degree-91
  :ARG2 (m / many)
  :ARG3 (s2 / so))))
  :op3 (t2 / throw-01
  :ARG0 (k / kid)
  :ARG1 (a2 / and
  :op1 (s3 / snowball)
  :op2 (a3 / apple)
  :op3 (r2 / rock
  :mod (e2 / even)))
  :ARG2 i))

",DiGraph with 22 nodes and 21 edges,and,ear,:part,and,ear,:part,a_0,a_0,e_3,e_3,inanimate
482,0,141,"(a / and
  :op1 (b / box-03
  :ARG0 (i / i
  :part (e / ear)))
  :op2 (r / run-16
  :ARG0 i
  :ARG2 (s / school
  :poss i)
  :manner (c / cry-02
  :ARG0 i)
  :frequency (t / time
  :ARG1-of (h2 / have-degree-91
  :ARG2 (m / many)
  :ARG3 (s2 / so))))
  :op3 (t2 / throw-01
  :ARG0 (k / kid)
  :ARG1 (a2 / and
  :op1 (s3 / snowball)
  :op2 (a3 / apple)
  :op3 (r2 / rock
  :mod (e2 / even)))
  :ARG2 i))

","[{'B_human': 'kid'}, {'PER': 'i'}]","(a / and
  :op1 (b / box-03
  :ARG0 (i / i
  :part (e / ear)))
  :op2 (r / run-16
  :ARG0 i
  :ARG2 (s / school
  :poss i)
  :manner (c / cry-02
  :ARG0 i)
  :frequency (t / time
  :ARG1-of (h2 / have-degree-91
  :ARG2 (m / many)
  :ARG3 (s2 / so))))
  :op3 (t2 / throw-01
  :ARG0 (k / kid)
  :ARG1 (a2 / and
  :op1 (s3 / snowball)
  :op2 (a3 / apple)
  :op3 (r2 / rock
  :mod (e2 / even)))
  :ARG2 i))

",DiGraph with 22 nodes and 21 edges,and,even,:mod,and,even,:mod,a_0,a_0,e2_20,e2_20,inanimate
483,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,ice,:consist-of,seem-01,ice,:consist-of,s_0,s_0,i2_10,i2_10,inanimate
484,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,melt-01,:condition,seem-01,melt-01,:condition,s_0,s_0,m2_8,m2_8,inanimate
485,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,west,:part,seem-01,west,:part,s_0,s_0,w2_16,w2_16,inanimate
486,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,ocean,:mod,seem-01,ocean,:mod,s_0,s_0,o_3,o_3,inanimate
487,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,all,:mod,seem-01,all,:mod,s_0,s_0,a_11,a_11,inanimate
488,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,world-region,:mod,seem-01,world-region,:mod,s_0,s_0,w3_12,w3_12,inanimate
489,0,142,"(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

","[{'LOC': 'Antarctic'}, {'LOC': 'Antarctic'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(s / seem-01
  :ARG1 (r / rise-01
  :ARG1 (l / level
  :mod (o / ocean))
  :ARG2 (d / distance-quantity :quant 5
  :unit (m / meter))
  :location (w / worldwide)
  :condition (m2 / melt-01
  :ARG1 (s2 / sheet
  :consist-of (i2 / ice)
  :mod (a / all)
  :mod (w3 / world-region :wiki ""Antarctic"" :name (n / name :op1 ""Antarctic"")
  :part (w2 / west))
  :location (a2 / and
  :op2 (a3 / above
  :op1 (l2 / level
  :mod (s3 / sea))
  :op2 (b / below
  :op2 l2)))))))

",DiGraph with 23 nodes and 22 edges,seem-01,sea,:mod,seem-01,sea,:mod,s_0,s_0,s3_20,s3_20,inanimate
490,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,ice,:consist-of,hear-01,ice,:consist-of,h_0,h_0,i4_18,i4_18,inanimate
491,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,complete-02,:condition,hear-01,complete-02,:condition,h_0,h_0,c_38,c_38,inanimate
492,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,west,:part,hear-01,west,:part,h_0,h_0,w4_23,w4_23,inanimate
493,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,climate,:mod,hear-01,climate,:mod,h_0,h_0,c3_6,c3_6,inanimate
494,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,continent,:mod,hear-01,continent,:mod,h_0,h_0,c4_19,c4_19,inanimate
495,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,massive,:mod,hear-01,massive,:mod,h_0,h_0,m3_24,m3_24,inanimate
496,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,event,:mod,hear-01,event,:mod,h_0,h_0,e_25,e_25,inanimate
497,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,sea,:mod,hear-01,sea,:mod,h_0,h_0,s2_28,s2_28,inanimate
498,0,143,"(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

","[{'MISC': 'British'}, {'MISC': 'Antarctic'}, {'MISC': 'Survey'}, {'MISC': 'British'}, {'LOC': 'Antarctic'}, {'MISC': 'Survey'}, {'LOC': 'Antarctica'}, {'LOC': 'Antarctica'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}]","(h / hear-01
  :ARG0 (i2 / it)
  :ARG1 (t2 / thing
  :ARG1-of (w3 / warn-01
  :ARG0 (r / research-01
  :ARG1 (c2 / change-01
  :mod (c3 / climate)))
  :ARG2-of (i3 / include-01
  :ARG1 (r2 / reveal-01
  :ARG0 (o / organization :wiki ""British_Antarctic_Survey""
  :name (n3 / name :op1 ""British"" :op2 ""Antarctic"" :op3 ""Survey""))
  :ARG1 (p / possible-01
  :ARG1 (d3 / disintegrate-01
  :ARG1 (s / sheet
  :consist-of (i4 / ice)
  :mod (c4 / continent :wiki ""Antarctica""
  :name (n4 / name :op1 ""Antarctica"")
  :part (w4 / west))
  :mod (m3 / massive))
  :mod (e / event
  :ARG0-of (r4 / raise-01
  :ARG1 (l2 / level
  :mod (s2 / sea))
  :ARG4 (d2 / distance-quantity :quant 16
  :unit (f / foot)
  :ARG1-of (m / mean-01
  :ARG2 (d5 / distance-quantity :quant 4.6
  :unit (m2 / meter))))
  :location (a / around
  :op1 (w2 / world))
  :condition (c / complete-02)))))
  :time (d / date-entity
  :weekday (t / tuesday)
  :mod (l / last)))))
  :ARG0-of (d4 / disturb-01))
  :time (a2 / already))

",DiGraph with 44 nodes and 43 edges,hear-01,last,:mod,hear-01,last,:mod,h_0,h_0,l_41,l_41,inanimate
499,0,144,"(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

","[{'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'of'}, {'LOC': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'Texas'}, {'LOC': 'Texas'}, {'LOC': 'Florida'}, {'LOC': 'Florida'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'state'}]","(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

",DiGraph with 25 nodes and 24 edges,develop-01,wise,:mod,develop-01,wise,:mod,d_0,d_0,w3_18,w3_18,inanimate
500,0,144,"(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

","[{'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'of'}, {'LOC': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'Texas'}, {'LOC': 'Texas'}, {'LOC': 'Florida'}, {'LOC': 'Florida'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'state'}]","(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

",DiGraph with 25 nodes and 24 edges,develop-01,probable,:mod,develop-01,probable,:mod,d_0,d_0,p2_20,p2_20,inanimate
501,0,144,"(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

","[{'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'of'}, {'LOC': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'Texas'}, {'LOC': 'Texas'}, {'LOC': 'Florida'}, {'LOC': 'Florida'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'state'}]","(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

",DiGraph with 25 nodes and 24 edges,develop-01,state,:destination,develop-01,state,:source,d_0,d_0,s_13,s3_9,inanimate
502,0,144,"(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

","[{'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'of'}, {'LOC': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Gulf'}, {'LOC': 'Coast'}, {'LOC': 'Texas'}, {'LOC': 'Texas'}, {'LOC': 'Florida'}, {'LOC': 'Florida'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'state'}]","(d / develop-01 :li 3
  :ARG1 (c / country-region :wiki ""Gulf_Coast_of_the_United_States""
  :name (n3 / name :op1 ""Gulf"" :op2 ""Coast""))
  :ARG2 (p / property
  :location (s2 / shoreline)
  :source (s3 / state :wiki ""Texas""
  :name (n4 / name :op1 ""Texas""))
  :destination (s / state :wiki ""Florida""
  :name (n2 / name :op1 ""Florida"")))
  :manner (w2 / wholesale-01)
  :mod (w3 / wise :polarity -
  :mod (p2 / probable))
  :time (b / before
  :op1 (n5 / now)
  :duration (t / temporal-quantity :quant 30
  :unit (y / year))))

",DiGraph with 25 nodes and 24 edges,develop-01,state,:source,develop-01,state,:source,d_0,d_0,s3_9,s3_9,inanimate
503,0,145,"(c / cause-01
  :ARG1 (p / possible-01
  :ARG1 (a / appear-01
  :ARG1 (o / or
  :op1 (w / woman
  :part (f / face
  :ARG1-of (s / sad-02))
  :ARG0-of (w2 / word-01
  :ARG1 (d / die-01
  :ARG1 (c2 / cat
  :poss w)
  :time (p2 / political-party :wiki ""Labour_Party_(UK)""
  :name (n / name :op1 ""Labour"")))))
  :op2 (c3 / chap
  :ARG1-of (h / happy-01)
  :ARG0-of (w3 / word-01
  :ARG1 (w4 / win-01
  :ARG0 (w5 / we)
  :ARG2 (g / game :wiki ""Cricket_World_Cup""
  :name (n2 / name :op1 ""Cup""))
  :time (p3 / political-party :wiki ""Conservative_Party_(UK)""
  :name (n3 / name :op1 ""Conservatives"")))))))))

","[{'ORG': 'Labour_Party'}, {'LOC': 'UK'}, {'ORG': 'Labour'}, {'MISC': 'Cricket'}, {'MISC': 'World_Cup'}, {'MISC': 'Cup'}, {'ORG': 'Conservative_Party'}, {'LOC': 'UK'}, {'ORG': 'Conservatives'}, {'B_human': 'woman'}, {'W_Inanimate': 'game'}]","(c / cause-01
  :ARG1 (p / possible-01
  :ARG1 (a / appear-01
  :ARG1 (o / or
  :op1 (w / woman
  :part (f / face
  :ARG1-of (s / sad-02))
  :ARG0-of (w2 / word-01
  :ARG1 (d / die-01
  :ARG1 (c2 / cat
  :poss w)
  :time (p2 / political-party :wiki ""Labour_Party_(UK)""
  :name (n / name :op1 ""Labour"")))))
  :op2 (c3 / chap
  :ARG1-of (h / happy-01)
  :ARG0-of (w3 / word-01
  :ARG1 (w4 / win-01
  :ARG0 (w5 / we)
  :ARG2 (g / game :wiki ""Cricket_World_Cup""
  :name (n2 / name :op1 ""Cup""))
  :time (p3 / political-party :wiki ""Conservative_Party_(UK)""
  :name (n3 / name :op1 ""Conservatives"")))))))))

",DiGraph with 28 nodes and 27 edges,cause-01,face,:part,cause-01,face,:part,c_0,c_0,f_5,f_5,inanimate
504,0,146,"(a4 / and
  :op1 (a2 / announce-01
  :ARG1 (t / thing
  :ARG2-of (r / result-01
  :ARG1 (b2 / ballot
  :part (p / person
  :ARG0-of (w / work-01
  :ARG2 (c / company :wiki ""NHS_Supply_Chain"" :name (n / name :op1 ""NHS"" :op2 ""Logistics"")))
  :quant (a3 / almost :op1 1000)))))
  :time (t2 / tomorrow))
  :op2 (p2 / possible-01
  :ARG1 (h2 / herald-01
  :ARG1 (b3 / bout
  :topic (a5 / act-02
  :ARG1 (o / oppose-01
  :ARG1 (p3 / privatize-01
  :ARG1 (s / serve-01
  :ARG0 (g / government-organization :wiki ""National_Health_Service"" :name (n2 / name :op1 ""NHS"")))))
  :mod (i2 / industry))
  :ARG1-of (h3 / have-degree-91
  :ARG2 (b4 / big)
  :ARG3 (m2 / most))))))

","[{'ORG': 'NHS'}, {'ORG': 'Supply'}, {'ORG': 'Chain'}, {'ORG': 'NHS'}, {'ORG': 'National_Health_Service'}, {'ORG': 'NHS'}, {'W_Animate': 'company'}]","(a4 / and
  :op1 (a2 / announce-01
  :ARG1 (t / thing
  :ARG2-of (r / result-01
  :ARG1 (b2 / ballot
  :part (p / person
  :ARG0-of (w / work-01
  :ARG2 (c / company :wiki ""NHS_Supply_Chain"" :name (n / name :op1 ""NHS"" :op2 ""Logistics"")))
  :quant (a3 / almost :op1 1000)))))
  :time (t2 / tomorrow))
  :op2 (p2 / possible-01
  :ARG1 (h2 / herald-01
  :ARG1 (b3 / bout
  :topic (a5 / act-02
  :ARG1 (o / oppose-01
  :ARG1 (p3 / privatize-01
  :ARG1 (s / serve-01
  :ARG0 (g / government-organization :wiki ""National_Health_Service"" :name (n2 / name :op1 ""NHS"")))))
  :mod (i2 / industry))
  :ARG1-of (h3 / have-degree-91
  :ARG2 (b4 / big)
  :ARG3 (m2 / most))))))

",DiGraph with 30 nodes and 29 edges,and,person,:part,and,person,:part,a4_0,a4_0,p_5,p_5,animate
505,0,146,"(a4 / and
  :op1 (a2 / announce-01
  :ARG1 (t / thing
  :ARG2-of (r / result-01
  :ARG1 (b2 / ballot
  :part (p / person
  :ARG0-of (w / work-01
  :ARG2 (c / company :wiki ""NHS_Supply_Chain"" :name (n / name :op1 ""NHS"" :op2 ""Logistics"")))
  :quant (a3 / almost :op1 1000)))))
  :time (t2 / tomorrow))
  :op2 (p2 / possible-01
  :ARG1 (h2 / herald-01
  :ARG1 (b3 / bout
  :topic (a5 / act-02
  :ARG1 (o / oppose-01
  :ARG1 (p3 / privatize-01
  :ARG1 (s / serve-01
  :ARG0 (g / government-organization :wiki ""National_Health_Service"" :name (n2 / name :op1 ""NHS"")))))
  :mod (i2 / industry))
  :ARG1-of (h3 / have-degree-91
  :ARG2 (b4 / big)
  :ARG3 (m2 / most))))))

","[{'ORG': 'NHS'}, {'ORG': 'Supply'}, {'ORG': 'Chain'}, {'ORG': 'NHS'}, {'ORG': 'National_Health_Service'}, {'ORG': 'NHS'}, {'W_Animate': 'company'}]","(a4 / and
  :op1 (a2 / announce-01
  :ARG1 (t / thing
  :ARG2-of (r / result-01
  :ARG1 (b2 / ballot
  :part (p / person
  :ARG0-of (w / work-01
  :ARG2 (c / company :wiki ""NHS_Supply_Chain"" :name (n / name :op1 ""NHS"" :op2 ""Logistics"")))
  :quant (a3 / almost :op1 1000)))))
  :time (t2 / tomorrow))
  :op2 (p2 / possible-01
  :ARG1 (h2 / herald-01
  :ARG1 (b3 / bout
  :topic (a5 / act-02
  :ARG1 (o / oppose-01
  :ARG1 (p3 / privatize-01
  :ARG1 (s / serve-01
  :ARG0 (g / government-organization :wiki ""National_Health_Service"" :name (n2 / name :op1 ""NHS"")))))
  :mod (i2 / industry))
  :ARG1-of (h3 / have-degree-91
  :ARG2 (b4 / big)
  :ARG3 (m2 / most))))))

",DiGraph with 30 nodes and 29 edges,and,industry,:mod,and,industry,:mod,a4_0,a4_0,i2_26,i2_26,inanimate
506,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,camp,:part,hold-04,camp,:part,h_0,h_0,c_3,c_3,inanimate
507,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,camp,:part,hold-04,camp,:part,h_0,h_0,c2_8,c_3,inanimate
508,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,tentative,:mod,hold-04,tentative,:mod,h_0,h_0,t2_2,t2_2,inanimate
509,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,person,:mod,hold-04,person,:mod,h_0,h_0,p_4,p_4,inanimate
510,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,person,:mod,hold-04,person,:mod,h_0,h_0,p2_9,p_4,inanimate
511,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,so-far,:mod,hold-04,so-far,:mod,h_0,h_0,s2_13,s2_13,inanimate
512,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,early,:mod,hold-04,early,:mod,h_0,h_0,e2_22,e2_22,inanimate
513,0,147,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,tumultuous,:mod,hold-04,tumultuous,:mod,h_0,h_0,t3_23,t3_23,inanimate
514,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,camp,:part,hold-04,camp,:part,h_0,h_0,c_3,c_3,inanimate
515,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,camp,:part,hold-04,camp,:part,h_0,h_0,c2_8,c_3,inanimate
516,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,tentative,:mod,hold-04,tentative,:mod,h_0,h_0,t2_2,t2_2,inanimate
517,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,person,:mod,hold-04,person,:mod,h_0,h_0,p_4,p_4,inanimate
518,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,person,:mod,hold-04,person,:mod,h_0,h_0,p2_9,p_4,inanimate
519,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,so-far,:mod,hold-04,so-far,:mod,h_0,h_0,s2_13,s2_13,inanimate
520,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,early,:mod,hold-04,early,:mod,h_0,h_0,e2_22,e2_22,inanimate
521,0,148,"(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

","[{'PER': 'Tony'}, {'MISC': 'Blair'}, {'PER': 'Blair'}, {'PER': 'Gordon'}, {'PER': 'Brown'}, {'PER': 'Brown'}, {'LOC': 'Manchester'}, {'LOC': 'Manchester'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(h / hold-04
  :ARG1 (t / truce
  :mod (t2 / tentative)
  :part (c / camp
  :mod (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Blair"")))
  :part (c2 / camp
  :mod (p2 / person :wiki ""Gordon_Brown"" :name (n2 / name :op1 ""Brown""))))
  :mod (s2 / so-far)
  :location (c3 / city :wiki ""Manchester"" :name (n3 / name :op1 ""Manchester""))
  :time (a / after
  :op1 (i2 / infight-05
  :time (d / date-entity :month 9
  :mod (e2 / early))
  :mod (t3 / tumultuous))))

",DiGraph with 24 nodes and 23 edges,hold-04,tumultuous,:mod,hold-04,tumultuous,:mod,h_0,h_0,t3_23,t3_23,inanimate
522,0,149,"(o / obligate-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Mr"" :op2 ""Blair""))
  :ARG2 (s / stand-01
  :ARG1 p
  :location (t / there)
  :ARG1-of (r / resemble-01
  :ARG2 (a / and
  :op1 (b / be-located-at-91
  :ARG1 p
  :ARG2 (s2 / stock))
  :op2 (a2 / arrive-01
  :ARG1 (i2 / idiot
  :mod (v / village)
  :ARG0-of (h / have-03
  :ARG1 (b2 / basket
  :part (f / fruit
  :ARG1-of (r2 / rot-01))))))))))

","[{'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Blair'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(o / obligate-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Mr"" :op2 ""Blair""))
  :ARG2 (s / stand-01
  :ARG1 p
  :location (t / there)
  :ARG1-of (r / resemble-01
  :ARG2 (a / and
  :op1 (b / be-located-at-91
  :ARG1 p
  :ARG2 (s2 / stock))
  :op2 (a2 / arrive-01
  :ARG1 (i2 / idiot
  :mod (v / village)
  :ARG0-of (h / have-03
  :ARG1 (b2 / basket
  :part (f / fruit
  :ARG1-of (r2 / rot-01))))))))))

",DiGraph with 21 nodes and 20 edges,obligate-01,fruit,:part,obligate-01,fruit,:part,o_0,o_0,f_19,f_19,inanimate
523,0,149,"(o / obligate-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Mr"" :op2 ""Blair""))
  :ARG2 (s / stand-01
  :ARG1 p
  :location (t / there)
  :ARG1-of (r / resemble-01
  :ARG2 (a / and
  :op1 (b / be-located-at-91
  :ARG1 p
  :ARG2 (s2 / stock))
  :op2 (a2 / arrive-01
  :ARG1 (i2 / idiot
  :mod (v / village)
  :ARG0-of (h / have-03
  :ARG1 (b2 / basket
  :part (f / fruit
  :ARG1-of (r2 / rot-01))))))))))

","[{'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Blair'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(o / obligate-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Mr"" :op2 ""Blair""))
  :ARG2 (s / stand-01
  :ARG1 p
  :location (t / there)
  :ARG1-of (r / resemble-01
  :ARG2 (a / and
  :op1 (b / be-located-at-91
  :ARG1 p
  :ARG2 (s2 / stock))
  :op2 (a2 / arrive-01
  :ARG1 (i2 / idiot
  :mod (v / village)
  :ARG0-of (h / have-03
  :ARG1 (b2 / basket
  :part (f / fruit
  :ARG1-of (r2 / rot-01))))))))))

",DiGraph with 21 nodes and 20 edges,obligate-01,village,:mod,obligate-01,village,:mod,o_0,o_0,v_16,v_16,inanimate
524,0,150,"(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

","[{'PER': 'Nicolas'}, {'PER': 'Sarkoz'}, {'PER': 'Nicolas'}, {'PER': 'Sa'}, {'LOC': 'rk'}, {'PER': 'oz'}, {'LOC': 'y'}, {'LOC': 'France'}, {'LOC': 'France'}, {'ORG': 'European_Union'}, {'ORG': 'EU'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'organization'}]","(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

",DiGraph with 44 nodes and 43 edges,strengthen-01,nation,:part,strengthen-01,nation,:part,s_0,s_0,n4_35,n4_35,inanimate
525,0,150,"(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

","[{'PER': 'Nicolas'}, {'PER': 'Sarkoz'}, {'PER': 'Nicolas'}, {'PER': 'Sa'}, {'LOC': 'rk'}, {'PER': 'oz'}, {'LOC': 'y'}, {'LOC': 'France'}, {'LOC': 'France'}, {'ORG': 'European_Union'}, {'ORG': 'EU'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'organization'}]","(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

",DiGraph with 44 nodes and 43 edges,strengthen-01,last,:mod,strengthen-01,last,:mod,s_0,s_0,l_26,l_26,inanimate
526,0,150,"(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

","[{'PER': 'Nicolas'}, {'PER': 'Sarkoz'}, {'PER': 'Nicolas'}, {'PER': 'Sa'}, {'LOC': 'rk'}, {'PER': 'oz'}, {'LOC': 'y'}, {'LOC': 'France'}, {'LOC': 'France'}, {'ORG': 'European_Union'}, {'ORG': 'EU'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'organization'}]","(s / strengthen-01
  :ARG0 (p2 / perform-02
  :ARG0 (p / person :wiki ""Nicolas_Sarkozy""
  :name (n2 / name :op1 ""Nicolas"" :op2 ""Sarkozy"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (c / country :wiki ""France""
  :name (n3 / name :op1 ""France""))
  :ARG2 (p3 / president)))
  :ARG0-of (i2 / impress-01)
  :time (s2 / spell
  :duration (t / temporal-quantity :quant 6
  :unit (m / month))
  :poss p
  :topic (c2 / charge-08
  :ARG1 p
  :ARG2 (o / organization :wiki ""European_Union""
  :name (n / name :op1 ""EU""))
  :time (y / year
  :mod (l / last)))))
  :ARG1 (h2 / hand
  :part-of (p4 / person
  :ARG0-of (s3 / say-01
  :ARG1 (r / recommend-01
  :ARG1 (g / guide-01
  :ARG0 (n5 / name
  :mod (b2 / big))
  :ARG1 (b / bloc
  :part (n4 / nation :quant 27)))))))
  :ARG1-of (s4 / say-01
  :ARG0 (p5 / person
  :ARG0-of (h3 / have-org-role-91
  :ARG1 o
  :ARG2 (a / and
  :op1 (o2 / official)
  :op2 (d / diplomat))))))

",DiGraph with 44 nodes and 43 edges,strengthen-01,big,:mod,strengthen-01,big,:mod,s_0,s_0,b2_33,b2_33,inanimate
527,0,151,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,plug,:part,have-03,plug,:part,h_0,h_0,p2_6,p2_6,inanimate
528,0,151,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,piece,:part,have-03,piece,:part,h_0,h_0,p3_7,p3_7,inanimate
529,0,151,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,early,:mod,have-03,early,:mod,h_0,h_0,e2_10,e2_10,inanimate
530,0,151,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,prime,:mod,have-03,prime,:mod,h_0,h_0,p4_19,p4_19,inanimate
531,0,152,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,plug,:part,have-03,plug,:part,h_0,h_0,p2_6,p2_6,inanimate
532,0,152,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,piece,:part,have-03,piece,:part,h_0,h_0,p3_7,p3_7,inanimate
533,0,152,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,early,:mod,have-03,early,:mod,h_0,h_0,e2_10,e2_10,inanimate
534,0,152,"(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'PER': 'Tony'}, {'PER': 'Blair'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'minister'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(h / have-03
  :ARG0 (n4 / newspaper :wiki ""The_Times"" :name (n3 / name :op1 ""The"" :op2 ""Times"")
  :part (p2 / plug
  :part (p3 / piece)
  :time (d / date-entity
  :weekday (s / saturday))
  :mod (e2 / early)))
  :ARG1 (i2 / interview-01
  :ARG1 (p / person :wiki ""Tony_Blair"" :name (n / name :op1 ""Tony"" :op2 ""Blair"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m2 / minister
  :mod (p4 / prime)))
  :time (f / former))
  :ARG0-of (e / exclusive-02)
  :location-of (c2 / close-06
  :ARG1 p
  :ARG2 (a / admit-01
  :ARG0 p
  :ARG1 (s2 / suffer-01
  :ARG0 p
  :ARG1 (d2 / doubt-01
  :ARG0 p
  :ARG1 (d3 / decide-01
  :ARG0 p
  :ARG1 (i3 / invade-01
  :ARG0 p
  :ARG1 (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))))))))))

",DiGraph with 38 nodes and 37 edges,have-03,prime,:mod,have-03,prime,:mod,h_0,h_0,p4_19,p4_19,inanimate
535,0,153,"(a / and
  :op1 (s / stop-01
  :ARG0 (g / guy)
  :ARG1 (i / i)
  :time (w / walk-01 :frequency 1
  :ARG1 i
  :source (c / college)))
  :op2 (a2 / ask-01
  :ARG0 g
  :ARG1 (d / direct-01
  :ARG0 i
  :ARG1 g)
  :ARG2 i))

",[{'PER': 'i'}],"(a / and
  :op1 (s / stop-01
  :ARG0 (g / guy)
  :ARG1 (i / i)
  :time (w / walk-01 :frequency 1
  :ARG1 i
  :source (c / college)))
  :op2 (a2 / ask-01
  :ARG0 g
  :ARG1 (d / direct-01
  :ARG0 i
  :ARG1 g)
  :ARG2 i))

",DiGraph with 14 nodes and 13 edges,and,college,:source,and,college,:source,a_0,a_0,c_7,c_7,inanimate
536,0,154,"(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

","[{'PER': 'i'}, {'W_Inanimate': 'festival'}]","(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

",DiGraph with 24 nodes and 23 edges,contrast-01,cause-01,:ARG0-of,contrast-01,cause-01,cause-01,c_0,c3_19,c3_19,c_0,inanimate
537,0,154,"(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

","[{'PER': 'i'}, {'W_Inanimate': 'festival'}]","(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

",DiGraph with 24 nodes and 23 edges,contrast-01,cause-01,:ARG0-of,contrast-01,cause-01,cause-01,c_0,c3_19,c3_19,c_0,inanimate
538,0,154,"(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

","[{'PER': 'i'}, {'W_Inanimate': 'festival'}]","(c / contrast-01
  :ARG1 (b / be-located-at-91
  :ARG1 (m / member
  :ARG1-of (c2 / close-13
  :ARG2 i2)
  :ARG1-of (i / include-01
  :ARG2 (f2 / family
  :poss i2)))
  :ARG2 (h / hospital)
  :time (f / festival :wiki ""Christmas"" :name (n / name :op1 ""Christmas""))
  :manner (i3 / in-fact))
  :ARG2 (r / request-01 :polarity -
  :ARG0 (i2 / i)
  :ARG1 (s / sympathy
  :source (n2 / nation))
  :ARG0-of (c3 / cause-01
  :ARG1 (w / work-09 :polarity -
  :ARG1 (c4 / compare-01
  :ARG0 (y / you))))))

",DiGraph with 24 nodes and 23 edges,contrast-01,nation,:source,contrast-01,nation,:source,c_0,c_0,n2_18,n2_18,inanimate
539,0,155,"(t / talk-01
  :ARG0 (t2 / thing
  :ARG1-of (l / link-01)
  :ARG1-of (p / post-01
  :ARG0 (i / i)))
  :ARG1 (a / and
  :op1 (t3 / tell-01
  :ARG0 (c / crowd)
  :ARG1 (j / jump-03
  :ARG0 s
  :source (b / building)
  :purpose (c2 / commit-02
  :ARG0 s
  :ARG1 (s2 / suicide)))
  :ARG2 (s / someone))
  :op2 (g / get-04
  :ARG1 (a2 / act-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / include-91
  :ARG2 c))
  :ARG1 (o / out-06
  :ARG1 p2
  :ARG2 (c3 / character)
  :ARG1-of (c4 / complete-02))))))

","[{'B_human': 'person'}, {'PER': 'i'}]","(t / talk-01
  :ARG0 (t2 / thing
  :ARG1-of (l / link-01)
  :ARG1-of (p / post-01
  :ARG0 (i / i)))
  :ARG1 (a / and
  :op1 (t3 / tell-01
  :ARG0 (c / crowd)
  :ARG1 (j / jump-03
  :ARG0 s
  :source (b / building)
  :purpose (c2 / commit-02
  :ARG0 s
  :ARG1 (s2 / suicide)))
  :ARG2 (s / someone))
  :op2 (g / get-04
  :ARG1 (a2 / act-01
  :ARG0 (p2 / person
  :ARG1-of (i2 / include-91
  :ARG2 c))
  :ARG1 (o / out-06
  :ARG1 p2
  :ARG2 (c3 / character)
  :ARG1-of (c4 / complete-02))))))

",DiGraph with 24 nodes and 23 edges,talk-01,building,:source,talk-01,building,:source,t_0,t_0,b_10,b_10,inanimate
540,0,156,"(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'kid'}, {'PER': 'i'}]","(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

",DiGraph with 23 nodes and 22 edges,contrast-01,obese,:mod,contrast-01,obese,:mod,c_0,c_0,o_10,o_10,inanimate
541,0,156,"(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'kid'}, {'PER': 'i'}]","(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

",DiGraph with 23 nodes and 22 edges,contrast-01,all,:mod,contrast-01,all,:mod,c_0,c_0,a2_18,a2_18,inanimate
542,0,156,"(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

","[{'B_human': 'child'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'kid'}, {'PER': 'i'}]","(c / contrast-01
  :ARG1 (p / possible-01
  :ARG1 (s / see-01
  :ARG0 (i / i)
  :ARG1 (b / benefit-01
  :ARG0 (t / this))))
  :ARG2 (a / and
  :op1 (s2 / scandal
  :topic (t2 / take-away-05
  :ARG1 (c2 / child
  :mod (o / obese))
  :source (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 c2
  :ARG2 (p3 / parent)))))
  :op2 (t3 / turn-out-11
  :ARG1 (i2 / ill-01
  :ARG1 (k / kid
  :mod (a2 / all))
  :ARG0-of (m / make-02
  :ARG1 (o2 / obese
  :domain k)))
  :time (t4 / then))))

",DiGraph with 23 nodes and 22 edges,contrast-01,person,:source,contrast-01,person,:source,c_0,c_0,p2_11,p2_11,animate
543,0,157,"(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

","[{'MISC': 'Mu'}, {'MISC': 'nchausen'}, {'B_human': 'child'}, {'B_human': 'member'}]","(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

",DiGraph with 26 nodes and 25 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m3_0,c2_19,c2_19,m3_0,inanimate
544,0,157,"(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

","[{'MISC': 'Mu'}, {'MISC': 'nchausen'}, {'B_human': 'child'}, {'B_human': 'member'}]","(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

",DiGraph with 26 nodes and 25 edges,multi-sentence,cause-01,:ARG1-of,multi-sentence,cause-01,cause-01,m3_0,c2_19,c2_19,m3_0,inanimate
545,0,157,"(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

","[{'MISC': 'Mu'}, {'MISC': 'nchausen'}, {'B_human': 'child'}, {'B_human': 'member'}]","(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

",DiGraph with 26 nodes and 25 edges,multi-sentence,interest-01,:condition,multi-sentence,interest-01,:condition,m3_0,m3_0,i2_9,i2_9,inanimate
546,0,157,"(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

","[{'MISC': 'Mu'}, {'MISC': 'nchausen'}, {'B_human': 'child'}, {'B_human': 'member'}]","(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

",DiGraph with 26 nodes and 25 edges,multi-sentence,massive,:mod,multi-sentence,massive,:mod,m3_0,m3_0,m_18,m_18,inanimate
547,0,157,"(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

","[{'MISC': 'Mu'}, {'MISC': 'nchausen'}, {'B_human': 'child'}, {'B_human': 'member'}]","(m3 / multi-sentence
  :snt2 (l / look-up-05
  :ARG0 (y / you)
  :ARG1 (d2 / disease :wiki ""Factitious_disorder_imposed_on_another"" :name (n / name :op1 ""Munchausen"" :op2 ""by"" :op3 ""Proxy""))
  :condition (i2 / interest-01
  :ARG1 y))
  :snt1 (r / risk-01
  :ARG1 (t / take-away-05
  :ARG1 (c / child)
  :source (f / family
  :ARG1-of (h / have-rel-role-91
  :ARG0 c
  :ARG2 (m2 / member))))
  :mod (m / massive)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / affect-01
  :ARG0 t
  :ARG1 f
  :ARG2 (d / devastate-01
  :ARG0 t
  :ARG1 f)))))

",DiGraph with 26 nodes and 25 edges,multi-sentence,family,:source,multi-sentence,family,:source,m3_0,m3_0,f_14,f_14,inanimate
548,0,158,"(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

",DiGraph with 23 nodes and 22 edges,contrast-01,occasional,:mod,contrast-01,occasional,:mod,c2_0,c2_0,o_4,o_4,inanimate
549,0,158,"(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

",DiGraph with 23 nodes and 22 edges,contrast-01,way,:mod,contrast-01,way,:mod,c2_0,c2_0,w3_21,w3_21,inanimate
550,0,158,"(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

",DiGraph with 23 nodes and 22 edges,contrast-01,both,:mod,contrast-01,both,:mod,c2_0,c2_0,b_22,b_22,inanimate
551,0,158,"(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(c2 / contrast-01
  :ARG1 (g / get-01
  :ARG0 (y / you)
  :ARG1 (p / person
  :mod (o / occasional))
  :time (w / work-01
  :ARG0 (i / i)
  :ARG1 (p2 / person
  :ARG0-of (c / call-01
  :ARG1 (s / scum
  :ARG1-of (w2 / white-02))
  :ARG2 i)
  :ARG0-of (s2 / spit-01
  :ARG2 (f / foot
  :part-of i)))))
  :ARG2 (g2 / get-01
  :ARG0 y
  :ARG1 (h / hostile
  :ARG1-of (s3 / same-01
  :ARG2 p)
  :source (m / minority))
  :mod (w3 / way
  :mod (b / both))))

",DiGraph with 23 nodes and 22 edges,contrast-01,minority,:source,contrast-01,minority,:source,c2_0,c2_0,m_20,m_20,inanimate
552,0,159,"(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

",DiGraph with 7 nodes and 6 edges,piss-off-02,both,:mod,piss-off-02,both,:mod,p_0,p_0,b_5,b_5,inanimate
553,0,159,"(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

",DiGraph with 7 nodes and 6 edges,piss-off-02,even,:mod,piss-off-02,even,:mod,p_0,p_0,e_6,e_6,inanimate
554,0,159,"(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(p / piss-off-02
  :ARG1 (i / i)
  :ARG2 (l / letter
  :location (p2 / post)
  :source (p3 / party
  :mod (b / both)))
  :mod (e / even))

",DiGraph with 7 nodes and 6 edges,piss-off-02,party,:source,piss-off-02,party,:source,p_0,p_0,p3_4,p3_4,inanimate
555,0,160,"(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

","[{'MISC': 'Nazism'}, {'MISC': 'Nazism'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

",DiGraph with 23 nodes and 22 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c_16,c_16,a_0,inanimate
556,0,160,"(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

","[{'MISC': 'Nazism'}, {'MISC': 'Nazism'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

",DiGraph with 23 nodes and 22 edges,and,cause-01,:ARG0-of,and,cause-01,cause-01,a_0,c_16,c_16,a_0,inanimate
557,0,160,"(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

","[{'MISC': 'Nazism'}, {'MISC': 'Nazism'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

",DiGraph with 23 nodes and 22 edges,and,left-19,:part,and,left-19,:part,a_0,a_0,l2_14,l2_14,inanimate
558,0,160,"(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

","[{'MISC': 'Nazism'}, {'MISC': 'Nazism'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

",DiGraph with 23 nodes and 22 edges,and,political-movement,:mod,and,political-movement,:mod,a_0,a_0,p3_3,p3_3,inanimate
559,0,160,"(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

","[{'MISC': 'Nazism'}, {'MISC': 'Nazism'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(a / and
  :op1 (f / fuck-up-02
  :ARG0 (p2 / person
  :mod (p3 / political-movement :wiki ""Nazism"" :name (n / name :op1 ""Nazism"")))
  :ARG1 (i2 / it
  :mod (a2 / all))
  :time (t / then))
  :op2 (d / destroy-01
  :ARG1 (l / legitimacy
  :poss t3)
  :location (e / eye
  :part (l2 / left-19))
  :time t
  :ARG0-of (c / cause-01
  :ARG1 (p / possible-01 :polarity -
  :ARG1 (t2 / take-04
  :ARG1 (t3 / they)
  :ARG2 (s / serious-02)
  :time (n2 / now))))))

",DiGraph with 23 nodes and 22 edges,and,all,:mod,and,all,:mod,a_0,a_0,a2_8,a2_8,inanimate
560,0,161,"(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

","[{'MISC': 'English'}, {'ORG': 'Defence_League'}, {'MISC': 'English'}, {'ORG': 'League'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Animate': 'organization'}]","(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

",DiGraph with 35 nodes and 34 edges,multi-sentence,t,:part,multi-sentence,t,:part,m_0,m_0,t_32,t_32,inanimate
561,0,161,"(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

","[{'MISC': 'English'}, {'ORG': 'Defence_League'}, {'MISC': 'English'}, {'ORG': 'League'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Animate': 'organization'}]","(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

",DiGraph with 35 nodes and 34 edges,multi-sentence,sane,:mod,multi-sentence,sane,:mod,m_0,m_0,s_4,s_4,inanimate
562,0,161,"(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

","[{'MISC': 'English'}, {'ORG': 'Defence_League'}, {'MISC': 'English'}, {'ORG': 'League'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Animate': 'organization'}]","(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

",DiGraph with 35 nodes and 34 edges,multi-sentence,every,:mod,multi-sentence,every,:mod,m_0,m_0,e_20,e_20,inanimate
563,0,161,"(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

","[{'MISC': 'English'}, {'ORG': 'Defence_League'}, {'MISC': 'English'}, {'ORG': 'League'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Animate': 'organization'}]","(m / multi-sentence
  :snt1 (g / give-16 :polarity -
  :ARG0 (p / person
  :mod (s / sane))
  :ARG1 (s2 / shit)
  :ARG2 (o / organization :wiki ""English_Defence_League"" :name (n2 / name :op1 ""English"" :op2 ""Defence"" :op3 ""League""))
  :ARG1-of (h / honest-01
  :ARG0 1))
  :snt2 (n3 / nutter
  :domain (t / they)
  :ARG1-of (w / wasted-03
  :frequency (d / date-entity
  :weekday (f / friday)
  :dayperiod (n / night)
  :mod (e / every)))
  :ARG1-of (e2 / end-up-03
  :location (o2 / organization :wiki - :name (n4 / name :op1 ""Accident"" :op2 ""and"" :op3 ""emergency"" :op4 ""services"")
  :ARG1-of (l / local-02))
  :manner (p2 / pissed-04
  :ARG1 (f2 / face
  :part t)
  :ARG1-of (t2 / total-01)))
  :mod (b / bunch)))

",DiGraph with 35 nodes and 34 edges,multi-sentence,bunch,:mod,multi-sentence,bunch,:mod,m_0,m_0,b_34,b_34,inanimate
564,0,162,"(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'ORG': 'University_of_Leeds'}, {'ORG': 'Leeds'}, {'PER': 'i'}, {'W_Inanimate': 'language'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}]","(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

",DiGraph with 17 nodes and 16 edges,have-03,language,:mod,have-03,language,:mod,h_0,h_0,l2_5,l2_5,inanimate
565,0,162,"(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'ORG': 'University_of_Leeds'}, {'ORG': 'Leeds'}, {'PER': 'i'}, {'W_Inanimate': 'language'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}]","(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

",DiGraph with 17 nodes and 16 edges,have-03,class,:mod,have-03,class,:mod,h_0,h_0,c_15,c_15,inanimate
566,0,162,"(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'ORG': 'University_of_Leeds'}, {'ORG': 'Leeds'}, {'PER': 'i'}, {'W_Inanimate': 'language'}, {'W_Animate': 'university'}, {'W_Animate': 'University'}]","(h / have-03 :mode expressive
  :ARG0 (i / i)
  :ARG1 (d / degree
  :topic (l / literature
  :mod (l2 / language :wiki ""English_language"" :name (n2 / name :op1 ""English"")))
  :source (u / university :wiki ""University_of_Leeds"" :name (n / name :op1 ""University"" :op2 ""of"" :op3 ""Leeds""))
  :mod (c / class
  :ord (o / ordinal-entity :value 2))))

",DiGraph with 17 nodes and 16 edges,have-03,university,:source,have-03,university,:source,h_0,h_0,u_9,u_9,animate
567,0,163,"(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

","[{'ORG': 'Facebook'}, {'ORG': 'Facebook'}, {'ORG': 'Labour_Party'}, {'LOC': 'UK'}, {'ORG': 'Labour'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

",DiGraph with 30 nodes and 29 edges,seem-01,idiot,:mod,seem-01,idiot,:mod,s2_0,s2_0,i2_13,i2_13,inanimate
568,0,163,"(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

","[{'ORG': 'Facebook'}, {'ORG': 'Facebook'}, {'ORG': 'Labour_Party'}, {'LOC': 'UK'}, {'ORG': 'Labour'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

",DiGraph with 30 nodes and 29 edges,seem-01,just,:mod,seem-01,just,:mod,s2_0,s2_0,j_28,j_28,inanimate
569,0,163,"(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

","[{'ORG': 'Facebook'}, {'ORG': 'Facebook'}, {'ORG': 'Labour_Party'}, {'LOC': 'UK'}, {'ORG': 'Labour'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

",DiGraph with 30 nodes and 29 edges,seem-01,plain,:mod,seem-01,plain,:mod,s2_0,s2_0,p6_29,p6_29,inanimate
570,0,163,"(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

","[{'ORG': 'Facebook'}, {'ORG': 'Facebook'}, {'ORG': 'Labour_Party'}, {'LOC': 'UK'}, {'ORG': 'Labour'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}]","(s2 / seem-01
  :ARG1 (g / get-01
  :ARG0 (p / person
  :ARG0-of (s / study-01)
  :quant (m / majority
  :degree (v / vast)))
  :ARG1 (i / information
  :poss p)
  :ARG2 (o / or
  :op1 (p3 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 p
  :ARG2 (f / friend))
  :mod (i2 / idiot))
  :op2 (p4 / post-01
  :ARG2 (p7 / publication :wiki ""Facebook"" :name (n2 / name :op1 ""Facebook"")))
  :op3 (p5 / propaganda
  :source (p2 / political-party :wiki ""Labour_Party_(UK)"" :name (n / name :op1 ""Labour"" :op2 ""Party"")))
  :op4 (m3 / make-up-10
  :ARG0 p
  :ARG1 i
  :mod (j / just
  :mod (p6 / plain))))))

",DiGraph with 30 nodes and 29 edges,seem-01,political-party,:source,seem-01,political-party,:source,s2_0,s2_0,p2_20,p2_20,inanimate
571,0,164,"(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

","[{'MISC': 'Hindu'}, {'MISC': 'Hindu'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

",DiGraph with 23 nodes and 22 edges,struggle-01,religious-group,:mod,struggle-01,religious-group,:mod,s_0,s_0,r_3,r_3,inanimate
572,0,164,"(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

","[{'MISC': 'Hindu'}, {'MISC': 'Hindu'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

",DiGraph with 23 nodes and 22 edges,struggle-01,religious-group,:mod,struggle-01,religious-group,:mod,s_0,s_0,r2_8,r_3,inanimate
573,0,164,"(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

","[{'MISC': 'Hindu'}, {'MISC': 'Hindu'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(s / struggle-01
  :ARG0 (a / and
  :op1 (p / person
  :mod (r / religious-group :wiki ""Hindu""
  :name (n2 / name :op1 ""Hindu"")))
  :op2 (p2 / person
  :mod (r2 / religious-group :wiki ""Islam""
  :name (n3 / name :op1 ""Muslim""))))
  :ARG2 (i / independence
  :source (r3 / rule-03
  :ARG0 (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain""))))
  :duration (m / multiple
  :op1 (t / temporal-quantity :quant 1
  :unit (y / year)))
  :manner (s2 / side-by-side))

",DiGraph with 23 nodes and 22 edges,struggle-01,rule-03,:source,struggle-01,rule-03,:source,s_0,s_0,r3_13,r3_13,inanimate
574,0,165,"(b / blow-out-07
  :ARG1 (y / you)
  :source (w / water)
  :ARG1-of (c / complete-02))

",[],"(b / blow-out-07
  :ARG1 (y / you)
  :source (w / water)
  :ARG1-of (c / complete-02))

",DiGraph with 4 nodes and 3 edges,blow-out-07,water,:source,blow-out-07,water,:source,b_0,b_0,w_2,w_2,inanimate
575,0,166,"(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

","[{'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

",DiGraph with 16 nodes and 15 edges,and,country,:mod,and,country,:mod,a_0,a_0,c2_5,c2_5,inanimate
576,0,166,"(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

","[{'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

",DiGraph with 16 nodes and 15 edges,and,every,:mod,and,every,:mod,a_0,a_0,e_12,e_12,inanimate
577,0,166,"(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

","[{'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (w / watch-01
  :ARG0 (i / i)
  :ARG1 (n / news)
  :source (c / cable)
  :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya""))
  :frequency (r / rate-entity-91
  :ARG4 (d / date-entity
  :dayperiod (a2 / afternoon
  :mod (e / every)))))
  :op2 (g / go-06
  :ARG1 (t / thing)
  :ARG2 (w2 / well-09)))

",DiGraph with 16 nodes and 15 edges,and,cable,:source,and,cable,:source,a_0,a_0,c_4,c_4,inanimate
578,0,167,"(c / class
  :mod (p / person
  :ARG0-of (k / know-01))
  :consist-of (p2 / person :wiki -
  :name (n / name :op1 ""John""))
  :ARG1-of (r / regardless-91
  :ARG2 (l / like-02
  :ARG0 p2)))

","[{'PER': 'John'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(c / class
  :mod (p / person
  :ARG0-of (k / know-01))
  :consist-of (p2 / person :wiki -
  :name (n / name :op1 ""John""))
  :ARG1-of (r / regardless-91
  :ARG2 (l / like-02
  :ARG0 p2)))

",DiGraph with 10 nodes and 9 edges,class,person,:consist-of,class,person,:mod,c_0,c_0,p2_3,p_1,animate
579,0,167,"(c / class
  :mod (p / person
  :ARG0-of (k / know-01))
  :consist-of (p2 / person :wiki -
  :name (n / name :op1 ""John""))
  :ARG1-of (r / regardless-91
  :ARG2 (l / like-02
  :ARG0 p2)))

","[{'PER': 'John'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(c / class
  :mod (p / person
  :ARG0-of (k / know-01))
  :consist-of (p2 / person :wiki -
  :name (n / name :op1 ""John""))
  :ARG1-of (r / regardless-91
  :ARG2 (l / like-02
  :ARG0 p2)))

",DiGraph with 10 nodes and 9 edges,class,person,:mod,class,person,:mod,c_0,c_0,p_1,p_1,inanimate
580,0,168,"(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

","[{'LOC': 'Americas'}, {'LOC': 'America'}, {'LOC': 'North_Carolina'}, {'LOC': 'North'}, {'LOC': 'Carolina'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'PER': 'i'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'state'}]","(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

",DiGraph with 25 nodes and 24 edges,bear,male,:mod,bear,male,:mod,b5_0,b5_0,m2_1,m2_1,inanimate
581,0,168,"(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

","[{'LOC': 'Americas'}, {'LOC': 'America'}, {'LOC': 'North_Carolina'}, {'LOC': 'North'}, {'LOC': 'Carolina'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'PER': 'i'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'state'}]","(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

",DiGraph with 25 nodes and 24 edges,bear,continent,:mod,bear,continent,:mod,b5_0,b5_0,c2_6,c2_6,inanimate
582,0,168,"(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

","[{'LOC': 'Americas'}, {'LOC': 'America'}, {'LOC': 'North_Carolina'}, {'LOC': 'North'}, {'LOC': 'Carolina'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'B_animal': 'bear'}, {'PER': 'i'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'state'}]","(b5 / bear
  :mod (m2 / male)
  :domain (b2 / bear
  :ARG1-of (i / include-91
  :ARG2 (b3 / bear
  :ARG1-of (b4 / black-04)
  :mod (c2 / continent :wiki ""Americas"" :name (n2 / name :op1 ""America""))
  :ARG1-of (r / record-01
  :time (e / ever))
  :ARG1-of (h / have-degree-91
  :ARG2 (b / big)
  :ARG3 (m / most)))))
  :source (s / state :wiki ""North_Carolina"" :name (n3 / name :op1 ""North"" :op2 ""Carolina""))
  :ARG1-of (w / weigh-01
  :ARG3 (m3 / mass-quantity :quant 400
  :unit (k / kilogram)))
  :ARG1-of (a / appear-02))

",DiGraph with 25 nodes and 24 edges,bear,state,:source,bear,state,:source,b5_0,b5_0,s_15,s_15,inanimate
583,0,169,"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",[],"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",DiGraph with 18 nodes and 17 edges,possible-01,air,:consist-of,possible-01,air,:consist-of,p2_0,p2_0,a_5,a_5,inanimate
584,0,169,"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",[],"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",DiGraph with 18 nodes and 17 edges,possible-01,expel-01,:condition,possible-01,expel-01,:condition,p2_0,p2_0,e_16,e_16,inanimate
585,0,169,"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",[],"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",DiGraph with 18 nodes and 17 edges,possible-01,small,:mod,possible-01,small,:mod,p2_0,p2_0,s_4,s_4,inanimate
586,0,169,"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",[],"(p2 / possible-01
  :ARG1 (c / create-01
  :ARG0 (t / this)
  :ARG1 (p3 / pocket
  :mod (s / small)
  :consist-of (a / air
  :ARG1-of (h / have-degree-91
  :ARG2 (o / oxygenate-01
  :ARG1 a)
  :ARG3 (l / less)))
  :ARG1-of (s2 / smell-02
  :ARG2 (f / foul)
  :ARG1-of (p4 / possible-01))
  :ARG1-of (m / mean-01
  :ARG2 (g / gas
  :source (s3 / swamp)))))
  :condition (e / expel-01
  :ARG1 t))

",DiGraph with 18 nodes and 17 edges,possible-01,swamp,:source,possible-01,swamp,:source,p2_0,p2_0,s3_15,s3_15,inanimate
587,0,170,"(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

","[{'MISC': 'United_States'}, {'MISC': 'Constitution'}, {'MISC': 'Constitution'}, {'LOC': 'New_York'}, {'LOC': 'City'}, {'LOC': 'NYC'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'city'}]","(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

",DiGraph with 26 nodes and 25 edges,contrast-01,exercise-01,:condition,contrast-01,exercise-01,:condition,c_0,c_0,e_15,e_15,inanimate
588,0,170,"(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

","[{'MISC': 'United_States'}, {'MISC': 'Constitution'}, {'MISC': 'Constitution'}, {'LOC': 'New_York'}, {'LOC': 'City'}, {'LOC': 'NYC'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'city'}]","(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

",DiGraph with 26 nodes and 25 edges,contrast-01,religious-group,:mod,contrast-01,religious-group,:mod,c_0,c_0,r2_18,r2_18,inanimate
589,0,170,"(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

","[{'MISC': 'United_States'}, {'MISC': 'Constitution'}, {'MISC': 'Constitution'}, {'LOC': 'New_York'}, {'LOC': 'City'}, {'LOC': 'NYC'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'city'}]","(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

",DiGraph with 26 nodes and 25 edges,contrast-01,this,:mod,contrast-01,this,:mod,c_0,c_0,t2_22,t2_22,inanimate
590,0,170,"(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

","[{'MISC': 'United_States'}, {'MISC': 'Constitution'}, {'MISC': 'Constitution'}, {'LOC': 'New_York'}, {'LOC': 'City'}, {'LOC': 'NYC'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'city'}]","(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

",DiGraph with 26 nodes and 25 edges,contrast-01,full,:mod,contrast-01,full,:mod,c_0,c_0,f2_25,f2_25,inanimate
591,0,170,"(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

","[{'MISC': 'United_States'}, {'MISC': 'Constitution'}, {'MISC': 'Constitution'}, {'LOC': 'New_York'}, {'LOC': 'City'}, {'LOC': 'NYC'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'city'}]","(c / contrast-01
  :ARG1 (r3 / respect-01
  :ARG0 (h3 / he)
  :ARG1 (f3 / free-04
  :source (l / law :wiki ""United_States_Constitution"" :name (n3 / name :op1 ""Constitution""))))
  :ARG2 (s / see-01
  :ARG1 (p / possible-01
  :ARG1 (h2 / harm-01
  :ARG1 (c2 / city :wiki ""New_York_City"" :name (n2 / name :op1 ""NYC"")))
  :condition (e / exercise-01
  :ARG0 (b / build-02
  :ARG1 (c3 / complex
  :mod (r2 / religious-group :wiki ""Muslim"" :name (n / name :op1 ""Muslim""))
  :mod (t2 / this)))
  :ARG1 f3
  :degree (e2 / extent
  :mod (f2 / full))))))

",DiGraph with 26 nodes and 25 edges,contrast-01,law,:source,contrast-01,law,:source,c_0,c_0,l_4,l_4,inanimate
592,0,171,"(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

","[{'PER': 'Mike'}, {'PER': 'M'}, {'PER': 'M'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

",DiGraph with 13 nodes and 12 edges,identify-01,cause-01,:ARG0-of,identify-01,cause-01,cause-01,i_0,c_4,c_4,i_0,animate
593,0,171,"(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

","[{'PER': 'Mike'}, {'PER': 'M'}, {'PER': 'M'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

",DiGraph with 13 nodes and 12 edges,identify-01,cause-01,:ARG0-of,identify-01,cause-01,cause-01,i_0,c_4,c_4,i_0,animate
594,0,171,"(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

","[{'PER': 'Mike'}, {'PER': 'M'}, {'PER': 'M'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

",DiGraph with 13 nodes and 12 edges,identify-01,only,:mod,identify-01,only,:mod,i_0,i_0,o_12,o_12,inanimate
595,0,171,"(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

","[{'PER': 'Mike'}, {'PER': 'M'}, {'PER': 'M'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(i / identify-01 :polarity -
  :ARG1 (k / kid)
  :time (e / ever)
  :ARG0-of (c / cause-01
  :ARG1 (h / have-03
  :ARG0 (w / we)
  :ARG1 (w2 / word
  :source (p / person :wiki ""Mike_McQueary""
  :name (n / name :op1 ""McQueary""))
  :topic (i2 / it))
  :mod (o / only))))

",DiGraph with 13 nodes and 12 edges,identify-01,person,:source,identify-01,person,:source,i_0,i_0,p_8,p_8,animate
596,0,172,"(s / speak-01
  :ARG0 (i / i)
  :source (e / experience-01
  :location (p / province
  :poss i)))

","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / speak-01
  :ARG0 (i / i)
  :source (e / experience-01
  :location (p / province
  :poss i)))

",DiGraph with 5 nodes and 4 edges,speak-01,experience-01,:source,speak-01,experience-01,:source,s_0,s_0,e_2,e_2,inanimate
597,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,cause-01,:ARG1,contrast-01,cause-01,cause-01,c_0,c2_12,c2_12,c_0,inanimate
598,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,cause-01,:ARG1,contrast-01,cause-01,cause-01,c_0,c2_12,c2_12,c_0,inanimate
599,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,extreme,:mod,contrast-01,extreme,:mod,c_0,c_0,e_14,e_14,inanimate
600,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,narcissism,:mod,contrast-01,narcissism,:mod,c_0,c_0,n_15,n_15,inanimate
601,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,sex,:mod,contrast-01,sex,:mod,c_0,c_0,s3_16,s3_16,inanimate
602,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,particular,:mod,contrast-01,particular,:mod,c_0,c_0,p3_19,p3_19,inanimate
603,0,173,"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",[{'PER': 'i'}],"(c / contrast-01
  :ARG1 (k2 / know-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (p / pedophilia
  :ARG1-of (g / general-02)))
  :ARG2 (r / read-01
  :ARG0 i
  :ARG1 (a / article :quant 1
  :source (s / somewhere)
  :ARG0-of (s2 / say-01
  :ARG1 (c2 / cause-01
  :ARG0 (f / form
  :mod (e / extreme)
  :mod (n / narcissism
  :mod (s3 / sex)))
  :ARG1 p2))
  :topic (p2 / pederasty
  :mod (p3 / particular)))))

",DiGraph with 20 nodes and 19 edges,contrast-01,somewhere,:source,contrast-01,somewhere,:source,c_0,c_0,s_10,s_10,inanimate
604,0,174,"(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

","[{'MISC': 'Sun'}, {'MISC': 'Sun'}, {'W_Inanimate': 'star'}]","(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

",DiGraph with 18 nodes and 17 edges,and,convenient,:mod,and,convenient,:mod,a_0,a_0,c_13,c_13,inanimate
605,0,174,"(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

","[{'MISC': 'Sun'}, {'MISC': 'Sun'}, {'W_Inanimate': 'star'}]","(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

",DiGraph with 18 nodes and 17 edges,and,physical,:mod,and,physical,:mod,a_0,a_0,p_14,p_14,inanimate
606,0,174,"(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

","[{'MISC': 'Sun'}, {'MISC': 'Sun'}, {'W_Inanimate': 'star'}]","(a / and
  :op1 (r / repository
  :domain (s / she
  :ARG2-of (t / talk-01)
  :ARG0-of (t2 / think-01
  :ARG1 (s2 / shine-01
  :ARG1 (s3 / star :wiki ""Sun""
  :name (n / name :op1 ""Sun""))
  :direction (o / out
  :source (b / backside
  :part-of (h / he))))))
  :mod (c / convenient)
  :mod (p / physical))
  :op2 (b2 / bask-01
  :ARG0 h
  :ARG1 (a2 / adulation)))

",DiGraph with 18 nodes and 17 edges,and,backside,:source,and,backside,:source,a_0,a_0,b_11,b_11,inanimate
607,0,175,"(t / tell-01
  :ARG0 (h / he)
  :ARG1 (w / woman
  :source (w2 / work-01)
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend
  :ARG1-of (c2 / close-13))))
  :ARG2 (i / i)
  :time (c / confront-01
  :ARG0 i
  :ARG1 h))

","[{'B_human': 'woman'}, {'B_human': 'friend'}, {'PER': 'i'}]","(t / tell-01
  :ARG0 (h / he)
  :ARG1 (w / woman
  :source (w2 / work-01)
  :ARG0-of (h2 / have-rel-role-91
  :ARG1 h
  :ARG2 (f / friend
  :ARG1-of (c2 / close-13))))
  :ARG2 (i / i)
  :time (c / confront-01
  :ARG0 i
  :ARG1 h))

",DiGraph with 12 nodes and 11 edges,tell-01,work-01,:source,tell-01,work-01,:source,t_0,t_0,w2_3,w2_3,inanimate
608,0,176,"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (a / and
  :op1 (r / rip-out-03
  :ARG0 (h / he)
  :ARG1 (h2 / heart
  :part-of i
  :source (c / chest
  :part-of i)))
  :op2 (s / stamp-04
  :ARG0 h
  :ARG1 h2))
  :time (t / then))

",[{'PER': 'i'}],"(f / feel-01 :polarity -
  :ARG0 (i / i)
  :ARG1 (a / and
  :op1 (r / rip-out-03
  :ARG0 (h / he)
  :ARG1 (h2 / heart
  :part-of i
  :source (c / chest
  :part-of i)))
  :op2 (s / stamp-04
  :ARG0 h
  :ARG1 h2))
  :time (t / then))

",DiGraph with 13 nodes and 12 edges,feel-01 :polarity -,chest,:source,feel-01 :polarity -,chest,:source,f_0,f_0,c_7,c_7,inanimate
609,0,177,"(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

","[{'ORG': 'Tea'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'peer'}, {'PER': 'i'}]","(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

",DiGraph with 21 nodes and 20 edges,complain-01,cause-01,:ARG1-of,complain-01,cause-01,cause-01,c_0,c2_5,c2_5,c_0,inanimate
610,0,177,"(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

","[{'ORG': 'Tea'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'peer'}, {'PER': 'i'}]","(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

",DiGraph with 21 nodes and 20 edges,complain-01,cause-01,:ARG1-of,complain-01,cause-01,cause-01,c_0,c2_5,c2_5,c_0,inanimate
611,0,177,"(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

","[{'ORG': 'Tea'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'peer'}, {'PER': 'i'}]","(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

",DiGraph with 21 nodes and 20 edges,complain-01,other,:mod,complain-01,other,:mod,c_0,c_0,o_7,o_7,inanimate
612,0,177,"(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

","[{'ORG': 'Tea'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'peer'}, {'PER': 'i'}]","(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

",DiGraph with 21 nodes and 20 edges,complain-01,other,:mod,complain-01,other,:mod,c_0,c_0,o2_16,o_7,inanimate
613,0,177,"(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

","[{'ORG': 'Tea'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'B_human': 'peer'}, {'PER': 'i'}]","(c / complain-01
  :ARG1 (g2 / get-01 :polarity -
  :ARG0 i
  :ARG1 (h2 / house)
  :ARG1-of (c2 / cause-01
  :ARG0 (a / amr-unknown)))
  :mod (o / other)
  :ARG1-of (h / hear-01
  :ARG0 (i / i)
  :ARG2 (a2 / and
  :op1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 i
  :ARG2 (p2 / parent)))
  :op2 (p3 / peer
  :mod (o2 / other)
  :source (p4 / political-movement :wiki ""Tea_Party_movement"" :name (n2 / name :op1 ""TP""))))))

",DiGraph with 21 nodes and 20 edges,complain-01,political-movement,:source,complain-01,political-movement,:source,c_0,c_0,p4_17,p4_17,inanimate
614,0,178,"(a / and
  :op2 (w / want-01
  :ARG0 (i / i)
  :ARG1 (w2 / wait-01
  :ARG1 i
  :ARG2 (d / do-02
  :ARG0 (w3 / we)
  :ARG1 (a2 / anything
  :ARG1-of (r / resemble-01
  :ARG2 (t / that))))
  :time (p / possible-01
  :ARG1 (m / move-01
  :ARG0 i
  :ARG1 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (g / girlfriend)))
  :ARG2 (c / city :wiki ""Las_Vegas""
  :name (n2 / name :op1 ""Vegas""))
  :source (s / state :wiki ""Minnesota""
  :name (n / name :op1 ""Minnesota"")))))))

","[{'LOC': 'Las_Vegas'}, {'LOC': 'Vegas'}, {'LOC': 'Minnesota'}, {'LOC': 'Minnesota'}, {'B_human': 'person'}, {'B_human': 'girlfriend'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'state'}]","(a / and
  :op2 (w / want-01
  :ARG0 (i / i)
  :ARG1 (w2 / wait-01
  :ARG1 i
  :ARG2 (d / do-02
  :ARG0 (w3 / we)
  :ARG1 (a2 / anything
  :ARG1-of (r / resemble-01
  :ARG2 (t / that))))
  :time (p / possible-01
  :ARG1 (m / move-01
  :ARG0 i
  :ARG1 (p2 / person
  :ARG0-of (h / have-rel-role-91
  :ARG1 i
  :ARG2 (g / girlfriend)))
  :ARG2 (c / city :wiki ""Las_Vegas""
  :name (n2 / name :op1 ""Vegas""))
  :source (s / state :wiki ""Minnesota""
  :name (n / name :op1 ""Minnesota"")))))))

",DiGraph with 25 nodes and 24 edges,and,state,:source,and,state,:source,a_0,a_0,s_21,s_21,inanimate
615,0,179,"(m / monk
  :source (m2 / monastery
  :mod (r / religious-group :wiki ""Buddhism"" :name (n / name :op1 ""Buddhist""))))

","[{'MISC': 'Buddhism'}, {'MISC': 'Buddhist'}, {'B_human': 'monk'}]","(m / monk
  :source (m2 / monastery
  :mod (r / religious-group :wiki ""Buddhism"" :name (n / name :op1 ""Buddhist""))))

",DiGraph with 6 nodes and 5 edges,monk,religious-group,:mod,monk,religious-group,:mod,m_0,m_0,r_2,r_2,inanimate
616,0,179,"(m / monk
  :source (m2 / monastery
  :mod (r / religious-group :wiki ""Buddhism"" :name (n / name :op1 ""Buddhist""))))

","[{'MISC': 'Buddhism'}, {'MISC': 'Buddhist'}, {'B_human': 'monk'}]","(m / monk
  :source (m2 / monastery
  :mod (r / religious-group :wiki ""Buddhism"" :name (n / name :op1 ""Buddhist""))))

",DiGraph with 6 nodes and 5 edges,monk,monastery,:source,monk,monastery,:source,m_0,m_0,m2_1,m2_1,inanimate
617,0,180,"(s / show-01
  :ARG0 (d / data
  :source (g3 / government-organization
  :ARG0-of (g4 / govern-01)))
  :ARG1 (t / thing
  :manner-of (d4 / damage-01
  :ARG2-of (a / affect-01
  :ARG0 (d2 / drug)
  :ARG1-of (s2 / sweep-02
  :ARG2 (a2 / across
  :op1 (c2 / country :wiki ""England"" :name (n2 / name :op1 ""England""))))))))

","[{'LOC': 'England'}, {'LOC': 'England'}, {'W_Inanimate': 'country'}]","(s / show-01
  :ARG0 (d / data
  :source (g3 / government-organization
  :ARG0-of (g4 / govern-01)))
  :ARG1 (t / thing
  :manner-of (d4 / damage-01
  :ARG2-of (a / affect-01
  :ARG0 (d2 / drug)
  :ARG1-of (s2 / sweep-02
  :ARG2 (a2 / across
  :op1 (c2 / country :wiki ""England"" :name (n2 / name :op1 ""England""))))))))

",DiGraph with 14 nodes and 13 edges,show-01,government-organization,:source,show-01,government-organization,:source,s_0,s_0,g3_2,g3_2,inanimate
618,0,181,"(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

","[{'MISC': 'Diebold'}, {'ORG': 'Nix'}, {'MISC': 'dorf'}, {'MISC': 'Diebold'}, {'W_Animate': 'company'}]","(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

",DiGraph with 14 nodes and 13 edges,multi-sentence,anymore,:mod,multi-sentence,anymore,:mod,m_0,m_0,a_12,a_12,inanimate
619,0,181,"(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

","[{'MISC': 'Diebold'}, {'ORG': 'Nix'}, {'MISC': 'dorf'}, {'MISC': 'Diebold'}, {'W_Animate': 'company'}]","(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

",DiGraph with 14 nodes and 13 edges,multi-sentence,just,:mod,multi-sentence,just,:mod,m_0,m_0,j_13,j_13,inanimate
620,0,181,"(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

","[{'MISC': 'Diebold'}, {'ORG': 'Nix'}, {'MISC': 'dorf'}, {'MISC': 'Diebold'}, {'W_Animate': 'company'}]","(m / multi-sentence
  :snt1 (f / fine-04)
  :snt2 (t / talk-01 :polarity - :mode imperative
  :ARG0 (y / you)
  :ARG1 (m2 / machine
  :instrument-of (v / vote-01)
  :source (c / company :wiki ""Diebold_Nixdorf""
  :name (n / name :op1 ""Diebold"")))
  :mod (a / anymore)
  :mod (j / just)))

",DiGraph with 14 nodes and 13 edges,multi-sentence,company,:source,multi-sentence,company,:source,m_0,m_0,c_8,c_8,animate
621,0,182,"(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

","[{'LOC': 'Rome'}, {'LOC': 'Rome'}, {'B_human': 'person'}, {'B_human': 'husband'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

",DiGraph with 41 nodes and 40 edges,multi-sentence,this,:mod,multi-sentence,this,:mod,m3_0,m3_0,t_23,t_23,inanimate
622,0,182,"(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

","[{'LOC': 'Rome'}, {'LOC': 'Rome'}, {'B_human': 'person'}, {'B_human': 'husband'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

",DiGraph with 41 nodes and 40 edges,multi-sentence,die-01,:destination,multi-sentence,die-01,:destination,m3_0,m3_0,d2_11,d2_11,inanimate
623,0,182,"(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

","[{'LOC': 'Rome'}, {'LOC': 'Rome'}, {'B_human': 'person'}, {'B_human': 'husband'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(m3 / multi-sentence
  :snt1 (u / undergo-28
  :ARG1 (s / she)
  :ARG2 (s2 / surgery-01 :quant 39
  :ARG1 s
  :ARG2 (r / repair-01
  :ARG1 (d / damage-01))
  :ARG1-of (s3 / separate-02)))
  :snt2 (l / leap-03
  :ARG0 (s4 / she)
  :destination (d2 / die-01
  :ARG1 s4)
  :source (f / floor
  :ord (o / ordinal-entity :value 6)
  :part-of (b / building
  :location (c / city :wiki ""Rome"" :name (n / name :op1 ""Rome""))))
  :time (b2 / before)
  :time (m / month
  :mod (t / this)))
  :snt3 (c2 / contrast-01
  :ARG1 (c3 / charge-05
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (s5 / she)
  :ARG2 (h4 / husband
  :time (e2 / ex))))
  :ARG2 (a / attempt-01
  :ARG1 (m4 / murder-01
  :ARG0 h4
  :ARG1 s5))
  :time (d3 / date-entity :year 2002))
  :ARG2 (a2 / acquit-01
  :ARG1 h4
  :time (s6 / since
  :op1 c3))))

",DiGraph with 41 nodes and 40 edges,multi-sentence,floor,:source,multi-sentence,floor,:source,m3_0,m3_0,f_13,f_13,inanimate
624,0,183,"(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

","[{'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Rio_de_Janeiro'}, {'LOC': 'Rio'}, {'LOC': 'Janeiro'}, {'B_human': 'girl'}, {'W_Inanimate': 'city'}]","(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

",DiGraph with 22 nodes and 21 edges,multi-sentence,tall,:mod,multi-sentence,tall,:mod,m_0,m_0,t_7,t_7,inanimate
625,0,183,"(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

","[{'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Rio_de_Janeiro'}, {'LOC': 'Rio'}, {'LOC': 'Janeiro'}, {'B_human': 'girl'}, {'W_Inanimate': 'city'}]","(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

",DiGraph with 22 nodes and 21 edges,multi-sentence,young,:mod,multi-sentence,young,:mod,m_0,m_0,y_9,y_9,inanimate
626,0,183,"(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

","[{'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Rio_de_Janeiro'}, {'LOC': 'Rio'}, {'LOC': 'Janeiro'}, {'B_human': 'girl'}, {'W_Inanimate': 'city'}]","(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

",DiGraph with 22 nodes and 21 edges,multi-sentence,lovely,:mod,multi-sentence,lovely,:mod,m_0,m_0,l_10,l_10,inanimate
627,0,183,"(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

","[{'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Rio_de_Janeiro'}, {'LOC': 'Rio'}, {'LOC': 'Janeiro'}, {'B_human': 'girl'}, {'W_Inanimate': 'city'}]","(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

",DiGraph with 22 nodes and 21 edges,multi-sentence,that,:mod,multi-sentence,that,:mod,m_0,m_0,t3_14,t3_14,inanimate
628,0,183,"(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

","[{'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Ipan'}, {'MISC': 'ema'}, {'LOC': 'Rio_de_Janeiro'}, {'LOC': 'Rio'}, {'LOC': 'Janeiro'}, {'B_human': 'girl'}, {'W_Inanimate': 'city'}]","(m / multi-sentence
  :snt2 (g / go-02
  :ARG0 (g2 / girl
  :source (c / city-district :wiki ""Ipanema""
  :name (n3 / name :op1 ""Ipanema""))
  :mod (t / tall)
  :ARG1-of (t2 / tan-01)
  :mod (y / young)
  :mod (l / lovely)))
  :snt3 (s / smell-02 :mode expressive
  :ARG1 (a / amr-unknown
  :mod (t3 / that))
  :ARG2 (e / ew))
  :snt1 (c2 / city :wiki ""Rio_de_Janeiro""
  :name (n / name :op1 ""Rio"" :op2 ""de"" :op3 ""Janeiro"")))

",DiGraph with 22 nodes and 21 edges,multi-sentence,city-district,:source,multi-sentence,city-district,:source,m_0,m_0,c_3,c_3,inanimate
629,0,184,"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",[],"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",DiGraph with 17 nodes and 16 edges,receive-01,toxic,:mod,receive-01,toxic,:mod,r_0,r_0,t2_11,t2_11,inanimate
630,0,184,"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",[],"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",DiGraph with 17 nodes and 16 edges,receive-01,also,:mod,receive-01,also,:mod,r_0,r_0,a3_16,a3_16,inanimate
631,0,184,"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",[],"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",DiGraph with 17 nodes and 16 edges,receive-01,and,:source,receive-01,and,:ARG1,r_0,r_0,a2_4,a_2,inanimate
632,0,184,"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",[],"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",DiGraph with 17 nodes and 16 edges,receive-01,landfill,:source,receive-01,landfill,:source,r_0,r_0,l_12,l_12,inanimate
633,0,184,"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",[],"(r / receive-01
  :ARG0 (b2 / bay)
  :ARG1 (a / and
  :op1 (t / trash
  :source (a2 / and
  :op1 (s / ship)
  :op2 (c / community :quant 15
  :ARG1-of (b / border-01
  :ARG2 b2))))
  :op2 (r2 / runoff
  :mod (t2 / toxic)
  :source (l / landfill
  :time (f / former)))
  :op3 (w / waste
  :source (h / human))
  :mod (a3 / also)))

",DiGraph with 17 nodes and 16 edges,receive-01,human,:source,receive-01,human,:source,r_0,r_0,h_15,h_15,inanimate
634,0,185,"(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

",DiGraph with 24 nodes and 23 edges,text-01,b,:condition,text-01,b,:condition,t_0,t_0,b_22,b_22,inanimate
635,0,185,"(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

",DiGraph with 24 nodes and 23 edges,text-01,hipforumer,:mod,text-01,hipforumer,:mod,t_0,t_0,h2_9,h2_9,inanimate
636,0,185,"(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

",DiGraph with 24 nodes and 23 edges,text-01,any,:mod,text-01,any,:mod,t_0,t_0,a4_14,a4_14,inanimate
637,0,185,"(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

",DiGraph with 24 nodes and 23 edges,text-01,south,:destination,text-01,south,:destination,t_0,t_0,s_20,s_20,inanimate
638,0,185,"(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / text-01
  :ARG0 (h / he)
  :ARG2 (i / i)
  :ARG3 (a / ask-01
  :ARG0 h
  :ARG1 (t2 / truth-value
  :polarity-of (a2 / and
  :op1 (b / be-located-at-91
  :ARG1 (y / you
  :mod (h2 / hipforumer
  :source (c / country :wiki ""France"" :name (n / name :op1 ""France"")))
  :mod (a4 / any))
  :ARG2 (a3 / area))
  :op2 (g / give-01 :polite +
  :ARG0 y
  :ARG1 (l / lift
  :destination (s / south))
  :ARG2 h
  :condition b))))
  :time (j / just))

",DiGraph with 24 nodes and 23 edges,text-01,country,:source,text-01,country,:source,t_0,t_0,c_10,c_10,inanimate
639,0,186,"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",[{'PER': 'i'}],"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",DiGraph with 6 nodes and 5 edges,idea,stupid,:mod,idea,stupid,:mod,i_0,i_0,s_1,s_1,inanimate
640,0,186,"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",[{'PER': 'i'}],"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",DiGraph with 6 nodes and 5 edges,idea,small,:mod,idea,small,:mod,i_0,i_0,s2_5,s2_5,inanimate
641,0,186,"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",[{'PER': 'i'}],"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",DiGraph with 6 nodes and 5 edges,idea,cop,:source,idea,cop,:source,i_0,i_0,c_3,c_3,animate
642,0,186,"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",[{'PER': 'i'}],"(i / idea
  :mod (s / stupid)
  :domain (i2 / it)
  :source (c / cop
  :source (t / town
  :mod (s2 / small))))

",DiGraph with 6 nodes and 5 edges,idea,town,:source,idea,town,:source,i_0,i_0,t_4,t_4,inanimate
643,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,drop-off-03,:mod,drive-01,drop-off-03,:mod,d_0,d_0,d2_3,d2_3,inanimate
644,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,g2,:mod,drive-01,g2,:mod,d_0,d_0,g2_10,g2_10,inanimate
645,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,front,:mod,drive-01,front,:mod,d_0,d_0,f_15,f_15,inanimate
646,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,back,:mod,drive-01,back,:mod,d_0,d_0,b_17,b_17,inanimate
647,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,seat,:destination,drive-01,seat,:source,d_0,d_0,s2_16,s_14,inanimate
648,0,187,"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",[],"(d / drive-01
  :ARG0 (t / they)
  :ARG1 (l / line
  :mod (d2 / drop-off-03
  :ARG0 t))
  :time-of (g / give-01
  :ARG0 t
  :ARG1 (a / and
  :op1 (h / hug-01
  :ARG0 t
  :mod g2)
  :op2 (k / kiss-01
  :ARG0 t
  :ARG2 (g2 / goodbye))
  :source (s / seat
  :mod (f / front))
  :destination (s2 / seat
  :mod (b / back))))
  :ARG1-of (h2 / hyperlink-91
  :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))

",DiGraph with 21 nodes and 20 edges,drive-01,seat,:source,drive-01,seat,:source,d_0,d_0,s_14,s_14,inanimate
649,0,188,"(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

","[{'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'husband'}]","(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

",DiGraph with 14 nodes and 13 edges,take-away-05,cause-01,:ARG1-of,take-away-05,cause-01,cause-01,t_0,c_7,c_7,t_0,inanimate
650,0,188,"(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

","[{'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'husband'}]","(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

",DiGraph with 14 nodes and 13 edges,take-away-05,cause-01,:ARG1-of,take-away-05,cause-01,cause-01,t_0,c_7,c_7,t_0,inanimate
651,0,188,"(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

","[{'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'husband'}]","(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

",DiGraph with 14 nodes and 13 edges,take-away-05,poor,:mod,take-away-05,poor,:mod,t_0,t_0,p2_11,p2_11,inanimate
652,0,188,"(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

","[{'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'husband'}]","(t / take-away-05
  :ARG0 (h / he)
  :ARG1 (p / person
  :ARG0-of (h2 / have-rel-role-91
  :ARG2 (f / father))
  :ARG0-of (h3 / have-rel-role-91
  :ARG2 (h4 / husband)))
  :ARG1-of (c / cause-01
  :ARG0 (c2 / control-01
  :ARG0 h
  :ARG1 h
  :mod (p2 / poor)))
  :source (f2 / family
  :ARG0-of (l / love-01)))

",DiGraph with 14 nodes and 13 edges,take-away-05,family,:source,take-away-05,family,:source,t_0,t_0,f2_12,f2_12,inanimate
653,0,189,"(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

",DiGraph with 14 nodes and 13 edges,bomb-01,funeral,:mod,bomb-01,funeral,:mod,b_0,b_0,f_2,f_2,inanimate
654,0,189,"(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

",DiGraph with 14 nodes and 13 edges,bomb-01,car,:mod,bomb-01,car,:mod,b_0,b_0,c_3,c_3,inanimate
655,0,189,"(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

",DiGraph with 14 nodes and 13 edges,bomb-01,this,:mod,bomb-01,this,:mod,b_0,b_0,t_5,t_5,inanimate
656,0,189,"(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(b / bomb-01
  :ARG1 (p / procession
  :mod (f / funeral))
  :mod (c / car)
  :time (w / weekend-01
  :mod (t / this))
  :ARG0-of (k / kill-01
  :ARG1 (p2 / person
  :quant (m / more-than :op1 50)))
  :source (c2 / country :wiki ""Iraq""
  :name (n / name :op1 ""Iraq"")))

",DiGraph with 14 nodes and 13 edges,bomb-01,country,:source,bomb-01,country,:source,b_0,b_0,c2_10,c2_10,inanimate
657,0,190,"(o / opine-01
  :ARG0 (i / i)
  :ARG1 (d / dead-on
  :domain (e / everything
  :mod (e2 / else)
  :ARG1-of (s / say-01
  :ARG0 (t / they)
  :topic (c / case-03))))
  :concession (a / agree-01 :polarity -
  :ARG0 i
  :ARG1 (o2 / or
  :op1 (w / word
  :source (p / person :wiki ""God""
  :name (n / name :op1 ""God""))
  :domain (b / book :wiki ""Quran""
  :name (n2 / name :op1 ""Quran"")))
  :op2 (p2 / prophet
  :poss p
  :domain (p3 / person :wiki ""Muhammad""
  :name (n3 / name :op1 ""Muhammad""))))
  :ARG2 t))

","[{'PER': 'God'}, {'PER': 'God'}, {'MISC': 'Quran'}, {'MISC': 'Quran'}, {'PER': 'Muhammad'}, {'PER': 'Muhammad'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(o / opine-01
  :ARG0 (i / i)
  :ARG1 (d / dead-on
  :domain (e / everything
  :mod (e2 / else)
  :ARG1-of (s / say-01
  :ARG0 (t / they)
  :topic (c / case-03))))
  :concession (a / agree-01 :polarity -
  :ARG0 i
  :ARG1 (o2 / or
  :op1 (w / word
  :source (p / person :wiki ""God""
  :name (n / name :op1 ""God""))
  :domain (b / book :wiki ""Quran""
  :name (n2 / name :op1 ""Quran"")))
  :op2 (p2 / prophet
  :poss p
  :domain (p3 / person :wiki ""Muhammad""
  :name (n3 / name :op1 ""Muhammad""))))
  :ARG2 t))

",DiGraph with 28 nodes and 27 edges,opine-01,else,:mod,opine-01,else,:mod,o_0,o_0,e2_4,e2_4,inanimate
658,0,190,"(o / opine-01
  :ARG0 (i / i)
  :ARG1 (d / dead-on
  :domain (e / everything
  :mod (e2 / else)
  :ARG1-of (s / say-01
  :ARG0 (t / they)
  :topic (c / case-03))))
  :concession (a / agree-01 :polarity -
  :ARG0 i
  :ARG1 (o2 / or
  :op1 (w / word
  :source (p / person :wiki ""God""
  :name (n / name :op1 ""God""))
  :domain (b / book :wiki ""Quran""
  :name (n2 / name :op1 ""Quran"")))
  :op2 (p2 / prophet
  :poss p
  :domain (p3 / person :wiki ""Muhammad""
  :name (n3 / name :op1 ""Muhammad""))))
  :ARG2 t))

","[{'PER': 'God'}, {'PER': 'God'}, {'MISC': 'Quran'}, {'MISC': 'Quran'}, {'PER': 'Muhammad'}, {'PER': 'Muhammad'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(o / opine-01
  :ARG0 (i / i)
  :ARG1 (d / dead-on
  :domain (e / everything
  :mod (e2 / else)
  :ARG1-of (s / say-01
  :ARG0 (t / they)
  :topic (c / case-03))))
  :concession (a / agree-01 :polarity -
  :ARG0 i
  :ARG1 (o2 / or
  :op1 (w / word
  :source (p / person :wiki ""God""
  :name (n / name :op1 ""God""))
  :domain (b / book :wiki ""Quran""
  :name (n2 / name :op1 ""Quran"")))
  :op2 (p2 / prophet
  :poss p
  :domain (p3 / person :wiki ""Muhammad""
  :name (n3 / name :op1 ""Muhammad""))))
  :ARG2 t))

",DiGraph with 28 nodes and 27 edges,opine-01,person,:source,opine-01,person,:source,o_0,o_0,p_13,p_13,animate
659,0,191,"(a / and
  :op1 (i / intend-01
  :ARG1 (s / serve-01
  :ARG0 (l / law :wiki ""Sharia"" :name (n / name :op1 ""Sharia""))
  :ARG1 (j / justice)
  :ARG2 (p / party
  :ARG0-of (c / conflict-01))))
  :op2 (i2 / interpret-01
  :ARG0 (h / human)
  :ARG1 (w / word
  :source (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God"")))
  :purpose (s2 / suit-01
  :ARG0 h
  :ARG1 l
  :ARG2 (e / era
  :poss h))
  :domain l)
  :op3 (l3 / law :polarity -
  :mod (d / divine)
  :domain l)
  :op4 (l5 / law :polarity -
  :manner (p4 / propagate-01
  :ARG1 l)
  :domain l
  :poss p2))

","[{'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'law'}, {'W_Animate': 'person'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'law'}]","(a / and
  :op1 (i / intend-01
  :ARG1 (s / serve-01
  :ARG0 (l / law :wiki ""Sharia"" :name (n / name :op1 ""Sharia""))
  :ARG1 (j / justice)
  :ARG2 (p / party
  :ARG0-of (c / conflict-01))))
  :op2 (i2 / interpret-01
  :ARG0 (h / human)
  :ARG1 (w / word
  :source (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God"")))
  :purpose (s2 / suit-01
  :ARG0 h
  :ARG1 l
  :ARG2 (e / era
  :poss h))
  :domain l)
  :op3 (l3 / law :polarity -
  :mod (d / divine)
  :domain l)
  :op4 (l5 / law :polarity -
  :manner (p4 / propagate-01
  :ARG1 l)
  :domain l
  :poss p2))

",DiGraph with 33 nodes and 32 edges,and,divine,:mod,and,divine,:mod,a_0,a_0,d_25,d_25,inanimate
660,0,191,"(a / and
  :op1 (i / intend-01
  :ARG1 (s / serve-01
  :ARG0 (l / law :wiki ""Sharia"" :name (n / name :op1 ""Sharia""))
  :ARG1 (j / justice)
  :ARG2 (p / party
  :ARG0-of (c / conflict-01))))
  :op2 (i2 / interpret-01
  :ARG0 (h / human)
  :ARG1 (w / word
  :source (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God"")))
  :purpose (s2 / suit-01
  :ARG0 h
  :ARG1 l
  :ARG2 (e / era
  :poss h))
  :domain l)
  :op3 (l3 / law :polarity -
  :mod (d / divine)
  :domain l)
  :op4 (l5 / law :polarity -
  :manner (p4 / propagate-01
  :ARG1 l)
  :domain l
  :poss p2))

","[{'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'law'}, {'W_Animate': 'person'}, {'W_Inanimate': 'law'}, {'W_Inanimate': 'law'}]","(a / and
  :op1 (i / intend-01
  :ARG1 (s / serve-01
  :ARG0 (l / law :wiki ""Sharia"" :name (n / name :op1 ""Sharia""))
  :ARG1 (j / justice)
  :ARG2 (p / party
  :ARG0-of (c / conflict-01))))
  :op2 (i2 / interpret-01
  :ARG0 (h / human)
  :ARG1 (w / word
  :source (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God"")))
  :purpose (s2 / suit-01
  :ARG0 h
  :ARG1 l
  :ARG2 (e / era
  :poss h))
  :domain l)
  :op3 (l3 / law :polarity -
  :mod (d / divine)
  :domain l)
  :op4 (l5 / law :polarity -
  :manner (p4 / propagate-01
  :ARG1 l)
  :domain l
  :poss p2))

",DiGraph with 33 nodes and 32 edges,and,person,:source,and,person,:source,a_0,a_0,p2_13,p2_13,animate
661,0,192,"(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

","[{'PER': 'God'}, {'PER': 'God'}, {'PER': 'Muhammad'}, {'PER': 'Prophet'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

",DiGraph with 19 nodes and 18 edges,and,genuine,:condition,and,genuine,:condition,a_0,a_0,g_17,g_17,inanimate
662,0,192,"(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

","[{'PER': 'God'}, {'PER': 'God'}, {'PER': 'Muhammad'}, {'PER': 'Prophet'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

",DiGraph with 19 nodes and 18 edges,and,only,:mod,and,only,:mod,a_0,a_0,o_8,o_8,inanimate
663,0,192,"(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

","[{'PER': 'God'}, {'PER': 'God'}, {'PER': 'Muhammad'}, {'PER': 'Prophet'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

",DiGraph with 19 nodes and 18 edges,and,person,:source,and,person,:source,a_0,a_0,p_4,p_4,animate
664,0,192,"(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

","[{'PER': 'God'}, {'PER': 'God'}, {'PER': 'Muhammad'}, {'PER': 'Prophet'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(a / and
  :op1 (b / beyond
  :op1 (q / question-03)
  :domain (w / word
  :source (p / person :wiki ""God"" :name (n / name :op1 ""God""))
  :mod (o / only)))
  :op2 (p2 / possible-01 :polarity -
  :ARG1 (q2 / question-03
  :ARG1 (w2 / word
  :source (p3 / person :wiki ""Muhammad"" :name (n2 / name :op1 ""Prophet""))))
  :condition (g / genuine
  :domain w2)))

",DiGraph with 19 nodes and 18 edges,and,person,:source,and,person,:source,a_0,a_0,p3_13,p_4,animate
665,0,193,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'LOC': 'New'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'politician'}, {'B_human': 'person'}, {'PER': 'i'}]","(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

",DiGraph with 29 nodes and 28 edges,possible-01,slick,:mod,possible-01,slick,:mod,p_0,p_0,s2_24,s2_24,inanimate
666,0,193,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'LOC': 'New'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'politician'}, {'B_human': 'person'}, {'PER': 'i'}]","(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

",DiGraph with 29 nodes and 28 edges,possible-01,beltway,:mod,possible-01,beltway,:mod,p_0,p_0,b_26,b_26,inanimate
667,0,193,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'LOC': 'New'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'politician'}, {'B_human': 'person'}, {'PER': 'i'}]","(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

",DiGraph with 29 nodes and 28 edges,possible-01,fringe,:mod,possible-01,fringe,:mod,p_0,p_0,f2_28,f2_28,inanimate
668,0,193,"(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'LOC': 'New'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'politician'}, {'B_human': 'person'}, {'PER': 'i'}]","(p / possible-01
  :ARG1 (f / find-01
  :ARG0 (t / they)
  :ARG1 (s / someone
  :ARG1-of (i / identify-02
  :ARG0 t
  :ARG1-of (p2 / possible-01))
  :ARG0-of (r / race-02)
  :ARG1-of (h2 / have-mod-91 :polarity -
  :ARG2 (o / or
  :op1 (p3 / politician
  :ARG0-of (p4 / pose-01
  :ARG1 (p5 / person
  :ARG0-of (h / have-org-role-91
  :ARG1 (p6 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"")))))
  :source (c / country-region :wiki ""New_England"" :name (n2 / name :op1 ""New"" :op2 ""England""))
  :mod (s2 / slick))
  :op2 (i2 / insider
  :mod (b / beltway))
  :op3 (n3 / nutjob
  :mod (f2 / fringe)))))))

",DiGraph with 29 nodes and 28 edges,possible-01,country-region,:source,possible-01,country-region,:source,p_0,p_0,c_19,c_19,inanimate
669,0,194,"(d / drive-01
  :ARG0 (h / he)
  :direction (w / west)
  :source (c / city :wiki ""Houston""
  :name (n / name :op1 ""Houston""))
  :destination (c2 / city :wiki ""Austin,_Texas""
  :name (n2 / name :op1 ""Austin"")))

","[{'LOC': 'Houston'}, {'LOC': 'Houston'}, {'LOC': 'Austin'}, {'LOC': 'Texas'}, {'LOC': 'Austin'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}]","(d / drive-01
  :ARG0 (h / he)
  :direction (w / west)
  :source (c / city :wiki ""Houston""
  :name (n / name :op1 ""Houston""))
  :destination (c2 / city :wiki ""Austin,_Texas""
  :name (n2 / name :op1 ""Austin"")))

",DiGraph with 11 nodes and 10 edges,drive-01,city,:destination,drive-01,city,:source,d_0,d_0,c2_7,c_3,inanimate
670,0,194,"(d / drive-01
  :ARG0 (h / he)
  :direction (w / west)
  :source (c / city :wiki ""Houston""
  :name (n / name :op1 ""Houston""))
  :destination (c2 / city :wiki ""Austin,_Texas""
  :name (n2 / name :op1 ""Austin"")))

","[{'LOC': 'Houston'}, {'LOC': 'Houston'}, {'LOC': 'Austin'}, {'LOC': 'Texas'}, {'LOC': 'Austin'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}]","(d / drive-01
  :ARG0 (h / he)
  :direction (w / west)
  :source (c / city :wiki ""Houston""
  :name (n / name :op1 ""Houston""))
  :destination (c2 / city :wiki ""Austin,_Texas""
  :name (n2 / name :op1 ""Austin"")))

",DiGraph with 11 nodes and 10 edges,drive-01,city,:source,drive-01,city,:source,d_0,d_0,c_3,c_3,inanimate
671,0,195,"(m / meet-02
  :ARG0 (b / boy)
  :ARG1 (g / girl
  :source (c / country :wiki ""Spain"" :name (n / name :op1 ""Spain""))))

","[{'LOC': 'Spain'}, {'LOC': 'Spain'}, {'B_human': 'boy'}, {'B_human': 'girl'}, {'W_Inanimate': 'country'}]","(m / meet-02
  :ARG0 (b / boy)
  :ARG1 (g / girl
  :source (c / country :wiki ""Spain"" :name (n / name :op1 ""Spain""))))

",DiGraph with 7 nodes and 6 edges,meet-02,country,:source,meet-02,country,:source,m_0,m_0,c_3,c_3,inanimate
672,0,196,"(d / drive-01
  :ARG0 (i / i)
  :source (s / store))

",[{'PER': 'i'}],"(d / drive-01
  :ARG0 (i / i)
  :source (s / store))

",DiGraph with 3 nodes and 2 edges,drive-01,store,:source,drive-01,store,:source,d_0,d_0,s_2,s_2,inanimate
673,0,197,"(b / back-02
  :ARG0 (i / i)
  :source (w / window))

",[{'PER': 'i'}],"(b / back-02
  :ARG0 (i / i)
  :source (w / window))

",DiGraph with 3 nodes and 2 edges,back-02,window,:source,back-02,window,:source,b_0,b_0,w_2,w_2,inanimate
674,0,198,"(c / coin
  :source (c2 / country :wiki ""Soviet_Union"" :name (n / name :op1 ""Soviet"" :op2 ""Union"")
  :time (f / former)))

","[{'LOC': 'Soviet'}, {'LOC': 'Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'W_Inanimate': 'country'}]","(c / coin
  :source (c2 / country :wiki ""Soviet_Union"" :name (n / name :op1 ""Soviet"" :op2 ""Union"")
  :time (f / former)))

",DiGraph with 7 nodes and 6 edges,coin,country,:source,coin,country,:source,c_0,c_0,c2_1,c2_1,inanimate
675,0,199,"(p / physicist
  :source (a / all-over
  :op1 (w / world)))

",[],"(p / physicist
  :source (a / all-over
  :op1 (w / world)))

",DiGraph with 3 nodes and 2 edges,physicist,all-over,:source,physicist,all-over,:source,p_0,p_0,a_1,a_1,inanimate
676,0,200,"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",[],"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",DiGraph with 3 nodes and 2 edges,missile,surface,:destination,missile,surface,:source,m_0,m_0,s2_2,s_1,inanimate
677,0,200,"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",[],"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",DiGraph with 3 nodes and 2 edges,missile,surface,:source,missile,surface,:source,m_0,m_0,s_1,s_1,inanimate
678,0,201,"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",[],"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",DiGraph with 3 nodes and 2 edges,missile,surface,:destination,missile,surface,:source,m_0,m_0,s2_2,s_1,inanimate
679,0,201,"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",[],"(m / missile
  :source (s / surface)
  :destination (s2 / surface))

",DiGraph with 3 nodes and 2 edges,missile,surface,:source,missile,surface,:source,m_0,m_0,s_1,s_1,inanimate
680,0,202,"(g / get-01
  :ARG0 (s / she)
  :ARG1 (d / degree
  :mod (m / master)
  :topic (l / linguistics)
  :source (u / university :wiki ""University_of_California,_Los_Angeles"" :name (n / name :op1 ""UCLA""))))

","[{'ORG': 'University_of_California'}, {'LOC': 'Los_Angeles'}, {'ORG': 'UCLA'}, {'B_human': 'master'}, {'W_Animate': 'university'}]","(g / get-01
  :ARG0 (s / she)
  :ARG1 (d / degree
  :mod (m / master)
  :topic (l / linguistics)
  :source (u / university :wiki ""University_of_California,_Los_Angeles"" :name (n / name :op1 ""UCLA""))))

",DiGraph with 9 nodes and 8 edges,get-01,master,:mod,get-01,master,:mod,g_0,g_0,m_3,m_3,inanimate
681,0,202,"(g / get-01
  :ARG0 (s / she)
  :ARG1 (d / degree
  :mod (m / master)
  :topic (l / linguistics)
  :source (u / university :wiki ""University_of_California,_Los_Angeles"" :name (n / name :op1 ""UCLA""))))

","[{'ORG': 'University_of_California'}, {'LOC': 'Los_Angeles'}, {'ORG': 'UCLA'}, {'B_human': 'master'}, {'W_Animate': 'university'}]","(g / get-01
  :ARG0 (s / she)
  :ARG1 (d / degree
  :mod (m / master)
  :topic (l / linguistics)
  :source (u / university :wiki ""University_of_California,_Los_Angeles"" :name (n / name :op1 ""UCLA""))))

",DiGraph with 9 nodes and 8 edges,get-01,university,:source,get-01,university,:source,g_0,g_0,u_5,u_5,animate
682,0,203,"(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

","[{'LOC': 'Germany'}, {'LOC': 'Germany'}, {'W_Animate': 'company'}, {'W_Inanimate': 'country'}]","(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

",DiGraph with 18 nodes and 17 edges,develop-02,giant,:mod,develop-02,giant,:mod,d_0,d_0,g_10,g_10,inanimate
683,0,203,"(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

","[{'LOC': 'Germany'}, {'LOC': 'Germany'}, {'W_Animate': 'company'}, {'W_Inanimate': 'country'}]","(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

",DiGraph with 18 nodes and 17 edges,develop-02,chemical,:mod,develop-02,chemical,:mod,d_0,d_0,c3_11,c3_11,inanimate
684,0,203,"(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

","[{'LOC': 'Germany'}, {'LOC': 'Germany'}, {'W_Animate': 'company'}, {'W_Inanimate': 'country'}]","(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

",DiGraph with 18 nodes and 17 edges,develop-02,strain,:mod,develop-02,strain,:mod,d_0,d_0,s_13,s_13,inanimate
685,0,203,"(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

","[{'LOC': 'Germany'}, {'LOC': 'Germany'}, {'W_Animate': 'company'}, {'W_Inanimate': 'country'}]","(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

",DiGraph with 18 nodes and 17 edges,develop-02,this,:mod,develop-02,this,:mod,d_0,d_0,t_15,t_15,inanimate
686,0,203,"(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

","[{'LOC': 'Germany'}, {'LOC': 'Germany'}, {'W_Animate': 'company'}, {'W_Inanimate': 'country'}]","(d / develop-02
  :ARG0 (c / company :wiki ""BASF"" :name (n / name :op1 ""BASF"" :op2 ""Group"")
  :source (c2 / country :wiki ""Germany"" :name (n3 / name :op1 ""Germany""))
  :mod (g / giant)
  :mod (c3 / chemical))
  :ARG1 (p / potato
  :mod (s / strain
  :ARG1-of (n2 / new-01)
  :mod (t / this))
  :poss-of (g2 / genetics
  :ARG1-of (m / modify-01))))

",DiGraph with 18 nodes and 17 edges,develop-02,country,:source,develop-02,country,:source,d_0,d_0,c2_6,c2_6,inanimate
687,0,204,"(a / anger-01
  :ARG0 (p2 / pressure-01
  :ARG0 (i / international)
  :ARG1 (c2 / cuisine
  :poss p
  :mod (t / traditional)))
  :ARG1 (p / person
  :source (c / country :wiki ""South_Korea""
  :name (n / name :op1 ""South"" :op2 ""Korea""))))

","[{'LOC': 'South_Korea'}, {'LOC': 'South'}, {'LOC': 'Korea'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / anger-01
  :ARG0 (p2 / pressure-01
  :ARG0 (i / international)
  :ARG1 (c2 / cuisine
  :poss p
  :mod (t / traditional)))
  :ARG1 (p / person
  :source (c / country :wiki ""South_Korea""
  :name (n / name :op1 ""South"" :op2 ""Korea""))))

",DiGraph with 12 nodes and 11 edges,anger-01,traditional,:mod,anger-01,traditional,:mod,a_0,a_0,t_5,t_5,inanimate
688,0,204,"(a / anger-01
  :ARG0 (p2 / pressure-01
  :ARG0 (i / international)
  :ARG1 (c2 / cuisine
  :poss p
  :mod (t / traditional)))
  :ARG1 (p / person
  :source (c / country :wiki ""South_Korea""
  :name (n / name :op1 ""South"" :op2 ""Korea""))))

","[{'LOC': 'South_Korea'}, {'LOC': 'South'}, {'LOC': 'Korea'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / anger-01
  :ARG0 (p2 / pressure-01
  :ARG0 (i / international)
  :ARG1 (c2 / cuisine
  :poss p
  :mod (t / traditional)))
  :ARG1 (p / person
  :source (c / country :wiki ""South_Korea""
  :name (n / name :op1 ""South"" :op2 ""Korea""))))

",DiGraph with 12 nodes and 11 edges,anger-01,country,:source,anger-01,country,:source,a_0,a_0,c_7,c_7,inanimate
689,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,country,:mod,state-01,country,:mod,s_0,s_0,c_8,c_8,inanimate
690,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,finance,:mod,state-01,finance,:mod,s_0,s_0,f3_28,f3_28,inanimate
691,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,finance,:mod,state-01,finance,:mod,s_0,s_0,f4_30,f3_28,inanimate
692,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,another,:mod,state-01,another,:mod,s_0,s_0,a5_31,a5_31,inanimate
693,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,also,:mod,state-01,also,:mod,s_0,s_0,a_32,a_32,inanimate
694,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,year,:destination,state-01,year,:source,s_0,s_0,y4_29,y_27,inanimate
695,0,205,"(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
  :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
  :ARG1 (s2 / seek-01
  :ARG0 (m / ministry
  :topic (d / defend-01)
  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
  :ARG1 (a2 / approve-01
  :ARG0 (g / government-organization
  :ARG0-of (g2 / govern-01
  :ARG1 c))
  :ARG1 (a3 / allow-01
  :ARG0 g
  :ARG1 (c2 / carry-01
  :ARG0 m
  :ARG1 (t / thing
  :ARG1-of (a4 / allocate-01
  :ARG2 (b / budget
  :poss (m2 / military)))
  :ARG1-of (u / utilize-01 :polarity -))
  :direction (f / forward)
  :source (y / year
  :mod (f3 / finance))
  :destination (y4 / year
  :mod (f4 / finance)
  :mod (a5 / another))))))
  :mod (a / also))

",DiGraph with 33 nodes and 32 edges,state-01,year,:source,state-01,year,:source,s_0,s_0,y_27,y_27,inanimate
696,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,nation,:mod,arrest-01,nation,:mod,a_0,a_0,n_9,n_9,inanimate
697,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,c,:mod,arrest-01,c,:mod,a_0,a_0,c_10,c_10,inanimate
698,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,also,:mod,arrest-01,also,:mod,a_0,a_0,a3_15,a3_15,inanimate
699,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,psychoactive,:mod,arrest-01,psychoactive,:mod,a_0,a_0,p4_21,p4_21,inanimate
700,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,pharmacy,:mod,arrest-01,pharmacy,:mod,a_0,a_0,p5_22,p5_22,inanimate
701,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,country,:destination,arrest-01,country,:source,a_0,a_0,c2_27,c_23,inanimate
702,0,206,"(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
  :ARG0 (p / police
  :ARG0-of (c3 / counter-01
  :ARG1 (d / drug)))
  :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
  :mod (n / nation)
  :mod c)
  :time (d2 / date-entity :year 2003 :month 7 :day 1)
  :mod (a3 / also)
  :time (b / break-up-08
  :ARG0 p
  :ARG1 (g / gang
  :ARG0-of (t / traffic-01
  :ARG1 (b2 / bromazepam
  :mod (p4 / psychoactive)
  :mod (p5 / pharmacy))
  :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
  :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))

",DiGraph with 31 nodes and 30 edges,arrest-01,country,:source,arrest-01,country,:source,a_0,a_0,c_23,c_23,inanimate
703,0,207,"(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

",DiGraph with 12 nodes and 11 edges,contrast-01,city,:mod,contrast-01,city,:mod,c2_0,c2_0,c_2,c_2,inanimate
704,0,207,"(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

",DiGraph with 12 nodes and 11 edges,contrast-01,machine,:destination,contrast-01,machine,:source,c2_0,c2_0,m2_9,m_8,inanimate
705,0,207,"(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
  :ARG1 (h / horse
  :mod (c / city :wiki ""Troy""
  :name (n / name :op1 ""Troy""))
  :ARG1-of (r / replicate-01 :polarity -
  :source (m / machine)
  :destination (m2 / machine)))
  :ARG2 (v / virus
  :ARG1-of r))

",DiGraph with 12 nodes and 11 edges,contrast-01,machine,:source,contrast-01,machine,:source,c2_0,c2_0,m_8,m_8,inanimate
706,0,208,"(s / say-01
  :ARG0 (n5 / newspaper :wiki ""The_Times"" :name (n / name :op1 ""The"" :op2 ""Times""))
  :ARG1 (a / and
  :op1 (w / witness-01
  :ARG0 (p2 / person :wiki ""Lee_Jye"" :name (n2 / name :op1 ""Lee"" :op2 ""Jye"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m / minister
  :topic (d / defend-01))))
  :ARG1 (f / fire-01
  :ARG1 (m2 / missile)
  :ARG1-of (t / test-01)
  :source (b / base :wiki - :name (n3 / name :op1 ""Chiupeng"")
  :mod (m3 / military)
  :location (c / county :wiki ""Pingtung_City"" :name (n4 / name :op1 ""Pingtung"")
  :location (s2 / south)))))
  :op2 (f2 / fly-01
  :ARG1 m2
  :time (b2 / before
  :op1 (h / hit-02
  :ARG0 m2
  :ARG1 (t2 / target
  :poss m2)))
  :quant (o / over
  :op1 (d2 / distance-quantity :quant 500
  :unit (k / kilometer))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'LOC': 'Lee'}, {'ORG': 'J'}, {'MISC': 'ye'}, {'PER': 'Lee'}, {'MISC': 'J'}, {'LOC': 'Ping'}, {'LOC': 'City'}, {'LOC': 'Ping'}, {'B_human': 'person'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'location'}]","(s / say-01
  :ARG0 (n5 / newspaper :wiki ""The_Times"" :name (n / name :op1 ""The"" :op2 ""Times""))
  :ARG1 (a / and
  :op1 (w / witness-01
  :ARG0 (p2 / person :wiki ""Lee_Jye"" :name (n2 / name :op1 ""Lee"" :op2 ""Jye"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m / minister
  :topic (d / defend-01))))
  :ARG1 (f / fire-01
  :ARG1 (m2 / missile)
  :ARG1-of (t / test-01)
  :source (b / base :wiki - :name (n3 / name :op1 ""Chiupeng"")
  :mod (m3 / military)
  :location (c / county :wiki ""Pingtung_City"" :name (n4 / name :op1 ""Pingtung"")
  :location (s2 / south)))))
  :op2 (f2 / fly-01
  :ARG1 m2
  :time (b2 / before
  :op1 (h / hit-02
  :ARG0 m2
  :ARG1 (t2 / target
  :poss m2)))
  :quant (o / over
  :op1 (d2 / distance-quantity :quant 500
  :unit (k / kilometer))))))

",DiGraph with 40 nodes and 39 edges,say-01,military,:mod,say-01,military,:mod,s_0,s_0,m3_23,m3_23,inanimate
707,0,208,"(s / say-01
  :ARG0 (n5 / newspaper :wiki ""The_Times"" :name (n / name :op1 ""The"" :op2 ""Times""))
  :ARG1 (a / and
  :op1 (w / witness-01
  :ARG0 (p2 / person :wiki ""Lee_Jye"" :name (n2 / name :op1 ""Lee"" :op2 ""Jye"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m / minister
  :topic (d / defend-01))))
  :ARG1 (f / fire-01
  :ARG1 (m2 / missile)
  :ARG1-of (t / test-01)
  :source (b / base :wiki - :name (n3 / name :op1 ""Chiupeng"")
  :mod (m3 / military)
  :location (c / county :wiki ""Pingtung_City"" :name (n4 / name :op1 ""Pingtung"")
  :location (s2 / south)))))
  :op2 (f2 / fly-01
  :ARG1 m2
  :time (b2 / before
  :op1 (h / hit-02
  :ARG0 m2
  :ARG1 (t2 / target
  :poss m2)))
  :quant (o / over
  :op1 (d2 / distance-quantity :quant 500
  :unit (k / kilometer))))))

","[{'ORG': 'The'}, {'ORG': 'Times'}, {'MISC': 'Times'}, {'LOC': 'Lee'}, {'ORG': 'J'}, {'MISC': 'ye'}, {'PER': 'Lee'}, {'MISC': 'J'}, {'LOC': 'Ping'}, {'LOC': 'City'}, {'LOC': 'Ping'}, {'B_human': 'person'}, {'W_Inanimate': 'newspaper'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'county'}, {'W_Inanimate': 'location'}]","(s / say-01
  :ARG0 (n5 / newspaper :wiki ""The_Times"" :name (n / name :op1 ""The"" :op2 ""Times""))
  :ARG1 (a / and
  :op1 (w / witness-01
  :ARG0 (p2 / person :wiki ""Lee_Jye"" :name (n2 / name :op1 ""Lee"" :op2 ""Jye"")
  :ARG0-of (h2 / have-org-role-91
  :ARG2 (m / minister
  :topic (d / defend-01))))
  :ARG1 (f / fire-01
  :ARG1 (m2 / missile)
  :ARG1-of (t / test-01)
  :source (b / base :wiki - :name (n3 / name :op1 ""Chiupeng"")
  :mod (m3 / military)
  :location (c / county :wiki ""Pingtung_City"" :name (n4 / name :op1 ""Pingtung"")
  :location (s2 / south)))))
  :op2 (f2 / fly-01
  :ARG1 m2
  :time (b2 / before
  :op1 (h / hit-02
  :ARG0 m2
  :ARG1 (t2 / target
  :poss m2)))
  :quant (o / over
  :op1 (d2 / distance-quantity :quant 500
  :unit (k / kilometer))))))

",DiGraph with 40 nodes and 39 edges,say-01,base,:source,say-01,base,:source,s_0,s_0,b_19,b_19,inanimate
708,0,209,"(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

",DiGraph with 13 nodes and 12 edges,have-03,country,:mod,have-03,country,:mod,h_0,h_0,c_4,c_4,inanimate
709,0,209,"(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

",DiGraph with 13 nodes and 12 edges,have-03,surface,:destination,have-03,surface,:source,h_0,h_0,s2_9,s_8,inanimate
710,0,209,"(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
  :ARG0 (f / force
  :ARG1-of (a / arm-01)
  :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
  :ARG1 (m / missile
  :source (s / surface)
  :destination (s2 / surface))
  :time (c2 / current)
  :location (i / inventory
  :poss f))

",DiGraph with 13 nodes and 12 edges,have-03,surface,:source,have-03,surface,:source,h_0,h_0,s_8,s_8,inanimate
711,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,cause-01,:ARG1-of,significant-02,cause-01,cause-01,s_0,c_3,c_3,s_0,inanimate
712,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,cause-01,:ARG1-of,significant-02,cause-01,cause-01,s_0,c_3,c_3,s_0,inanimate
713,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,such,:mod,significant-02,such,:mod,s_0,s_0,s2_2,s2_2,inanimate
714,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,upper,:mod,significant-02,upper,:mod,s_0,s_0,u_22,u_22,inanimate
715,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,surface,:destination,significant-02,surface,:source,s_0,s_0,s4_10,s3_9,inanimate
716,0,210,"(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

","[{'MISC': 'Missile'}, {'MISC': 'Technology'}, {'MISC': 'Control'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(s / significant-02
  :ARG1 (r / rocket
  :mod (s2 / such))
  :ARG1-of (c / cause-01
  :ARG0 (t / thing
  :ARG1-of (i / imply-01
  :ARG0 (e / effort-01
  :ARG1 (d / develop-02
  :ARG1 (m / missile
  :source (s3 / surface)
  :destination (s4 / surface)
  :ARG1-of (r2 / range-01
  :ARG2 (t2 / thing
  :ARG2-of (l / limit-01
  :ARG0 (o / organization :wiki ""Missile_Technology_Control_Regime"" :name (n / name :op1 ""Missile"" :op2 ""Technology"" :op3 ""Control"" :op4 ""Regime"")
  :ARG1-of (v / voluntary-02)))
  :mod (u / upper))))))))))

",DiGraph with 23 nodes and 22 edges,significant-02,surface,:source,significant-02,surface,:source,s_0,s_0,s3_9,s3_9,inanimate
717,0,211,"(p / product
  :ARG0-of (l / launch-01
  :ARG1 (r / rocket))
  :source (c / country :wiki ""Belgium""
  :name (n / name :op1 ""Belgium"")))

","[{'LOC': 'Belgium'}, {'LOC': 'Belgium'}, {'W_Inanimate': 'country'}]","(p / product
  :ARG0-of (l / launch-01
  :ARG1 (r / rocket))
  :source (c / country :wiki ""Belgium""
  :name (n / name :op1 ""Belgium"")))

",DiGraph with 7 nodes and 6 edges,product,country,:source,product,country,:source,p_0,p_0,c_3,c_3,inanimate
718,0,212,"(a / and
  :op1 (r / rocket)
  :op2 (g / gun)
  :op3 (e / engine)
  :source (c / country :wiki ""France""
  :name (n / name :op1 ""France"")))

","[{'LOC': 'France'}, {'LOC': 'France'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (r / rocket)
  :op2 (g / gun)
  :op3 (e / engine)
  :source (c / country :wiki ""France""
  :name (n / name :op1 ""France"")))

",DiGraph with 8 nodes and 7 edges,and,country,:source,and,country,:source,a_0,a_0,c_4,c_4,inanimate
719,0,213,"(s / system
  :instrument-of (b / brake-01)
  :source (c / country :wiki ""Italy""
  :name (n / name :op1 ""Italy"")))

","[{'LOC': 'Italy'}, {'LOC': 'Italy'}, {'W_Inanimate': 'country'}]","(s / system
  :instrument-of (b / brake-01)
  :source (c / country :wiki ""Italy""
  :name (n / name :op1 ""Italy"")))

",DiGraph with 6 nodes and 5 edges,system,country,:source,system,country,:source,s_0,s_0,c_2,c_2,inanimate
720,0,214,"(a / and
  :op1 (t / tank
  :mod (f / fuel))
  :op2 (g / gearbox)
  :source (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain"")))

","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (t / tank
  :mod (f / fuel))
  :op2 (g / gearbox)
  :source (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain"")))

",DiGraph with 8 nodes and 7 edges,and,fuel,:mod,and,fuel,:mod,a_0,a_0,f_2,f_2,inanimate
721,0,214,"(a / and
  :op1 (t / tank
  :mod (f / fuel))
  :op2 (g / gearbox)
  :source (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain"")))

","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'W_Inanimate': 'country'}]","(a / and
  :op1 (t / tank
  :mod (f / fuel))
  :op2 (g / gearbox)
  :source (c / country :wiki ""United_Kingdom""
  :name (n / name :op1 ""Britain"")))

",DiGraph with 8 nodes and 7 edges,and,country,:source,and,country,:source,a_0,a_0,c_4,c_4,inanimate
722,0,215,"(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

","[{'LOC': 'Villa'}, {'LOC': 'Colombia'}, {'LOC': 'Colombia'}, {'LOC': 'Mexico'}, {'LOC': 'Mexico'}, {'PER': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Marcos'}, {'LOC': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Carlos'}, {'LOC': 'y'}, {'PER': 'Carlos'}, {'PER': 'Alfredo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Alfredo'}, {'ORG': 'Le'}, {'PER': 'Mario'}, {'PER': 'Alberto'}, {'LOC': 'Belt'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

",DiGraph with 57 nodes and 56 edges,state-01,federal,:mod,state-01,federal,:mod,s_0,s_0,f_2,f_2,inanimate
723,0,215,"(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

","[{'LOC': 'Villa'}, {'LOC': 'Colombia'}, {'LOC': 'Colombia'}, {'LOC': 'Mexico'}, {'LOC': 'Mexico'}, {'PER': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Marcos'}, {'LOC': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Carlos'}, {'LOC': 'y'}, {'PER': 'Carlos'}, {'PER': 'Alfredo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Alfredo'}, {'ORG': 'Le'}, {'PER': 'Mario'}, {'PER': 'Alberto'}, {'LOC': 'Belt'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

",DiGraph with 57 nodes and 56 edges,state-01,c3,:mod,state-01,c3,:mod,s_0,s_0,c3_56,c3_56,inanimate
724,0,215,"(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

","[{'LOC': 'Villa'}, {'LOC': 'Colombia'}, {'LOC': 'Colombia'}, {'LOC': 'Mexico'}, {'LOC': 'Mexico'}, {'PER': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Marcos'}, {'LOC': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Carlos'}, {'LOC': 'y'}, {'PER': 'Carlos'}, {'PER': 'Alfredo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Alfredo'}, {'ORG': 'Le'}, {'PER': 'Mario'}, {'PER': 'Alberto'}, {'LOC': 'Belt'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

",DiGraph with 57 nodes and 56 edges,state-01,country,:destination,state-01,country,:source,s_0,s_0,c3_16,c2_12,inanimate
725,0,215,"(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

","[{'LOC': 'Villa'}, {'LOC': 'Colombia'}, {'LOC': 'Colombia'}, {'LOC': 'Mexico'}, {'LOC': 'Mexico'}, {'PER': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Marcos'}, {'LOC': 'Arturo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Carlos'}, {'LOC': 'y'}, {'PER': 'Carlos'}, {'PER': 'Alfredo'}, {'LOC': 'Belt'}, {'LOC': 'Ley'}, {'PER': 'Alfredo'}, {'ORG': 'Le'}, {'PER': 'Mario'}, {'PER': 'Alberto'}, {'LOC': 'Belt'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(s / state-01
  :ARG0 (p / police
  :mod (f / federal))
  :ARG1 (r / responsible-03
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Ever"" :op2 ""Villafane""))
  :ARG1 (c / coordinate-01
  :ARG1 (t / traffic-01
  :ARG1 (d / drug)
  :source (c2 / country :wiki ""Colombia"" :name (n2 / name :op1 ""Colombia""))
  :destination (c3 / country :wiki ""Mexico"" :name (n3 / name :op1 ""Mexico"")))
  :beneficiary (o / organization
  :poss (a / and
  :op1 (p4 / person :wiki ""Arturo_Beltr√°n_Leyva"" :name (n5 / name :op1 ""Marcos"" :op2 ""Arturo"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op2 (p5 / person :wiki ""Carlos_Beltr√°n_Leyva"" :name (n6 / name :op1 ""Carlos"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op3 (p6 / person :wiki ""Alfredo_Beltr√°n_Leyva"" :name (n7 / name :op1 ""Alfredo"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :op4 (p7 / person :wiki - :name (n8 / name :op1 ""Mario"" :op2 ""Alberto"" :op3 ""Beltr√°n"" :op4 ""Leyva""))
  :op5 (p8 / person :wiki ""H√©ctor_Beltr√°n_Leyva"" :name (n9 / name :op1 ""H√©ctor"" :op2 ""Beltr√°n"" :op3 ""Leyva""))
  :ARG0-of (h / have-rel-role-91
  :ARG2 (b / brother))
  :mod c3)))))

",DiGraph with 57 nodes and 56 edges,state-01,country,:source,state-01,country,:source,s_0,s_0,c2_12,c2_12,inanimate
726,0,216,"(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

","[{'LOC': 'Caucasus'}, {'LOC': 'Caucasus'}, {'LOC': 'Caspian_Sea'}, {'LOC': 'Caspian'}, {'LOC': 'Sea'}, {'PER': 'i'}, {'W_Inanimate': 'sea'}]","(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

",DiGraph with 15 nodes and 14 edges,conduit,world,:mod,conduit,world-region,:domain,c_0,c_0,w2_14,w_1,inanimate
727,0,216,"(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

","[{'LOC': 'Caucasus'}, {'LOC': 'Caucasus'}, {'LOC': 'Caspian_Sea'}, {'LOC': 'Caspian'}, {'LOC': 'Sea'}, {'PER': 'i'}, {'W_Inanimate': 'sea'}]","(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

",DiGraph with 15 nodes and 14 edges,conduit,market,:destination,conduit,market,:destination,c_0,c_0,m_13,m_13,inanimate
728,0,216,"(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

","[{'LOC': 'Caucasus'}, {'LOC': 'Caucasus'}, {'LOC': 'Caspian_Sea'}, {'LOC': 'Caspian'}, {'LOC': 'Sea'}, {'PER': 'i'}, {'W_Inanimate': 'sea'}]","(c / conduit
  :domain (w / world-region :wiki ""Caucasus"" :name (n / name :op1 ""Caucasus""))
  :ARG1-of (i / important-01)
  :purpose (f / flow-01
  :ARG1 (o / oil)
  :source (s / sea :wiki ""Caspian_Sea"" :name (n2 / name :op1 ""Caspian"" :op2 ""Sea""))
  :destination (m / market
  :mod (w2 / world))))

",DiGraph with 15 nodes and 14 edges,conduit,sea,:source,conduit,sea,:source,c_0,c_0,s_8,s_8,inanimate
729,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,video,:mod,consist-01,video,:mod,c_0,c_0,v_4,v_4,inanimate
730,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,publication,:mod,consist-01,publication,:mod,c_0,c_0,p_5,p_5,inanimate
731,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,country,:mod,consist-01,country,:mod,c_0,c_0,c4_14,c4_14,inanimate
732,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,intercourse,:mod,consist-01,intercourse,:mod,c_0,c_0,i_28,i_28,inanimate
733,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,sex-01,:mod,consist-01,sex-01,:mod,c_0,c_0,s2_29,s2_29,inanimate
734,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,certain,:mod,consist-01,certain,:mod,c_0,c_0,c5_30,c5_30,inanimate
735,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,also,:mod,consist-01,also,:mod,c_0,c_0,a_33,a_33,inanimate
736,0,217,"(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

","[{'ORG': 'YouTube'}, {'ORG': 'YouTube'}, {'PER': 'Bill'}, {'PER': 'Maher'}, {'PER': 'Bill'}, {'PER': 'Ma'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'Ali_al-Sistan'}, {'LOC': 'Al-Sistani'}, {'B_human': 'person'}, {'B_human': 'couple'}, {'PER': 'i'}, {'W_Inanimate': 'publication'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(c / consist-01
  :ARG1 (t / thing
  :ARG1-of (s / state-01))
  :ARG2 (c2 / clip
  :mod (v / video)
  :mod (p / publication :wiki ""YouTube"" :name (n / name :op1 ""YouTube""))
  :poss (c3 / comedian :wiki ""Bill_Maher"" :name (n2 / name :op1 ""Bill"" :op2 ""Maher"")
  :mod (c4 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States"")))
  :ARG0-of (r / ridicule-01
  :ARG1 (f / fatwa
  :source (p2 / person :wiki ""Ali_al-Sistani"" :name (n4 / name :op1 ""Al-Sistani""))
  :topic (t2 / truth-value
  :polarity-of (p3 / permit-01
  :ARG1 (p4 / position
  :mod (i / intercourse
  :mod (s2 / sex-01))
  :mod (c5 / certain))
  :ARG2 (c6 / couple
  :ARG1-of (m / marry-01)))))))
  :mod (a / also))

",DiGraph with 34 nodes and 33 edges,consist-01,person,:source,consist-01,person,:source,c_0,c_0,p2_21,p2_21,animate
737,0,218,"(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

","[{'PER': 'Philip'}, {'PER': 'Fr'}, {'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'PER': 'Saddam'}, {'PER': 'Hussein'}, {'PER': 'Saddam'}, {'B_human': 'spokesman'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

",DiGraph with 40 nodes and 39 edges,tell-01,case,:mod,tell-01,case,:mod,t_0,t_0,c5_37,c5_37,inanimate
738,0,218,"(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

","[{'PER': 'Philip'}, {'PER': 'Fr'}, {'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'PER': 'Saddam'}, {'PER': 'Hussein'}, {'PER': 'Saddam'}, {'B_human': 'spokesman'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

",DiGraph with 40 nodes and 39 edges,tell-01,any,:mod,tell-01,any,:mod,t_0,t_0,a4_38,a4_38,inanimate
739,0,218,"(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

","[{'PER': 'Philip'}, {'PER': 'Fr'}, {'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'PER': 'Saddam'}, {'PER': 'Hussein'}, {'PER': 'Saddam'}, {'B_human': 'spokesman'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(t / tell-01
  :ARG0 (p4 / person :wiki - :name (n / name :op1 ""Philip"" :op2 ""A."" :op3 ""Frayne"")
  :ARG0-of (h / have-org-role-91
  :ARG1 (e / embassy)
  :ARG2 (s2 / spokesman)
  :location (c3 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (a2 / and
  :op1 (f / figure :polarity -
  :ARG1-of (r / rely-01
  :ARG1-of (p5 / possible-01))
  :topic (n5 / number
  :quant-of (p6 / person
  :ARG0-of (f2 / flee-05
  :ARG1 (c4 / country :wiki ""Iraq"" :name (n3 / name :op1 ""Iraq""))))))
  :op2 (d / drive-02
  :ARG0 (p7 / person :wiki ""Saddam_Hussein"" :name (n4 / name :op1 ""Saddam""))
  :ARG1 (l / large
  :domain (p8 / percentage
  :ARG3-of (i2 / include-91
  :ARG2 p6)))
  :direction (o / out)
  :source c4
  :mod (c5 / case
  :mod (a4 / any))))
  :ARG2 (i / i))

",DiGraph with 40 nodes and 39 edges,tell-01,c4,:source,tell-01,c4,:source,t_0,t_0,c4_36,c4_36,inanimate
740,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,some,:mod,point-out-02,some,:mod,p_0,p_0,s2_6,s2_6,inanimate
741,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,language,:mod,point-out-02,language,:mod,p_0,p_0,l5_8,l5_8,inanimate
742,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,original,:mod,point-out-02,original,:mod,p_0,p_0,o_23,o_23,inanimate
743,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,almost,:mod,point-out-02,almost,:mod,p_0,p_0,a3_35,a3_35,inanimate
744,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,level,:destination,point-out-02,level,:source,p_0,p_0,l3_30,l_28,inanimate
745,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,country,:source,point-out-02,country,:source,p_0,p_0,c2_7,c2_7,inanimate
746,0,219,"(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

","[{'MISC': 'English'}, {'MISC': 'English'}, {'PER': 'Charles'}, {'PER': 'Darwin'}, {'LOC': 'Darwin'}, {'B_human': 'person'}, {'B_human': 'scholar'}, {'B_human': 'person'}, {'W_Inanimate': 'language'}, {'W_Animate': 'person'}]","(p / point-out-02
  :ARG0 (p3 / person
  :ARG0-of (c / criticize-01))
  :ARG1 (a / and
  :op1 (m / mistranslate-00
  :ARG0 (s / scholar
  :mod (s2 / some)
  :source (c2 / country
  :mod (l5 / language :polarity - :wiki ""English_language"" :name (n3 / name :op1 ""English""))))
  :ARG1 (t2 / theory
  :topic (e / evolve-02)))
  :op2 (m2 / misinterpret-01
  :ARG0 s
  :ARG1 (t3 / thing
  :ARG1-of (i4 / intend-01
  :ARG0 (p2 / person :wiki ""Charles_Darwin"" :name (n / name :op1 ""Darwin"")))
  :mod (o / original)))
  :op3 (t / thing
  :ARG2-of (t5 / translate-01)
  :ARG2-of (d / develop-01
  :ARG1-of (n2 / natural-03)
  :source (l / level
  :ARG1-of (l2 / low-04))
  :destination (l3 / level
  :ARG1-of (h / high-02)))
  :domain (f / falsehood
  :ARG1-of (b / bear-06
  :ARG2 (r / religion)
  :mod (a3 / almost))))
  :ARG1-of (l4 / long-03)
  :ARG1-of (a2 / actual-02)))

",DiGraph with 38 nodes and 37 edges,point-out-02,level,:source,point-out-02,level,:source,p_0,p_0,l_28,l_28,inanimate
747,0,220,"(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

","[{'LOC': 'South_Africa'}, {'LOC': 'South'}, {'LOC': 'Africa'}, {'LOC': 'East_Africa'}, {'LOC': 'Eastern'}, {'LOC': 'Africa'}, {'LOC': 'Angola'}, {'LOC': 'Angola'}, {'LOC': 'Zambia'}, {'LOC': 'Zambia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

",DiGraph with 22 nodes and 21 edges,know-02,world-region,:destination,know-02,world-region,:destination,k_0,k_0,w_7,w_7,inanimate
748,0,220,"(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

","[{'LOC': 'South_Africa'}, {'LOC': 'South'}, {'LOC': 'Africa'}, {'LOC': 'East_Africa'}, {'LOC': 'Eastern'}, {'LOC': 'Africa'}, {'LOC': 'Angola'}, {'LOC': 'Angola'}, {'LOC': 'Zambia'}, {'LOC': 'Zambia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

",DiGraph with 22 nodes and 21 edges,know-02,up-to,:destination,know-02,up-to,:destination,k_0,k_0,u_12,u_12,inanimate
749,0,220,"(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

","[{'LOC': 'South_Africa'}, {'LOC': 'South'}, {'LOC': 'Africa'}, {'LOC': 'East_Africa'}, {'LOC': 'Eastern'}, {'LOC': 'Africa'}, {'LOC': 'Angola'}, {'LOC': 'Angola'}, {'LOC': 'Zambia'}, {'LOC': 'Zambia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(k / know-02
  :ARG1 (i2 / it)
  :source (c / country :wiki ""South_Africa"" :name (n / name :op1 ""South"" :op2 ""Africa""))
  :destination (w / world-region :wiki ""East_Africa"" :name (n2 / name :op1 ""Eastern"" :op2 ""Africa""))
  :destination (u / up-to
  :op1 (a / and
  :op1 (c3 / country :wiki ""Angola"" :name (n3 / name :op1 ""Angola""))
  :op2 (c4 / country :wiki ""Zambia"" :name (n4 / name :op1 ""Zambia"")))))

",DiGraph with 22 nodes and 21 edges,know-02,country,:source,know-02,country,:source,k_0,k_0,c_2,c_2,inanimate
750,0,221,"(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

","[{'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Canada'}, {'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Alberta'}, {'LOC': 'Alberta'}, {'LOC': 'Saskatchewan'}, {'LOC': 'Saskatchewan'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'province'}]","(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

",DiGraph with 16 nodes and 15 edges,name-02,province,:destination,name-02,province,:source,n_0,n_0,p2_12,p_8,inanimate
751,0,221,"(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

","[{'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Canada'}, {'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Alberta'}, {'LOC': 'Alberta'}, {'LOC': 'Saskatchewan'}, {'LOC': 'Saskatchewan'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'province'}]","(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

",DiGraph with 16 nodes and 15 edges,name-02,province,:source,name-02,province,:source,n_0,n_0,p_8,p_8,inanimate
752,0,222,"(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

","[{'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Canada'}, {'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Alberta'}, {'LOC': 'Alberta'}, {'LOC': 'Saskatchewan'}, {'LOC': 'Saskatchewan'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'province'}]","(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

",DiGraph with 16 nodes and 15 edges,name-02,province,:destination,name-02,province,:source,n_0,n_0,p2_12,p_8,inanimate
753,0,222,"(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

","[{'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Canada'}, {'LOC': 'Beaver'}, {'LOC': 'River'}, {'LOC': 'Alberta'}, {'LOC': 'Alberta'}, {'LOC': 'Saskatchewan'}, {'LOC': 'Saskatchewan'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'province'}]","(n / name-02
  :ARG1 (i2 / it)
  :ARG2 (r / river :wiki ""Beaver_River_(Canada)"" :name (n2 / name :op1 ""Beaver"" :op2 ""River"")
  :ARG1-of (f / flow-01
  :source (p / province :wiki ""Alberta"" :name (n3 / name :op1 ""Alberta""))
  :destination (p2 / province :wiki ""Saskatchewan"" :name (n4 / name :op1 ""Saskatchewan"")))))

",DiGraph with 16 nodes and 15 edges,name-02,province,:source,name-02,province,:source,n_0,n_0,p_8,p_8,inanimate
754,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:destination,list-01,city,:source,l2_0,l2_0,c5_8,c4_4,inanimate
755,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:destination,list-01,city,:source,l2_0,l2_0,c7_19,c4_4,inanimate
756,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,country,:destination,list-01,country,:location,l2_0,l2_0,c9_33,c6_13,inanimate
757,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,c6,:destination,list-01,c6,:destination,l2_0,l2_0,c6_39,c6_39,inanimate
758,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:source,list-01,city,:source,l2_0,l2_0,c4_4,c4_4,inanimate
759,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,c4,:source,list-01,c4,:source,l2_0,l2_0,c4_18,c4_18,inanimate
760,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,province,:source,list-01,province,:source,l2_0,l2_0,p_29,p_29,inanimate
761,0,223,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,p,:source,list-01,p,:source,l2_0,l2_0,p_38,p_38,inanimate
762,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:destination,list-01,city,:source,l2_0,l2_0,c5_8,c4_4,inanimate
763,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:destination,list-01,city,:source,l2_0,l2_0,c7_19,c4_4,inanimate
764,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,country,:destination,list-01,country,:location,l2_0,l2_0,c9_33,c6_13,inanimate
765,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,c6,:destination,list-01,c6,:destination,l2_0,l2_0,c6_39,c6_39,inanimate
766,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,city,:source,list-01,city,:source,l2_0,l2_0,c4_4,c4_4,inanimate
767,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,c4,:source,list-01,c4,:source,l2_0,l2_0,c4_18,c4_18,inanimate
768,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,province,:source,list-01,province,:source,l2_0,l2_0,p_29,p_29,inanimate
769,0,224,"(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

","[{'LOC': 'Kunming'}, {'LOC': 'Kunming'}, {'LOC': 'Chiang_Mai'}, {'LOC': 'Chiang'}, {'LOC': 'Mai'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Las'}, {'LOC': 'Las'}, {'LOC': 'Myanmar'}, {'LOC': 'Burma'}, {'LOC': 'Yunnan'}, {'LOC': 'Yunnan'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'province'}, {'W_Inanimate': 'country'}]","(l2 / list-01
  :ARG1 (a / and
  :op1 (a2 / and
  :op1 (h / highway
  :source (c4 / city :wiki ""Kunming""
  :name (n / name :op1 ""Kunming""))
  :destination (c5 / city :wiki ""Chiang_Mai""
  :name (n2 / name :op1 ""Chiang"" :op2 ""Mai"")
  :location (c6 / country :wiki ""Thailand""
  :name (n3 / name :op1 ""Thailand""))))
  :op2 (h2 / highway
  :source c4
  :destination (c7 / city :wiki ""Lashio""
  :name (n4 / name :op1 ""Lashio"")
  :location (c8 / country :wiki ""Myanmar""
  :name (n5 / name :op1 ""Burma"")))))
  :op2 (a3 / and
  :op1 (r / railroad
  :source (p / province :wiki ""Yunnan""
  :name (n6 / name :op1 ""Yunnan""))
  :destination (c9 / country :wiki ""Vietnam""
  :name (n7 / name :op1 ""Vietnam"")))
  :op2 (r2 / railroad
  :source p
  :destination c6)))
  :ARG2 (p2 / project
  :ARG1-of (d / develop-02
  :ARG0-of (t2 / take-01
  :ARG1 (p3 / priority
  :ord (o / ordinal-entity :value 1))))))

",DiGraph with 46 nodes and 45 edges,list-01,p,:source,list-01,p,:source,l2_0,l2_0,p_38,p_38,inanimate
770,0,225,"(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'member'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

",DiGraph with 26 nodes and 25 edges,include-91,cause-01,:ARG1-of,include-91,cause-01,cause-01,i_0,c2_19,c2_19,i_0,inanimate
771,0,225,"(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'member'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

",DiGraph with 26 nodes and 25 edges,include-91,cause-01,:ARG1-of,include-91,cause-01,cause-01,i_0,c2_19,c2_19,i_0,inanimate
772,0,225,"(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'member'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

",DiGraph with 26 nodes and 25 edges,include-91,young,:mod,include-91,young,:mod,i_0,i_0,y_7,y_7,inanimate
773,0,225,"(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'member'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

",DiGraph with 26 nodes and 25 edges,include-91,country,:mod,include-91,country,:mod,i_0,i_0,c_12,c_12,inanimate
774,0,225,"(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'member'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(i / include-91
  :ARG1 (a2 / and
  :op1 (p / person :wiki - :name (n / name :op1 ""Abather""))
  :op2 (f / family
  :mod (y / young)
  :ARG1-of (h / have-org-role-91
  :ARG0 p
  :ARG2 (m2 / member))))
  :ARG2 (p2 / person
  :mod (c / country :wiki ""Iraq"" :name (n2 / name :op1 ""Iraq""))
  :quant (m / multiple :op1 100000)
  :ARG0-of (f2 / flee-05
  :ARG1-of (c2 / cause-01
  :ARG0 (f3 / fear-01
  :ARG0 p2
  :ARG2 (l / life
  :poss p2)))))
  :time (d / day
  :mod (t / this)))

",DiGraph with 26 nodes and 25 edges,include-91,this,:mod,include-91,this,:mod,i_0,i_0,t_25,t_25,inanimate
775,0,226,"(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

","[{'B_human': 'soldier'}, {'B_human': 'person'}]","(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

",DiGraph with 13 nodes and 12 edges,assign-01,cause-01,:ARG1-of,assign-01,cause-01,cause-01,a_0,c_7,c_7,a_0,inanimate
776,0,226,"(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

","[{'B_human': 'soldier'}, {'B_human': 'person'}]","(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

",DiGraph with 13 nodes and 12 edges,assign-01,cause-01,:ARG1-of,assign-01,cause-01,cause-01,a_0,c_7,c_7,a_0,inanimate
777,0,226,"(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

","[{'B_human': 'soldier'}, {'B_human': 'person'}]","(a / assign-01
  :ARG0 (s / soldier)
  :ARG1 (r / reconstruct-01
  :mod (l2 / lucrative))
  :ARG2 (h / he)
  :time (a2 / after
  :op1 l3)
  :ARG1-of (c / cause-01
  :ARG0 (l3 / learn-01
  :ARG0 s
  :ARG1 (p / person
  :ARG0-of (e / engineer-01)
  :domain h))))

",DiGraph with 13 nodes and 12 edges,assign-01,lucrative,:mod,assign-01,lucrative,:mod,a_0,a_0,l2_3,l2_3,inanimate
778,0,227,"(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

",DiGraph with 30 nodes and 29 edges,mushroom-01,cause-01,:ARG1-of,mushroom-01,cause-01,cause-01,m2_0,c3_18,c3_18,m2_0,inanimate
779,0,227,"(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

",DiGraph with 30 nodes and 29 edges,mushroom-01,cause-01,:ARG1-of,mushroom-01,cause-01,cause-01,m2_0,c3_18,c3_18,m2_0,inanimate
780,0,227,"(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

",DiGraph with 30 nodes and 29 edges,mushroom-01,electrify-01,:mod,mushroom-01,electrify-01,:mod,m2_0,m2_0,e_11,e_11,inanimate
781,0,227,"(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

",DiGraph with 30 nodes and 29 edges,mushroom-01,monetary-quantity,:mod,mushroom-01,monetary-quantity,:op1,m2_0,m2_0,m4_12,m_7,inanimate
782,0,227,"(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

","[{'B_human': 'person'}, {'W_Animate': 'person'}]","(m2 / mushroom-01
  :ARG1 (c / contract-02
  :ARG2 (p2 / person :wiki - :name (n / name :op1 ""Abather"")))
  :ARG3 (f / few
  :op1 (m / monetary-quantity :quant 1000
  :unit (d / dollar)))
  :ARG4 (p3 / project
  :mod (e / electrify-01)
  :mod (m4 / monetary-quantity :quant 862000
  :unit (d3 / dollar))
  :ARG1-of (c2 / cancel-01
  :time (a / after
  :op1 c)
  :ARG1-of (c3 / cause-01
  :ARG0 (p4 / possible-01 :polarity -
  :ARG1 (p5 / procure-01
  :ARG0 p2
  :ARG1 (t / thing
  :ARG2-of (e2 / equip-01)
  :ARG1-of (n2 / need-01)))))))
  :duration (t2 / temporal-quantity :quant 1
  :mod (h / heady)
  :unit (y / year)))

",DiGraph with 30 nodes and 29 edges,mushroom-01,heady,:mod,mushroom-01,heady,:mod,m2_0,m2_0,h_28,h_28,inanimate
783,0,228,"(c / come-01
  :ARG1 (w / word-01
  :ARG1 (d / die-01
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (h / he)
  :ARG2 (f / father)))
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / heart-attack))))
  :time (a2 / around
  :op1 (t / time
  :ARG1-of (s / same-01))))

","[{'B_human': 'person'}, {'B_human': 'father'}]","(c / come-01
  :ARG1 (w / word-01
  :ARG1 (d / die-01
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (h / he)
  :ARG2 (f / father)))
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / heart-attack))))
  :time (a2 / around
  :op1 (t / time
  :ARG1-of (s / same-01))))

",DiGraph with 12 nodes and 11 edges,come-01,cause-01,:ARG1-of,come-01,cause-01,cause-01,c_0,c2_7,c2_7,c_0,inanimate
784,0,228,"(c / come-01
  :ARG1 (w / word-01
  :ARG1 (d / die-01
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (h / he)
  :ARG2 (f / father)))
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / heart-attack))))
  :time (a2 / around
  :op1 (t / time
  :ARG1-of (s / same-01))))

","[{'B_human': 'person'}, {'B_human': 'father'}]","(c / come-01
  :ARG1 (w / word-01
  :ARG1 (d / die-01
  :ARG1 (p / person
  :ARG0-of (h3 / have-rel-role-91
  :ARG1 (h / he)
  :ARG2 (f / father)))
  :ARG1-of (c2 / cause-01
  :ARG0 (h2 / heart-attack))))
  :time (a2 / around
  :op1 (t / time
  :ARG1-of (s / same-01))))

",DiGraph with 12 nodes and 11 edges,come-01,cause-01,:ARG1-of,come-01,cause-01,cause-01,c_0,c2_7,c2_7,c_0,inanimate
785,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG1-of,tell-01,cause-01,cause-01,t_0,c_22,c4_15,t_0,inanimate
786,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG0-of,tell-01,cause-01,cause-01,t_0,c_22,c_22,t_0,inanimate
787,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG1-of,tell-01,cause-01,cause-01,t_0,c_22,c4_15,t_0,inanimate
788,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG0-of,tell-01,cause-01,cause-01,t_0,c_22,c_22,t_0,inanimate
789,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,country,:mod,tell-01,country,:mod,t_0,t_0,c3_10,c3_10,inanimate
790,0,229,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,just,:mod,tell-01,just,:mod,t_0,t_0,j_30,j_30,inanimate
791,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG1-of,tell-01,cause-01,cause-01,t_0,c_22,c4_15,t_0,inanimate
792,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG0-of,tell-01,cause-01,cause-01,t_0,c_22,c_22,t_0,inanimate
793,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG1-of,tell-01,cause-01,cause-01,t_0,c_22,c4_15,t_0,inanimate
794,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,cause-01,:ARG0-of,tell-01,cause-01,cause-01,t_0,c_22,c_22,t_0,inanimate
795,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,country,:mod,tell-01,country,:mod,t_0,t_0,c3_10,c3_10,inanimate
796,0,230,"(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
  :ARG0 (p / person
  :ARG0-of (w / work-01
  :ARG1 (a / aid-01))
  :ARG1-of (b2 / base-01
  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
  :ARG1 (d2 / distraught
  :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
  :ARG1-of (c4 / cause-01
  :ARG0 (p2 / policy-01
  :ARG1-of (r / represent-01
  :ARG0 d
  :ARG2-of (c5 / charge-05
  :ARG1 d))))
  :domain (d / diplomat)
  :ARG0-of (c / cause-01
  :ARG1 (t3 / take-10
  :ARG0 (b / break-down-11
  :ARG0 d)
  :ARG1 (a2 / and
  :op1 (g / gin)
  :op2 (t4 / tonic)
  :quant (f / few))
  :mod (j / just))))
  :ARG2 (i / i)
  :time (a3 / after))

",DiGraph with 33 nodes and 32 edges,tell-01,just,:mod,tell-01,just,:mod,t_0,t_0,j_30,j_30,inanimate
797,0,231,"(f / fear-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Balqes""))
  :ARG1-of (c / cause-01
  :ARG0 (s / show-up-02 :frequency 2
  :ARG1 (m / man
  :ARG1-of (s2 / suspicious-03))
  :location (a / apartment)
  :time (b / before
  :op1 (n2 / now)
  :duration (t / temporal-quantity :quant 1
  :unit (m4 / month)))))
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (m3 / more)))

","[{'B_human': 'person'}, {'B_human': 'man'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(f / fear-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Balqes""))
  :ARG1-of (c / cause-01
  :ARG0 (s / show-up-02 :frequency 2
  :ARG1 (m / man
  :ARG1-of (s2 / suspicious-03))
  :location (a / apartment)
  :time (b / before
  :op1 (n2 / now)
  :duration (t / temporal-quantity :quant 1
  :unit (m4 / month)))))
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (m3 / more)))

",DiGraph with 19 nodes and 18 edges,fear-01,cause-01,:ARG1-of,fear-01,cause-01,cause-01,f_0,c_5,c_5,f_0,inanimate
798,0,231,"(f / fear-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Balqes""))
  :ARG1-of (c / cause-01
  :ARG0 (s / show-up-02 :frequency 2
  :ARG1 (m / man
  :ARG1-of (s2 / suspicious-03))
  :location (a / apartment)
  :time (b / before
  :op1 (n2 / now)
  :duration (t / temporal-quantity :quant 1
  :unit (m4 / month)))))
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (m3 / more)))

","[{'B_human': 'person'}, {'B_human': 'man'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(f / fear-01
  :ARG0 (p2 / person :wiki - :name (n / name :op1 ""Balqes""))
  :ARG1-of (c / cause-01
  :ARG0 (s / show-up-02 :frequency 2
  :ARG1 (m / man
  :ARG1-of (s2 / suspicious-03))
  :location (a / apartment)
  :time (b / before
  :op1 (n2 / now)
  :duration (t / temporal-quantity :quant 1
  :unit (m4 / month)))))
  :ARG2-of (h / have-degree-91
  :ARG1 p2
  :ARG3 (m3 / more)))

",DiGraph with 19 nodes and 18 edges,fear-01,cause-01,:ARG1-of,fear-01,cause-01,cause-01,f_0,c_5,c_5,f_0,inanimate
799,0,232,"(r / run-04
  :ARG1 (h / hair
  :ARG1-of (f / fine-02)
  :location (b / back
  :part-of (h2 / human)))
  :ARG3 (s / side
  :part-of (s2 / shoulder))
  :direction (t / toward
  :op1 (s3 / spine)
  :ARG1-of (r2 / resemble-01 :polarity -
  :ARG2 (d / direction
  :poss (h3 / hair
  :location (b2 / back
  :part-of (m / monkey))))))
  :ARG0-of (c / cause-01
  :ARG1 (e / explain-01
  :ARG1 (t2 / this))))

","[{'B_animal': 'monkey'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(r / run-04
  :ARG1 (h / hair
  :ARG1-of (f / fine-02)
  :location (b / back
  :part-of (h2 / human)))
  :ARG3 (s / side
  :part-of (s2 / shoulder))
  :direction (t / toward
  :op1 (s3 / spine)
  :ARG1-of (r2 / resemble-01 :polarity -
  :ARG2 (d / direction
  :poss (h3 / hair
  :location (b2 / back
  :part-of (m / monkey))))))
  :ARG0-of (c / cause-01
  :ARG1 (e / explain-01
  :ARG1 (t2 / this))))

",DiGraph with 18 nodes and 17 edges,run-04,cause-01,:ARG0-of,run-04,cause-01,cause-01,r_0,c_15,c_15,r_0,inanimate
800,0,232,"(r / run-04
  :ARG1 (h / hair
  :ARG1-of (f / fine-02)
  :location (b / back
  :part-of (h2 / human)))
  :ARG3 (s / side
  :part-of (s2 / shoulder))
  :direction (t / toward
  :op1 (s3 / spine)
  :ARG1-of (r2 / resemble-01 :polarity -
  :ARG2 (d / direction
  :poss (h3 / hair
  :location (b2 / back
  :part-of (m / monkey))))))
  :ARG0-of (c / cause-01
  :ARG1 (e / explain-01
  :ARG1 (t2 / this))))

","[{'B_animal': 'monkey'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(r / run-04
  :ARG1 (h / hair
  :ARG1-of (f / fine-02)
  :location (b / back
  :part-of (h2 / human)))
  :ARG3 (s / side
  :part-of (s2 / shoulder))
  :direction (t / toward
  :op1 (s3 / spine)
  :ARG1-of (r2 / resemble-01 :polarity -
  :ARG2 (d / direction
  :poss (h3 / hair
  :location (b2 / back
  :part-of (m / monkey))))))
  :ARG0-of (c / cause-01
  :ARG1 (e / explain-01
  :ARG1 (t2 / this))))

",DiGraph with 18 nodes and 17 edges,run-04,cause-01,:ARG0-of,run-04,cause-01,cause-01,r_0,c_15,c_15,r_0,inanimate
801,0,233,"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",[],"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",DiGraph with 8 nodes and 7 edges,consist-01,cause-01,:ARG1-of,consist-01,cause-01,cause-01,c_0,c2_4,c2_4,c_0,inanimate
802,0,233,"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",[],"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",DiGraph with 8 nodes and 7 edges,consist-01,cause-01,:ARG1-of,consist-01,cause-01,cause-01,c_0,c2_4,c2_4,c_0,inanimate
803,0,233,"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",[],"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",DiGraph with 8 nodes and 7 edges,consist-01,cornea,:mod,consist-01,cornea,:mod,c_0,c_0,c3_6,c3_6,inanimate
804,0,233,"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",[],"(c / consist-01
  :ARG1 (s / symptom)
  :ARG2 (s2 / see-01
  :ARG1-of (d / decrease-01
  :ARG1-of (c2 / cause-01
  :ARG0 (e / edema
  :mod (c3 / cornea)))))
  :mod (m / main))

",DiGraph with 8 nodes and 7 edges,consist-01,main,:mod,consist-01,main,:mod,c_0,c_0,m_7,m_7,inanimate
805,0,234,"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",[],"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",DiGraph with 7 nodes and 6 edges,distinguish-01,cause-01,:ARG1-of,distinguish-01,cause-01,cause-01,d_0,c_2,c_2,d_0,inanimate
806,0,234,"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",[],"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",DiGraph with 7 nodes and 6 edges,distinguish-01,cause-01,:ARG1-of,distinguish-01,cause-01,cause-01,d_0,c_2,c_2,d_0,inanimate
807,0,234,"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",[],"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",DiGraph with 7 nodes and 6 edges,distinguish-01,agrarian,:mod,distinguish-01,agrarian,:mod,d_0,d_0,a_4,a_4,inanimate
808,0,234,"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",[],"(d / distinguish-01
  :ARG1 (t / they)
  :ARG1-of (c / cause-01
  :ARG0 (l / lifestyle
  :mod (a / agrarian)
  :mod (p / pastoral)
  :poss t)))

",DiGraph with 7 nodes and 6 edges,distinguish-01,pastoral,:mod,distinguish-01,pastoral,:mod,d_0,d_0,p_5,p_5,inanimate
809,0,235,"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",[],"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",DiGraph with 17 nodes and 16 edges,country,cause-01,:ARG0-of,country,cause-01,cause-01,c_0,c3_3,c3_3,c_0,inanimate
810,0,235,"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",[],"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",DiGraph with 17 nodes and 16 edges,country,cause-01,:ARG0-of,country,cause-01,cause-01,c_0,c3_3,c3_3,c_0,inanimate
811,0,235,"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",[],"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",DiGraph with 17 nodes and 16 edges,country,large,:mod,country,large,:mod,c_0,c_0,l_1,l_1,inanimate
812,0,235,"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",[],"(c / country
  :mod (l / large)
  :ARG1-of (d / develop-02)
  :ARG0-of (c3 / cause-01
  :ARG1 (o / obligate-01
  :ARG2 (f / found-01
  :ARG1 (p2 / point
  :ARG2-of (s2 / stand-01
  :ARG1 (c4 / construct-01
  :ARG1 (e / economy))))
  :ARG2 (s3 / strong-02
  :ARG1 w))))
  :poss (w / we)
  :mod (p / political-movement :wiki ""Socialism"" :name (n / name :op1 ""socialism"")))

",DiGraph with 17 nodes and 16 edges,country,political-movement,:mod,country,political-movement,:mod,c_0,c_0,p_13,p_13,inanimate
813,0,236,"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",[{'W_Inanimate': 'location'}],"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",DiGraph with 16 nodes and 15 edges,chance-02,cause-01,:ARG1-of,chance-02,cause-01,cause-01,c_0,c3_8,c3_8,c_0,inanimate
814,0,236,"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",[{'W_Inanimate': 'location'}],"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",DiGraph with 16 nodes and 15 edges,chance-02,cause-01,:ARG1-of,chance-02,cause-01,cause-01,c_0,c3_8,c3_8,c_0,inanimate
815,0,236,"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",[{'W_Inanimate': 'location'}],"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",DiGraph with 16 nodes and 15 edges,chance-02,cargo,:mod,chance-02,cargo,:mod,c_0,c_0,c2_3,c2_3,inanimate
816,0,236,"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",[{'W_Inanimate': 'location'}],"(c / chance-02
  :ARG1 (d / dock-01
  :ARG1 (s / spaceship
  :mod (c2 / cargo)
  :mod (t2 / this))
  :ARG2 (s2 / station
  :ARG0-of (o / orbit-01)))
  :domain (t / this)
  :ARG1-of (c3 / cause-01
  :ARG0 (l2 / limit-01
  :ARG1 (f / fuel
  :location s)
  :degree (v / very)
  :time (a / already)))
  :ord (o2 / ordinal-entity :value ""-1""))

",DiGraph with 16 nodes and 15 edges,chance-02,this,:mod,chance-02,this,:mod,c_0,c_0,t2_4,t2_4,inanimate
817,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,cause-01,:ARG1-of,decide-01,cause-01,cause-01,d_0,c5_22,c5_22,d_0,inanimate
818,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,cause-01,:ARG1-of,decide-01,cause-01,cause-01,d_0,c5_22,c5_22,d_0,inanimate
819,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,science,:mod,decide-01,science,:mod,d_0,d_0,s2_14,s2_14,inanimate
820,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,treasure,:mod,decide-01,treasure,:mod,d_0,d_0,t_16,t_16,inanimate
821,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,country,:mod,decide-01,country,:mod,d_0,d_0,c4_18,c4_18,inanimate
822,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,medicine,:mod,decide-01,medicine,:part-of,d_0,d_0,m2_27,m_17,inanimate
823,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,this,:mod,decide-01,this,:mod,d_0,d_0,t3_28,t3_28,inanimate
824,0,237,"(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

","[{'LOC': 'Jiao'}, {'LOC': 'Bo'}, {'LOC': 'zhong'}, {'LOC': 'China'}, {'LOC': 'China'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d / decide-01
  :ARG0 (a / and
  :op1 (p2 / person :wiki - :name (n / name :op1 ""Jiao"" :op2 ""Bozhong""))
  :op2 (r / research-institute
  :poss p2))
  :ARG1 (s / seek-out-02
  :ARG0 a
  :ARG1 (t4 / thing
  :ARG1-of (p / prescribe-02
  :ARG0-of (e / effective-04)
  :mod (s2 / science)))
  :ARG2 (c3 / chest
  :mod (t / treasure)
  :part-of (m / medicine
  :mod (c4 / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
  :ARG1-of (c5 / cause-01
  :ARG0 (f / face-01
  :ARG0 a
  :ARG1 (r2 / reality
  :poss (t2 / treat-03
  :mod (m2 / medicine)
  :mod (t3 / this)))))
  :time (y / year
  :mod (r3 / recent)))

",DiGraph with 31 nodes and 30 edges,decide-01,recent,:mod,decide-01,recent,:mod,d_0,d_0,r3_30,r3_30,inanimate
825,0,238,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (s2 / surprise-01
                  :ARG0 (a / attitude
                        :poss (u / union
                              :consist-of (p2 / person
                                    :ARG0-of (s3 / study-01)))
                        :topic (a2 / appeal-01
                              :mod (t2 / this)))
                  :ARG1 (i / i)
                  :degree (g / great)))
      :snt2 (s / seem-01
            :ARG1 (r / reluctant-01
                  :ARG0 (t / they)
                  :ARG1 (p3 / publicize-01
                        :ARG0 t
                        :ARG1 (c2 / contract-02))
                  :degree (v / very))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (s2 / surprise-01
                  :ARG0 (a / attitude
                        :poss (u / union
                              :consist-of (p2 / person
                                    :ARG0-of (s3 / study-01)))
                        :topic (a2 / appeal-01
                              :mod (t2 / this)))
                  :ARG1 (i / i)
                  :degree (g / great)))
      :snt2 (s / seem-01
            :ARG1 (r / reluctant-01
                  :ARG0 (t / they)
                  :ARG1 (p3 / publicize-01
                        :ARG0 t
                        :ARG1 (c2 / contract-02))
                  :degree (v / very))))



",DiGraph with 18 nodes and 17 edges,union,person,:consist-of,union,person,:consist-of,u_4,u_4,p2_5,p2_5,animate
826,0,238,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (s2 / surprise-01
                  :ARG0 (a / attitude
                        :poss (u / union
                              :consist-of (p2 / person
                                    :ARG0-of (s3 / study-01)))
                        :topic (a2 / appeal-01
                              :mod (t2 / this)))
                  :ARG1 (i / i)
                  :degree (g / great)))
      :snt2 (s / seem-01
            :ARG1 (r / reluctant-01
                  :ARG0 (t / they)
                  :ARG1 (p3 / publicize-01
                        :ARG0 t
                        :ARG1 (c2 / contract-02))
                  :degree (v / very))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (s2 / surprise-01
                  :ARG0 (a / attitude
                        :poss (u / union
                              :consist-of (p2 / person
                                    :ARG0-of (s3 / study-01)))
                        :topic (a2 / appeal-01
                              :mod (t2 / this)))
                  :ARG1 (i / i)
                  :degree (g / great)))
      :snt2 (s / seem-01
            :ARG1 (r / reluctant-01
                  :ARG0 (t / they)
                  :ARG1 (p3 / publicize-01
                        :ARG0 t
                        :ARG1 (c2 / contract-02))
                  :degree (v / very))))



",DiGraph with 18 nodes and 17 edges,appeal-01,this,:mod,appeal-01,this,:mod,a2_7,a2_7,t2_8,t2_8,inanimate
827,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,take-01,cause-01,:ARG1-of,take-01,cause-01,cause-01,t_1,c6_48,c6_48,t_1,inanimate
828,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,platter,silver,:consist-of,platter,silver,:consist-of,p2_30,p2_30,s_31,s_31,inanimate
829,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,take-01,cause-01,:ARG1-of,take-01,cause-01,cause-01,t_1,c6_48,c6_48,t_1,inanimate
830,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,man,old,:mod,man,old,:mod,m_3,m_3,o_4,o_4,inanimate
831,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,man,grand,:mod,man,grand,:mod,m_3,m_3,g3_5,g3_5,inanimate
832,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,chunk,huge,:mod,chunk,huge,:mod,c2_12,c2_12,h2_14,h2_14,inanimate
833,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,territory,nation,:mod,territory,nation,:mod,t3_37,t3_37,n5_38,n5_38,inanimate
834,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,grab-01,back,:mod,grab-01,back,,g2_55,g2_55,b2_69,b_47,inanimate
835,0,239,"(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



","[{'ORG': 'Communist_Party_of_China'}, {'ORG': 'CC'}, {'LOC': 'Manchuria'}, {'LOC': 'Manchuria'}, {'LOC': 'Amur'}, {'LOC': 'River'}, {'LOC': 'Amur'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Russia'}, {'LOC': 'Mongolia'}, {'LOC': 'Mongolia'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'river'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op2 (t / take-01 :polarity -
            :ARG0 (m / man
                  :mod (o / old)
                  :mod (g3 / grand)
                  :ARG0-of (h4 / have-org-role-91
                        :ARG1 (p / political-party :wiki ""Communist_Party_of_China"" :name (n / name :op1 ""CCP"")))
                  :ARG0-of (h / hand-01
                        :ARG1 (c2 / chunk
                              :part-of (l / land)
                              :mod (h2 / huge)
                              :location (c3 / country-region :wiki ""Manchuria"" :name (n9 / name :op1 ""Manchuria""))
                              :location (r3 / relative-position
                                    :op1 (r2 / river :wiki ""Amur_River"" :name (n8 / name :op1 ""Amur""))
                                    :direction (n2 / north)))
                        :ARG2 (c4 / country :wiki ""Soviet_Union"" :name (n3 / name :op1 ""Soviet"" :op2 ""Russia""))
                        :manner (p2 / platter
                              :consist-of (s / silver)))
                  :ARG0-of (g / give-away-02
                        :ARG1 (l2 / land
                              :ARG1-of (e / equal-01
                                    :ARG2 (p3 / percentage-entity :value 10
                                          :part-of (t3 / territory
                                                :mod (n5 / nation))))
                              :location (n10 / north
                                    :part-of (c5 / country :wiki ""Mongolia"" :name (n4 / name :op1 ""Mongolia""))))))
            :ARG1 (a2 / and
                  :op1 c2
                  :op2 l2)
            :ARG3 (b / back)
            :ARG1-of (c6 / cause-01
                  :ARG0 (a / amr-unknown))
            :ARG1-of (i2 / instead-of-91
                  :ARG2 (i / insist-01
                        :ARG0 m
                        :ARG1 (t2 / try-01
                              :ARG0 m
                              :ARG1 (g2 / grab-01
                                    :ARG0 m
                                    :ARG1 (c / country :wiki ""Taiwan"" :name (n7 / name :op1 ""Taiwan"")
                                          :ARG1-of (r / remain-01
                                                :ARG3 (i3 / in-ones-hands-04
                                                      :ARG0 (p4 / person
                                                            :mod (c7 / country :wiki ""China"" :name (n6 / name :op1 ""China"")))
                                                      :ARG1 c)))
                                    :mod (b2 / back)))))))



",DiGraph with 70 nodes and 69 edges,person,country,:mod,person,country-region,,p4_63,p4_63,c7_64,c3_15,inanimate
836,0,240,"(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



","[{'LOC': 'Heaven'}, {'LOC': 'Heaven'}, {'B_human': 'Son'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



",DiGraph with 29 nodes and 28 edges,hierarchy,person,:consist-of,hierarchy,person,,h_25,h_25,p2_26,p_2,animate
837,0,240,"(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



","[{'LOC': 'Heaven'}, {'LOC': 'Heaven'}, {'B_human': 'Son'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



",DiGraph with 29 nodes and 28 edges,and,all,:mod,and,all,:mod,a_14,a_14,a2_21,a2_21,inanimate
838,0,240,"(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



","[{'LOC': 'Heaven'}, {'LOC': 'Heaven'}, {'B_human': 'Son'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (w / wear-01
            :ARG0 (p / person :wiki ""Son_of_Heaven"" :name (n / name :op1 ""Son"" :op2 ""of"" :op3 ""Heaven""))
            :ARG1 (c / clothes
                  :ARG1-of (d / differ-02
                        :ARG2 (c2 / clothes
                              :ARG1-of (w2 / wear-01
                                    :ARG0 (o / other))))))
      :snt2 (s / symbolize-01
            :ARG1 (a / and
                  :op1 (c3 / color
                        :mod (d2 / door))
                  :op2 (n2 / number
                        :quant-of (c4 / caldron
                              :ARG1-of (u / use-01
                                    :ARG2 (m2 / meal))))
                  :mod (a2 / all))
            :purpose (d3 / distinguish-01
                  :ARG0 a
                  :ARG1 (a3 / and
                        :op1 (h / hierarchy
                              :consist-of (p2 / person))
                        :op2 (n3 / nobility
                              :poss p2)))))



",DiGraph with 29 nodes and 28 edges,color,door,:mod,color,door,:mod,c3_15,c3_15,d2_16,d2_16,inanimate
839,0,241,"(c / contrast-01
      :ARG2 (c2 / carry-on-02
            :ARG1 (s / system
                  :consist-of (v / value))
            :time (a / always)
            :ARG1-of (r / regardless-91
                  :ARG2 (t / thing
                        :quant-of (c4 / change-01
                              :ARG1 (d / dynasty))))))



",[],"(c / contrast-01
      :ARG2 (c2 / carry-on-02
            :ARG1 (s / system
                  :consist-of (v / value))
            :time (a / always)
            :ARG1-of (r / regardless-91
                  :ARG2 (t / thing
                        :quant-of (c4 / change-01
                              :ARG1 (d / dynasty))))))



",DiGraph with 9 nodes and 8 edges,system,value,:consist-of,system,value,:consist-of,s_2,s_2,v_3,v_3,inanimate
840,0,242,"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",[],"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",DiGraph with 17 nodes and 16 edges,disaster,cause-01,:ARG1-of,disaster,cause-01,cause-01,d2_11,c2_12,c2_12,d2_11,inanimate
841,0,242,"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",[],"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",DiGraph with 17 nodes and 16 edges,weight,possible-01,:consist-of,weight,possible-01,:consist-of,w_5,w_5,p2_8,p2_8,inanimate
842,0,242,"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",[],"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",DiGraph with 17 nodes and 16 edges,disaster,cause-01,:ARG1-of,disaster,cause-01,cause-01,d2_11,c2_12,c2_12,d2_11,inanimate
843,0,242,"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",[],"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",DiGraph with 17 nodes and 16 edges,weight,bloody,:mod,weight,bloody,:mod,w_5,w_5,b2_6,b2_6,inanimate
844,0,242,"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",[],"(c / cause-01
      :ARG0 (d / doom-01
            :ARG1 (s / someone)
            :ARG2 (b / bear-01
                  :ARG0 s
                  :ARG1 (w / weight
                        :mod (b2 / bloody)
                        :mod (t2 / this)
                        :consist-of (p2 / possible-01 :polarity -
                              :ARG1 (a2 / avoid-01
                                    :ARG1 (d2 / disaster
                                          :ARG1-of (c2 / cause-01
                                                :ARG0 (e2 / earthquake)))
                                    :ARG1-of (e / effective-04)))))
            :time (p / promise-01
                  :ARG0 s)))



",DiGraph with 17 nodes and 16 edges,weight,this,:mod,weight,this,:mod,w_5,w_5,t2_7,t2_7,inanimate
845,0,243,"(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



",DiGraph with 31 nodes and 30 edges,bang-01,cause-01,:ARG0-of,bang-01,cause-01,cause-01,b_10,c2_15,c2_15,b_10,inanimate
846,0,243,"(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



",DiGraph with 31 nodes and 30 edges,window,glass,:consist-of,window,glass,:consist-of,w_2,w_2,g_3,g_3,inanimate
847,0,243,"(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



",DiGraph with 31 nodes and 30 edges,bang-01,cause-01,:ARG0-of,bang-01,cause-01,cause-01,b_10,c2_15,c2_15,b_10,inanimate
848,0,243,"(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



",DiGraph with 31 nodes and 30 edges,bang-01,huge,:mod,bang-01,huge,:mod,b_10,b_10,h_23,h_23,inanimate
849,0,243,"(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



","[{'MISC': 'Mao'}, {'MISC': 'Z'}, {'LOC': 'ed'}, {'MISC': 'ong'}, {'PER': 'Mao'}, {'LOC': 'Z'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (r / rattle-01
            :ARG1 (w / window
                  :consist-of (g / glass)
                  :part-of (d / door
                        :part-of (f / foyer)))
            :manner (p2 / possible-01 :polarity -
                  :ARG1 (c / control-01
                        :ARG1 w)))
      :op2 (b / bang-01
            :source (b2 / below)
            :ARG1-of (r2 / resemble-01
                  :ARG2 (t / tractor
                        :ARG0-of (s / start-up-04)))
            :ARG0-of (c2 / cause-01
                  :ARG1 (s2 / shake-01
                        :ARG1 (b3 / bed
                              :poss p
                              :topic (s3 / sick-05))
                        :manner (s4 / stop-01 :polarity -
                              :ARG1 b3)))
            :mod (h / huge))
      :location (l / location
            :ARG1-of (r3 / reside-01
                  :ARG0 (p / person :wiki ""Mao_Zedong"" :name (n / name :op1 ""Mao"" :op2 ""Zedong"")))))



",DiGraph with 31 nodes and 30 edges,bang-01,below,:source,bang-01,below,:source,b_10,b_10,b2_11,b2_11,inanimate
850,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,cooperate-01,cause-01,:ARG1-of,cooperate-01,cause-01,cause-01,c2_1,c4_13,c4_13,c2_1,inanimate
851,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,unit,person,:consist-of,unit,person,:consist-of,u_3,u_3,p2_4,p2_4,animate
852,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,cooperate-01,cause-01,:ARG1-of,cooperate-01,cause-01,cause-01,c2_1,c4_13,c4_13,c2_1,inanimate
853,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,gang,familiar,:mod,gang,familiar,:mod,g_9,g_9,f2_11,f2_11,inanimate
854,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,task-01,project,:mod,task-01,project,:mod,t8_19,t8_19,p3_20,p3_20,inanimate
855,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,task-01,volume,:mod,task-01,volume,:mod,t8_19,t8_19,v_21,v_21,inanimate
856,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,volume,large,:mod,volume,large,:mod,v_21,v_21,l2_22,l2_22,inanimate
857,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,have-03,still,:mod,have-concession-91,still,,h_23,h2_0,s3_49,s3_49,inanimate
858,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,employ-01,formal,:mod,employ-01,formal,:mod,e_25,e_25,f_28,f_28,inanimate
859,0,244,"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",[{'B_human': 'person'}],"(h2 / have-concession-91
      :ARG1 (c2 / cooperate-01
            :ARG0 p
            :ARG1 (u / unit
                  :consist-of (p2 / person
                        :ARG0-of (w4 / work-01)
                        :ARG0-of (m3 / migrate-01))
                  :quant (s2 / some)
                  :ARG1-of (m4 / mean-01
                        :ARG2 (g / gang
                              :ARG2-of (c3 / contract-02)
                              :mod (f2 / familiar))))
            :time (a2 / already)
            :ARG1-of (c4 / cause-01
                  :ARG0 (p4 / possible-01 :polarity -
                        :ARG1 (c5 / cope-01 :polarity -
                              :ARG0 p
                              :ARG1 (t8 / task-01
                                    :mod (p3 / project)
                                    :mod (v / volume
                                          :mod (l2 / large)))))))
      :ARG2 (h / have-03
            :ARG0 (p / person
                  :ARG1-of (e / employ-01
                        :ARG0 (e2 / enterprise
                              :mod (t / this))
                        :mod (f / formal)))
            :ARG1 (t2 / team
                  :ARG0-of (w / work-01)
                  :example (a / and
                        :op1 (t3 / team
                              :ARG0-of (l / lay-01
                                    :ARG1 (t4 / thing
                                          :ARG2-of (b / brick-01))))
                        :op2 (t5 / team
                              :ARG0-of (w2 / work-07
                                    :ARG1 (w3 / wood)))
                        :op3 (t6 / team
                              :ARG0-of (r / reinforce-01
                                    :ARG1 (s / steel)))
                        :op4 (t7 / team
                              :ARG0-of (m / maintain-01
                                    :ARG1 (m2 / machinery))))
                  :ARG1-of (c / complete-02))
            :time (e3 / early
                  :op1 (d / date-entity :decade 1990))
            :mod (s3 / still)))



",DiGraph with 50 nodes and 49 edges,enterprise,this,:mod,enterprise,this,:mod,e2_26,e2_26,t_27,t_27,inanimate
860,0,245,"(a / and
      :op2 (g / gain-02
            :ARG0 (u / unit
                  :consist-of (p / person
                        :ARG0-of (m / migrate-01)
                        :ARG0-of (w / work-01)))
            :ARG1 (o / opportunity
                  :purpose (d / develop-02
                        :ARG1 u)))
      :time (t / time
            :mod (t2 / this)))



",[{'B_human': 'person'}],"(a / and
      :op2 (g / gain-02
            :ARG0 (u / unit
                  :consist-of (p / person
                        :ARG0-of (m / migrate-01)
                        :ARG0-of (w / work-01)))
            :ARG1 (o / opportunity
                  :purpose (d / develop-02
                        :ARG1 u)))
      :time (t / time
            :mod (t2 / this)))



",DiGraph with 11 nodes and 10 edges,unit,person,:consist-of,unit,person,:consist-of,u_2,u_2,p_3,p_3,animate
861,0,245,"(a / and
      :op2 (g / gain-02
            :ARG0 (u / unit
                  :consist-of (p / person
                        :ARG0-of (m / migrate-01)
                        :ARG0-of (w / work-01)))
            :ARG1 (o / opportunity
                  :purpose (d / develop-02
                        :ARG1 u)))
      :time (t / time
            :mod (t2 / this)))



",[{'B_human': 'person'}],"(a / and
      :op2 (g / gain-02
            :ARG0 (u / unit
                  :consist-of (p / person
                        :ARG0-of (m / migrate-01)
                        :ARG0-of (w / work-01)))
            :ARG1 (o / opportunity
                  :purpose (d / develop-02
                        :ARG1 u)))
      :time (t / time
            :mod (t2 / this)))



",DiGraph with 11 nodes and 10 edges,time,this,:mod,time,this,:mod,t_9,t_9,t2_10,t2_10,inanimate
862,0,246,"(u / use-01
      :ARG0 (p2 / person
            :ARG1-of (s2 / sacrifice-01))
      :ARG1 (l2 / life
            :poss p2)
      :ARG2 (p / pave-02
            :ARG0 p2
            :ARG1 (r / road)
            :ARG2 (s / succeed-01
                  :ARG0 (g2 / group
                        :mod (a / another)
                        :consist-of (p3 / person))))
      :manner (c / choose-01 :polarity -
            :ARG0 p2))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(u / use-01
      :ARG0 (p2 / person
            :ARG1-of (s2 / sacrifice-01))
      :ARG1 (l2 / life
            :poss p2)
      :ARG2 (p / pave-02
            :ARG0 p2
            :ARG1 (r / road)
            :ARG2 (s / succeed-01
                  :ARG0 (g2 / group
                        :mod (a / another)
                        :consist-of (p3 / person))))
      :manner (c / choose-01 :polarity -
            :ARG0 p2))



",DiGraph with 15 nodes and 14 edges,group,person,:consist-of,group,person,,g2_9,g2_9,p3_11,p2_1,animate
863,0,246,"(u / use-01
      :ARG0 (p2 / person
            :ARG1-of (s2 / sacrifice-01))
      :ARG1 (l2 / life
            :poss p2)
      :ARG2 (p / pave-02
            :ARG0 p2
            :ARG1 (r / road)
            :ARG2 (s / succeed-01
                  :ARG0 (g2 / group
                        :mod (a / another)
                        :consist-of (p3 / person))))
      :manner (c / choose-01 :polarity -
            :ARG0 p2))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(u / use-01
      :ARG0 (p2 / person
            :ARG1-of (s2 / sacrifice-01))
      :ARG1 (l2 / life
            :poss p2)
      :ARG2 (p / pave-02
            :ARG0 p2
            :ARG1 (r / road)
            :ARG2 (s / succeed-01
                  :ARG0 (g2 / group
                        :mod (a / another)
                        :consist-of (p3 / person))))
      :manner (c / choose-01 :polarity -
            :ARG0 p2))



",DiGraph with 15 nodes and 14 edges,group,another,:mod,group,another,:mod,g2_9,g2_9,a_10,a_10,inanimate
864,0,247,"(a / and
      :op1 (g / go-02
            :ARG0 (p / person :wiki ""Li_Jianguo"" :name (n2 / name :op1 ""Jianguo""))
            :ARG4 (s / square)
            :purpose (l / listen-01
                  :ARG0 p
                  :ARG1 (a2 / and
                        :op1 (s2 / speech)
                        :op2 (s4 / sing-01))))
      :op2 (w / watch-01
            :ARG0 p
            :ARG1 (r / rebel-01
                  :ARG0 (g2 / generation
                        :ARG1-of (n / new-01)
                        :consist-of (p2 / person
                              :ARG0-of (s7 / study-01)))))
      :op3 (a3 / and
            :op1 (s6 / shake-up-03
                  :ARG1 p)
            :op2 (m / move-05
                  :ARG1 p)))



","[{'MISC': 'Li'}, {'MISC': 'Jianguo'}, {'LOC': 'Jianguo'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(a / and
      :op1 (g / go-02
            :ARG0 (p / person :wiki ""Li_Jianguo"" :name (n2 / name :op1 ""Jianguo""))
            :ARG4 (s / square)
            :purpose (l / listen-01
                  :ARG0 p
                  :ARG1 (a2 / and
                        :op1 (s2 / speech)
                        :op2 (s4 / sing-01))))
      :op2 (w / watch-01
            :ARG0 p
            :ARG1 (r / rebel-01
                  :ARG0 (g2 / generation
                        :ARG1-of (n / new-01)
                        :consist-of (p2 / person
                              :ARG0-of (s7 / study-01)))))
      :op3 (a3 / and
            :op1 (s6 / shake-up-03
                  :ARG1 p)
            :op2 (m / move-05
                  :ARG1 p)))



",DiGraph with 24 nodes and 23 edges,generation,person,:consist-of,generation,person,,g2_15,g2_15,p2_17,p_2,animate
865,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,bed,rose,:consist-of,bed,rose,:consist-of,b_0,b_0,r_2,r_2,inanimate
866,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,location,any,:mod,location,any,:mod,l4_5,l4_5,a2_6,a2_6,inanimate
867,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,land,foreign,:mod,land,foreign,:mod,l2_7,l2_7,f_8,f_8,inanimate
868,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,land,more,:mod,land,more,:mod,l2_7,l2_7,m_17,m_17,inanimate
869,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,barrier,language,:mod,barrier,language,:mod,b2_10,b2_10,l3_11,l3_11,inanimate
870,0,248,"(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



","[{'B_human': 'friend'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(b / bed :polarity -
      :consist-of (r / rose)
      :domain (l / life)
      :time (e / ever)
      :location (l4 / location
            :mod (a2 / any))
      :location (l2 / land
            :mod (f / foreign)
            :location-of (a4 / and
                  :op1 (b2 / barrier
                        :mod (l3 / language))
                  :op2 (c / custom
                        :ARG1-of (d / differ-02))
                  :op3 (o / or :polarity -
                        :op1 (f2 / family)
                        :op2 (f3 / friend)))
            :mod (m / more
                  :mod (e2 / even))))



",DiGraph with 19 nodes and 18 edges,more,even,:mod,more,even,:mod,m_17,m_17,e2_18,e2_18,inanimate
871,0,249,"(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



",DiGraph with 19 nodes and 18 edges,group,and,:consist-of,group,and,:consist-of,g_4,g_4,a_6,a_6,inanimate
872,0,249,"(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



",DiGraph with 19 nodes and 18 edges,person,this,:mod,person,this,:mod,p_1,p_1,t_3,t_3,inanimate
873,0,249,"(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



",DiGraph with 19 nodes and 18 edges,background,educate-01,:mod,background,educate-01,:mod,b_8,b_8,e_9,e_9,inanimate
874,0,249,"(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



",DiGraph with 19 nodes and 18 edges,class,rich,:mod,class,rich,:mod,c_12,c_12,r2_13,r2_13,inanimate
875,0,249,"(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / identify-01
      :ARG0 (p / person
            :ARG0-of (r / represent-01)
            :mod (t / this))
      :ARG1 (g / group :quant 3
            :consist-of (a / and
                  :op1 (p2 / person
                        :poss-of (b / background
                              :mod (e / educate-01)
                              :ARG1-of (s / strong-02))
                        :li 1)
                  :op2 (c / class
                        :mod (r2 / rich)
                        :li 2)
                  :op3 (p3 / person
                        :ARG0-of (s3 / serve-02)
                        :li 3
                        :mod (c2 / civil)))))



",DiGraph with 19 nodes and 18 edges,person,civil,:mod,person,civil,,p3_15,p_1,c2_18,c2_18,inanimate
876,0,250,"(t / think-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (e / exist-01
                  :ARG1 (c / conflict-01
                        :mod (t2 / this))
                  :ARG1-of (r / real-04))
            :op2 (p / possible-01
                  :ARG1 (t3 / take-01
                        :ARG0 (d / department
                              :part-of (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1-of (r2 / relevant-01))
                        :ARG1 (i2 / initiative
                              :consist-of (e2 / establish-01
                                    :ARG0 d
                                    :ARG1 (p2 / platform
                                          :purpose (t4 / transfer-01
                                                :ARG1 (r3 / right-05
                                                      :ARG2 (m / marry-01))))))))))



",[{'PER': 'i'}],"(t / think-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (e / exist-01
                  :ARG1 (c / conflict-01
                        :mod (t2 / this))
                  :ARG1-of (r / real-04))
            :op2 (p / possible-01
                  :ARG1 (t3 / take-01
                        :ARG0 (d / department
                              :part-of (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1-of (r2 / relevant-01))
                        :ARG1 (i2 / initiative
                              :consist-of (e2 / establish-01
                                    :ARG0 d
                                    :ARG1 (p2 / platform
                                          :purpose (t4 / transfer-01
                                                :ARG1 (r3 / right-05
                                                      :ARG2 (m / marry-01))))))))))



",DiGraph with 20 nodes and 19 edges,initiative,establish-01,:consist-of,initiative,establish-01,:consist-of,i2_13,i2_13,e2_14,e2_14,inanimate
877,0,250,"(t / think-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (e / exist-01
                  :ARG1 (c / conflict-01
                        :mod (t2 / this))
                  :ARG1-of (r / real-04))
            :op2 (p / possible-01
                  :ARG1 (t3 / take-01
                        :ARG0 (d / department
                              :part-of (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1-of (r2 / relevant-01))
                        :ARG1 (i2 / initiative
                              :consist-of (e2 / establish-01
                                    :ARG0 d
                                    :ARG1 (p2 / platform
                                          :purpose (t4 / transfer-01
                                                :ARG1 (r3 / right-05
                                                      :ARG2 (m / marry-01))))))))))



",[{'PER': 'i'}],"(t / think-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (e / exist-01
                  :ARG1 (c / conflict-01
                        :mod (t2 / this))
                  :ARG1-of (r / real-04))
            :op2 (p / possible-01
                  :ARG1 (t3 / take-01
                        :ARG0 (d / department
                              :part-of (g / government-organization
                                    :ARG0-of (g2 / govern-01))
                              :ARG1-of (r2 / relevant-01))
                        :ARG1 (i2 / initiative
                              :consist-of (e2 / establish-01
                                    :ARG0 d
                                    :ARG1 (p2 / platform
                                          :purpose (t4 / transfer-01
                                                :ARG1 (r3 / right-05
                                                      :ARG2 (m / marry-01))))))))))



",DiGraph with 20 nodes and 19 edges,conflict-01,this,:mod,conflict-01,this,:mod,c_4,c_4,t2_5,t2_5,inanimate
878,0,251,"(p / propose-01
      :ARG0 (p2 / person :wiki -
            :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress""
                        :name (n4 / name :op1 ""NPC""))))
      :ARG1 (r2 / recommend-01
            :ARG0 p2
            :ARG1 (b / ban-01
                  :ARG1 (c / consume-01
                        :ARG1 (p3 / product
                              :consist-of (t / tobacco))
                        :ARG2-of (e / expend-01
                              :ARG0 (p4 / public)))
                  :manner (u / universal))))



","[{'MISC': 'Wen'}, {'ORG': ""National_People's_Congress""}, {'ORG': 'N'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(p / propose-01
      :ARG0 (p2 / person :wiki -
            :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress""
                        :name (n4 / name :op1 ""NPC""))))
      :ARG1 (r2 / recommend-01
            :ARG0 p2
            :ARG1 (b / ban-01
                  :ARG1 (c / consume-01
                        :ARG1 (p3 / product
                              :consist-of (t / tobacco))
                        :ARG2-of (e / expend-01
                              :ARG0 (p4 / public)))
                  :manner (u / universal))))



",DiGraph with 20 nodes and 19 edges,product,tobacco,:consist-of,product,tobacco,:consist-of,p3_15,p3_15,t_16,t_16,inanimate
879,0,252,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,group,person,:consist-of,group,person,:consist-of,g_3,g_3,p2_4,p2_4,animate
880,0,252,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,person,person,:consist-of,person,person,,p2_4,p2_4,p_8,p2_4,animate
881,0,252,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,person,huge,:mod,person,huge,:mod,p2_4,p2_4,h_7,h_7,inanimate
882,0,252,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,smoke-02,civil,:mod,smoke-02,civil,:mod,s_5,s_5,c3_9,c3_9,inanimate
883,0,253,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,group,person,:consist-of,group,person,:consist-of,g_3,g_3,p2_4,p2_4,animate
884,0,253,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,person,person,:consist-of,person,person,,p2_4,p2_4,p_8,p2_4,animate
885,0,253,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,person,huge,:mod,person,huge,:mod,p2_4,p2_4,h_7,h_7,inanimate
886,0,253,"(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(c / contrast-01
  :ARG2 (i / include-91
          :ARG1 (e / exist-01
                  :ARG1 (g / group
                          :consist-of (p2 / person
                                        :ARG0-of (s / smoke-02)))
                  :location (c2 / contingent
                              :mod (h / huge)
                              :consist-of (p / person
                                            :mod (c3 / civil)
                                            :ARG0-of (s2 / serve-01))
                              :poss (w / we)))
          :ARG2 (r / reason
                  :ARG1-of (d / dispute-01
                             :polarity -
                             :ARG1-of (p3 / possible-01)))))



",DiGraph with 16 nodes and 15 edges,smoke-02,civil,:mod,smoke-02,civil,:mod,s_5,s_5,c3_9,c3_9,inanimate
887,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,obligate-01,cause-01,:ARG1-of,obligate-01,cause-01,cause-01,o_9,c3_11,c3_11,o_9,inanimate
888,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,legion,person,:consist-of,legion,person,,l_22,l_22,p2_23,p_1,animate
889,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,obligate-01,cause-01,:ARG1-of,obligate-01,cause-01,cause-01,o_9,c3_11,c3_11,o_9,inanimate
890,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,fund,public,:mod,fund,public,:mod,f2_18,f2_18,p3_19,p3_19,inanimate
891,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,number,considerable,:mod,number,considerable,:mod,n_20,n_20,c2_21,c2_21,inanimate
892,0,254,"(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / include-91
      :ARG1 (p / person
            :ARG0-of (s / smoke-02
                  :ARG1 (c / cigarette
                        :ARG1-of (f / free-03)
                        :ARG1-of (b / buy-01
                              :ARG0 p
                              :manner (m / money
                                    :poss p)
                              :ARG2-of (o / obligate-01 :polarity -
                                    :ARG1-of (c3 / cause-01
                                          :ARG0 (o2 / or
                                                :op1 (g / gift-01
                                                      :ARG1 c
                                                      :ARG2 p)
                                                :op2 (b2 / buy-01
                                                      :ARG1 c
                                                      :manner (f2 / fund
                                                            :mod (p3 / public)))))))))
            :quant (n / number
                  :mod (c2 / considerable)))
      :ARG2 (l / legion
            :consist-of (p2 / person
                  :ARG0-of (s2 / smoke-02))
            :mod (t / this)))



",DiGraph with 26 nodes and 25 edges,legion,this,:mod,legion,this,:mod,l_22,l_22,t_25,t_25,inanimate
893,0,255,"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",[{'B_human': 'person'}],"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",DiGraph with 27 nodes and 26 edges,ring,smoke-01,:consist-of,ring,smoke-01,:consist-of,r_6,r_6,s_7,s_7,inanimate
894,0,255,"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",[{'B_human': 'person'}],"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",DiGraph with 27 nodes and 26 edges,effect-03,also,:mod,effect-03,also,:mod,e_1,e_1,a2_19,a2_19,inanimate
895,0,255,"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",[{'B_human': 'person'}],"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",DiGraph with 27 nodes and 26 edges,perform-01,track,:mod,perform-01,track,:mod,p_2,p_2,t2_8,t2_8,inanimate
896,0,255,"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",[{'B_human': 'person'}],"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",DiGraph with 27 nodes and 26 edges,person,civil,:mod,person,civil,:mod,p3_13,p3_13,c3_14,c3_14,inanimate
897,0,255,"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",[{'B_human': 'person'}],"(a / and
      :op1 (e / effect-03
            :ARG0 (p / perform-01
                  :ARG0 (t / they)
                  :ARG1 (b / blow-01
                        :ARG0 t
                        :ARG1 (r / ring
                              :consist-of (s / smoke-01)))
                  :mod (t2 / track))
            :ARG1 (s2 / set-02
                  :ARG1 (r3 / record
                        :ARG1-of (n / new-01))
                  :ARG2 (e2 / expend-01
                        :ARG0 (p3 / person
                              :mod (c3 / civil)
                              :ARG0-of (s3 / serve-01))
                        :ARG2 (c2 / consume-01))
                  :ARG1-of (r2 / repeat-01))
            :ARG0-of (c / compound-01)
            :mod (a2 / also))
      :op2 (b2 / become-01
            :ARG1 e
            :ARG2 (p2 / portion
                  :part-of (c4 / corrupt-01
                        :ARG1 (o2 / officialdom)
                        :prep-as (w / whole))
                  :mod (o / organic))))



",DiGraph with 27 nodes and 26 edges,portion,organic,:mod,portion,organic,:mod,p2_22,p2_22,o_26,o_26,inanimate
898,0,256,"(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



","[{'MISC': 'Wen'}, {'ORG': ""National_People's_Congress""}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



",DiGraph with 28 nodes and 27 edges,product,tobacco,:consist-of,product,tobacco,:consist-of,p4_22,p4_22,t_23,t_23,inanimate
899,0,256,"(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



","[{'MISC': 'Wen'}, {'ORG': ""National_People's_Congress""}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



",DiGraph with 28 nodes and 27 edges,backdrop,social,:mod,backdrop,social,:mod,b_1,b_1,s_2,s_2,inanimate
900,0,256,"(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



","[{'MISC': 'Wen'}, {'ORG': ""National_People's_Congress""}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(p / prompt-02
      :ARG0 (b / backdrop
            :mod (s / social)
            :ARG0-of (h / horrify-01)
            :manner (p2 / precise)
            :mod (t2 / this))
      :ARG1 (p6 / person :wiki - :name (n / name :op1 ""Ma"" :op2 ""Wenfang"")
            :ARG0-of (r2 / represent-01
                  :ARG1 (g / government-organization :wiki ""National_People's_Congress"" :name (n2 / name :op1 ""NPC""))))
      :ARG2 (s2 / set-forth-00
            :ARG0 p6
            :ARG1 (p3 / propose-01
                  :ARG0 p6
                  :ARG1 (b2 / ban-01
                        :ARG1 (c / consume-01
                              :ARG1 (p4 / product
                                    :consist-of (t / tobacco)
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p5 / public))))
                        :manner (u / universal)))
            :manner (s3 / solemn)))



",DiGraph with 28 nodes and 27 edges,backdrop,this,:mod,backdrop,this,:mod,b_1,b_1,t2_5,t2_5,inanimate
901,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,mountain,document,:consist-of,mountain,document,:consist-of,m_1,m_1,d_2,d_2,inanimate
902,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,extend-01,obligate-01,:condition,extend-01,obligate-01,:condition,e_0,e_0,o_5,o_5,inanimate
903,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,authority,supreme,:mod,authority,supreme,:mod,a_6,a_6,s2_7,s2_7,inanimate
904,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,item,every,:mod,item,every,:mod,i_15,i_15,e2_19,e2_19,inanimate
905,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,extravagance,such,:mod,extravagance,such,:mod,e4_23,e4_23,s4_24,s4_24,inanimate
906,0,257,"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",[{'PER': 'i'}],"(e / extend-01
      :ARG1 (m / mountain
            :consist-of (d / document))
      :ARG4 (s / sky)
      :ARG1-of (r / real-04)
      :condition (o / obligate-01
            :ARG1 (a / authority
                  :mod (s2 / supreme))
            :ARG2 (d2 / draw-up-03
                  :ARG0 a
                  :ARG1 (d3 / document
                        :ARG0-of (r2 / regulate-01)
                        :ARG1-of (s5 / separate-02))
                  :purpose (a2 / address-02
                        :ARG0 a
                        :ARG1 (i / item
                              :ARG1-of (c2 / consume-01
                                    :ARG2-of (e3 / expend-01
                                          :ARG0 (p / public)))
                              :mod (e2 / every)
                              :ARG1-of (s3 / single-02))
                        :purpose (c / check-01
                              :ARG0 a
                              :ARG1 (e4 / extravagance
                                    :mod (s4 / such))))
                  :purpose (c3 / circulate-01
                        :ARG1 d3
                        :mod (n / nationwide)))))



",DiGraph with 28 nodes and 27 edges,circulate-01,nationwide,:mod,circulate-01,nationwide,:mod,c3_25,c3_25,n_27,n_27,inanimate
907,0,258,"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",[{'PER': 'i'}],"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",DiGraph with 19 nodes and 18 edges,product,tobacco,:consist-of,product,tobacco,:consist-of,p_3,p_3,t_4,t_4,inanimate
908,0,258,"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",[{'PER': 'i'}],"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",DiGraph with 19 nodes and 18 edges,need-01,all,:mod,need-01,all,:mod,n2_1,n2_1,a_15,a_15,inanimate
909,0,258,"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",[{'PER': 'i'}],"(a2 / and
      :op1 (n2 / need-01
            :ARG1 (i / include-01
                  :ARG1 (p / product
                        :consist-of (t / tobacco))
                  :ARG2 (c / clause
                        :ARG1-of (r / relevant-01)
                        :part-of (r2 / regulate-01
                              :ARG0-of (o / oppose-01
                                    :ARG1 (c4 / corruption)))
                        :topic (p2 / prohibit-01
                              :ARG1 (c2 / consume-01
                                    :ARG1-of (f / fund-01
                                          :ARG0 (p3 / public)))))
                  :ARG1-of (c3 / clear-06))
            :mod (a / all)
            :mod (i2 / in-fact))
      :op2 (s / suffice-01
            :ARG0 i))



",DiGraph with 19 nodes and 18 edges,need-01,in-fact,:mod,need-01,in-fact,:mod,n2_1,n2_1,i2_16,i2_16,inanimate
910,0,259,"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",[{'B_human': 'person'}],"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",DiGraph with 18 nodes and 17 edges,array,and,:consist-of,array,and,,a_4,a_4,a2_5,a5_0,inanimate
911,0,259,"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",[{'B_human': 'person'}],"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",DiGraph with 18 nodes and 17 edges,wallow-01,also,:mod,wallow-01,also,:mod,w_1,w_1,a4_10,a4_10,inanimate
912,0,259,"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",[{'B_human': 'person'}],"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",DiGraph with 18 nodes and 17 edges,glass,wine,:mod,glass,wine,:mod,g_6,g_6,w2_7,w2_7,inanimate
913,0,259,"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",[{'B_human': 'person'}],"(a5 / and
      :op1 (w / wallow-01
            :ARG0 (p / person
                  :quant (m / many))
            :ARG1 (a / array
                  :consist-of (a2 / and
                        :op1 (g / glass
                              :mod (w2 / wine))
                        :op2 (c / chip
                              :mod (p2 / poker))))
            :mod (a4 / also))
      :op2 (b / become-01
            :ARG1 p
            :ARG2 (a3 / and
                  :op1 (v / vessel
                        :location-of (w3 / wine))
                  :op2 (b2 / bag
                        :location-of (f / food)))))



",DiGraph with 18 nodes and 17 edges,chip,poker,:mod,chip,poker,:mod,c_8,c_8,p2_9,p2_9,inanimate
914,0,260,"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",DiGraph with 18 nodes and 17 edges,scene,open-01,:consist-of,scene,open-01,:consist-of,s_6,s_6,o_8,o_8,inanimate
915,0,260,"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",DiGraph with 18 nodes and 17 edges,operate-01,veritable,:mod,operate-01,veritable,:mod,o2_1,o2_1,v_5,v_5,inanimate
916,0,260,"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",DiGraph with 18 nodes and 17 edges,firepower,all,:mod,firepower,all,:mod,f_3,f_3,a3_4,a3_4,inanimate
917,0,260,"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",DiGraph with 18 nodes and 17 edges,scene,spectacle,:mod,scene,spectacle,:mod,s_6,s_6,s2_7,s2_7,inanimate
918,0,260,"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt2 (o2 / operate-01
            :ARG0 (i / it)
            :ARG1 (f / firepower
                  :mod (a3 / all))
            :mod (v / veritable))
      :snt1 (s / scene
            :mod (s2 / spectacle)
            :consist-of (o / open-01
                  :ARG1 (l / line :quant 4)
                  :time (t / time
                        :ARG1-of (s3 / same-01)))
            :time (a2 / approach-01
                  :ARG1 (d / date-entity :year 2012)
                  :ARG1-of (q / quick-02))
            :mod (e / even)))



",DiGraph with 18 nodes and 17 edges,scene,even,:mod,scene,even,:mod,s_6,s_6,e_17,e_17,inanimate
919,0,261,"(m / multi-sentence
      :snt1 (p5 / person :wiki -
            :name (n / name :op1 ""Manhunt""))
      :snt2 (p / post-01 :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / picture
                  :topic (b / bunch
                        :consist-of (p3 / person
                              :ARG0-of (p4 / perpetrate-01))))))



","[{'MISC': 'Man'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (p5 / person :wiki -
            :name (n / name :op1 ""Manhunt""))
      :snt2 (p / post-01 :mode imperative
            :ARG0 (y / you)
            :ARG1 (p2 / picture
                  :topic (b / bunch
                        :consist-of (p3 / person
                              :ARG0-of (p4 / perpetrate-01))))))



",DiGraph with 12 nodes and 11 edges,bunch,person,:consist-of,bunch,person,,b_9,b_9,p3_10,p5_1,animate
920,0,262,"(s / squat-01
      :ARG1 (p / person :wiki - :name (n / name :op1 ""Ji"")
            :ARG1-of (i / include-91
                  :ARG2 (m / man)))
      :ARG2 (s2 / step
            :consist-of (s3 / stone)
            :part-of (f / facility
                  :location-of (s4 / stop-01
                        :ARG1 (b / bus)))))



","[{'PER': 'i'}, {'W_Animate': 'person'}]","(s / squat-01
      :ARG1 (p / person :wiki - :name (n / name :op1 ""Ji"")
            :ARG1-of (i / include-91
                  :ARG2 (m / man)))
      :ARG2 (s2 / step
            :consist-of (s3 / stone)
            :part-of (f / facility
                  :location-of (s4 / stop-01
                        :ARG1 (b / bus)))))



",DiGraph with 12 nodes and 11 edges,step,stone,:consist-of,step,stone,:consist-of,s2_7,s2_7,s3_8,s3_8,inanimate
921,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,community,netizen,:consist-of,community,netizen,:consist-of,c2_6,c2_6,n_8,n_8,inanimate
922,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,possible-01,possible-01,:condition,possible-01,possible-01,,p_0,p_0,p2_13,p_0,inanimate
923,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,community,vast,:mod,community,vast,:mod,c2_6,c2_6,v_7,v_7,inanimate
924,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,give-01,even,:mod,give-01,even,:mod,g2_15,g2_15,e2_24,e2_24,inanimate
925,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,we,person,:mod,we,person,,w_21,w_21,p4_22,p3_2,inanimate
926,0,263,"(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'event'}]","(p / possible-01
      :ARG1 (e / explain-01
            :ARG0 (p3 / person
                  :ARG0-of (d / develop-02))
            :ARG2 (a / and
                  :op1 (s / society)
                  :op2 (c2 / community
                        :mod (v / vast)
                        :consist-of (n / netizen))
                  :op3 (m / mass))
            :ARG1-of (r / reasonable-02)
            :ARG1-of (f / fair-01))
      :manner (a2 / amr-unknown)
      :condition (p2 / possible-01 :polarity -
            :ARG1 (g2 / give-01
                  :ARG0 p3
                  :ARG1 (a4 / at-least
                        :op1 (t / temporal-quantity :quant 3
                              :unit (h / hour)))
                  :ARG2 (w / we
                        :mod (p4 / person
                              :ARG0-of (o / own-01)))
                  :mod (e2 / even)
                  :time (e4 / event :wiki - :name (n2 / name :op1 ""The"" :op2 ""Day"" :op3 ""of"" :op4 ""the"" :op5 ""Great"" :op6 ""Cold""))
                  :ARG1-of (a3 / accord-02
                        :ARG2 (t2 / thing
                              :ARG1-of (r2 / require-01
                                    :ARG2 p3
                                    :mod (n3 / nation)
                                    :ARG0-of (e3 / ensure-01
                                          :ARG1 (i / interest
                                                :poss p3
                                                :ARG1-of (g / good-02)
                                                :ARG1-of (h2 / have-degree-91
                                                      :ARG2 g
                                                      :ARG3 (m3 / most)))
                                          :ARG2 p3)))))))



",DiGraph with 47 nodes and 46 edges,require-01,nation,:mod,require-01,nation,:mod,r2_36,r2_36,n3_38,n3_38,inanimate
927,0,264,"(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



","[{'LOC': 'Far'}, {'LOC': 'East'}, {'LOC': 'Far'}, {'LOC': 'East'}, {'PER': 'i'}]","(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



",DiGraph with 21 nodes and 20 edges,abandon-01,cause-01,:ARG1-of,abandon-01,cause-01,cause-01,a2_4,c4_11,c4_11,a2_4,inanimate
928,0,264,"(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



","[{'LOC': 'Far'}, {'LOC': 'East'}, {'LOC': 'Far'}, {'LOC': 'East'}, {'PER': 'i'}]","(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



",DiGraph with 21 nodes and 20 edges,heap,ruin,:consist-of,heap,ruin,:consist-of,h_18,h_18,r2_19,r2_19,inanimate
929,0,264,"(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



","[{'LOC': 'Far'}, {'LOC': 'East'}, {'LOC': 'Far'}, {'LOC': 'East'}, {'PER': 'i'}]","(c3 / contrast-01
      :ARG2 (a / and
            :op1 (c / continue-01
                  :ARG0 i
                  :ARG1 (a2 / abandon-01
                        :ARG0 (i / it)
                        :ARG1 (w / world-region :wiki ""Far_East"" :name (n / name :op1 ""Far"" :op2 ""East""))
                        :ARG1-of (c4 / cause-01
                              :ARG0 (p / problem
                                    :ARG1-of (s / serious-02)
                                    :poss i))))
            :op2 (b / become-01
                  :ARG1 (c2 / city
                        :quant (m / many))
                  :ARG2 (h / heap
                        :consist-of (r2 / ruin)))
            :time (n2 / nowadays)))



",DiGraph with 21 nodes and 20 edges,abandon-01,cause-01,:ARG1-of,abandon-01,cause-01,cause-01,a2_4,c4_11,c4_11,a2_4,inanimate
930,0,265,"(r / remove-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (g / group
            :mod (t / this)
            :consist-of (j / jerk)))



",[],"(r / remove-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (g / group
            :mod (t / this)
            :consist-of (j / jerk)))



",DiGraph with 5 nodes and 4 edges,group,jerk,:consist-of,group,jerk,:consist-of,g_2,g_2,j_4,j_4,inanimate
931,0,265,"(r / remove-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (g / group
            :mod (t / this)
            :consist-of (j / jerk)))



",[],"(r / remove-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (g / group
            :mod (t / this)
            :consist-of (j / jerk)))



",DiGraph with 5 nodes and 4 edges,group,this,:mod,group,this,:mod,g_2,g_2,t_3,t_3,inanimate
932,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t2_4,c2_5,c2_5,t2_4,inanimate
933,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,disparage-01,worth-01,:consist-of,disparage-01,worth-01,:consist-of,d_23,d_23,w_29,w_29,inanimate
934,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t2_4,c2_5,c2_5,t2_4,inanimate
935,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,textbook,school,:mod,textbook,school,:mod,t_13,t_13,s_14,s_14,inanimate
936,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,school,elementary,:mod,school,elementary,:mod,s_14,s_14,e_15,e_15,inanimate
937,0,266,"(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'E'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(e3 / exemplify-01
      :ARG0 (a / and
            :op1 (a2 / attribute-01
                  :ARG0 (h / he)
                  :ARG1 (t2 / thing
                        :ARG0-of (c2 / cause-01
                              :ARG1 (p6 / prevail-02
                                    :ARG1 (h2 / hostile)
                                    :location (c / country :wiki ""China"" :name (n2 / name :op1 ""China"")))))
                  :ARG2 (h3 / have-03
                        :ARG0 (t / textbook
                              :mod (s / school
                                    :mod (e / elementary)))
                        :ARG1 (p2 / person :wiki - :name (n / name :op1 ""Wang"" :op2 ""Erxiao"")))
                  :medium (b2 / blog :quant 1))
            :op2 (d / disparage-01
                  :ARG0 h
                  :ARG1 (a3 / article
                        :ARG0-of (p3 / promote-01
                              :ARG1 (p4 / patriotism))
                        :ARG1-of (g / good-02))
                  :consist-of (w / worth-01 :polarity -
                        :ARG1 a3
                        :ARG2 (p5 / penny
                              :mod (e2 / even))))))



",DiGraph with 34 nodes and 33 edges,penny,even,:mod,penny,even,:mod,p5_32,p5_32,e2_33,e2_33,inanimate
938,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,detail-01,cause-01,:ARG1-of,title-01,cause-01,cause-01,d2_20,c3_38,c2_25,t2_37,animate
939,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,title-01,cause-01,:ARG2,title-01,cause-01,cause-01,t2_37,c3_38,c3_38,t2_37,animate
940,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,list,product,:consist-of,list,product,:consist-of,l2_22,l2_22,p6_23,p6_23,inanimate
941,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,detail-01,cause-01,:ARG1-of,title-01,cause-01,cause-01,d2_20,c3_38,c2_25,t2_37,animate
942,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,title-01,cause-01,:ARG2,title-01,cause-01,cause-01,t2_37,c3_38,c3_38,t2_37,animate
943,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,cry-01,again,:mod,cry-01,again,:mod,c_1,c_1,a2_17,a2_17,inanimate
944,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,business,erotic,:mod,business,erotic,:mod,b_15,b_15,e_16,e_16,inanimate
945,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,again,once,:mod,again,once,:mod,a2_17,a2_17,o_18,o_18,inanimate
946,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,product,erotic,:mod,product,erotic,,p6_23,p6_23,e2_24,e_16,inanimate
947,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,person,other,:mod,person,other,,p4_28,p_3,o2_29,o2_29,inanimate
948,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,masterpiece,especially,:mod,masterpiece,especially,:mod,m2_34,m2_34,e3_36,e3_36,inanimate
949,0,267,"(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



","[{'ORG': 'Government_of_China'}, {'LOC': 'Beijing'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (c / cry-01
            :ARG0 (s / she)
            :ARG1 (p / person
                  :quant (s3 / several)
                  :ARG2-of (d / deal-01
                        :ARG0 (g2 / government-organization :wiki ""Government_of_China""
                              :name (n / name :op1 ""Beijing"" :op2 ""City"")))
                  :ARG2-of (s2 / suspect-01
                        :ARG1 (i / involve-01
                              :ARG1 p
                              :ARG2 (a3 / activity-06
                                    :ARG1 (b / business
                                          :mod (e / erotic))))))
            :mod (a2 / again
                  :mod (o / once))
            :manner (f / foul))
      :op2 (d2 / detail-01
            :ARG0 s
            :ARG1 (l2 / list
                  :consist-of (p6 / product
                        :mod (e2 / erotic)))
            :ARG1-of (c2 / cause-01
                  :ARG0-of (i2 / intend-01
                        :ARG1 (p3 / publicize-01
                              :beneficiary (p4 / person
                                    :mod (o2 / other)))
                        :ARG1-of (h / have-degree-91
                              :ARG2 (d3 / deep-02
                                    :ARG1 i2)
                              :ARG3 (m / more)))))
      :medium (m2 / masterpiece
            :time (t / today)
            :mod (e3 / especially)
            :ARG1-of (t2 / title-01
                  :ARG2 (c3 / cause-01
                        :ARG0 (a5 / amr-unknown)
                        :ARG1 (w / worth-02
                              :ARG2 (a4 / attend-02
                                    :ARG1 (c5 / case-03 :wiki -
                                          :ARG1 (g / good
                                                :mod (o3 / obscene))
                                          :name (n2 / name :op1 ""Jianghe""))
                                    :ARG1-of (c4 / close-10
                                          :degree (s4 / such))))))))



",DiGraph with 50 nodes and 49 edges,good,obscene,:mod,good,obscene,:mod,g_44,g_44,o3_45,o3_45,inanimate
950,0,268,"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",[],"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",DiGraph with 9 nodes and 8 edges,group,carrier,:consist-of,group,carrier,:consist-of,g_1,g_1,c2_4,c2_4,inanimate
951,0,268,"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",[],"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",DiGraph with 9 nodes and 8 edges,group,battle-01,:mod,group,battle-01,:mod,g_1,g_1,b_2,b_2,inanimate
952,0,268,"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",[],"(c / create-01
      :ARG1 (g / group
            :mod (b / battle-01)
            :quant (f / few)
            :consist-of (c2 / carrier
                  :mod (a / aircraft)
                  :ARG1-of (p / power-01
                        :ARG0 (n / nucleus))))
      :li 2)



",DiGraph with 9 nodes and 8 edges,carrier,aircraft,:mod,carrier,aircraft,:mod,c2_4,c2_4,a_5,a_5,inanimate
953,0,269,"(g / group
      :consist-of (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p2 / profession :quant 9))))



",[{'B_human': 'person'}],"(g / group
      :consist-of (p / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p2 / profession :quant 9))))



",DiGraph with 5 nodes and 4 edges,group,person,:consist-of,group,person,:consist-of,g_0,g_0,p_1,p_1,animate
954,0,270,"(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



","[{'PER': 'Ta'}, {'PER': 'l'}, {'ORG': 'National_Cancer_Institute'}, {'ORG': 'National'}, {'ORG': 'Cancer'}, {'ORG': 'Institute'}, {'ORG': 'Harvard_University'}, {'ORG': 'Harvard'}, {'ORG': 'University'}, {'ORG': 'Boston_University'}, {'ORG': 'Boston'}, {'ORG': 'University'}, {'B_human': 'doctor'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'university'}]","(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



",DiGraph with 30 nodes and 29 edges,team,person,:consist-of,team,person,:consist-of,t3_5,t3_5,p2_6,p2_6,animate
955,0,270,"(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



","[{'PER': 'Ta'}, {'PER': 'l'}, {'ORG': 'National_Cancer_Institute'}, {'ORG': 'National'}, {'ORG': 'Cancer'}, {'ORG': 'Institute'}, {'ORG': 'Harvard_University'}, {'ORG': 'Harvard'}, {'ORG': 'University'}, {'ORG': 'Boston_University'}, {'ORG': 'Boston'}, {'ORG': 'University'}, {'B_human': 'doctor'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'university'}]","(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



",DiGraph with 30 nodes and 29 edges,school,medicine,:mod,school,medicine,:mod,s_16,s_16,m_17,m_17,inanimate
956,0,270,"(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



","[{'PER': 'Ta'}, {'PER': 'l'}, {'ORG': 'National_Cancer_Institute'}, {'ORG': 'National'}, {'ORG': 'Cancer'}, {'ORG': 'Institute'}, {'ORG': 'Harvard_University'}, {'ORG': 'Harvard'}, {'ORG': 'University'}, {'ORG': 'Boston_University'}, {'ORG': 'Boston'}, {'ORG': 'University'}, {'B_human': 'doctor'}, {'B_human': 'person'}, {'W_Animate': 'university'}, {'W_Animate': 'university'}]","(l / lead-02
      :ARG0 (d / doctor :wiki - :name (n2 / name :op1 ""Talcott""))
      :ARG1 (t3 / team
            :consist-of (p2 / person
                  :ARG0-of (r / research-01)
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (a / and
                              :op1 (r2 / research-institute :wiki ""National_Cancer_Institute"" :name (n / name :op1 ""National"" :op2 ""Cancer"" :op3 ""Institute""))
                              :op2 (s / school
                                    :mod (m / medicine)
                                    :part-of (u / university :wiki ""Harvard_University"" :name (h / name :op1 ""Harvard"" :op2 ""University"")))
                              :op3 (s2 / school
                                    :mod (m2 / medicine)
                                    :part-of (u2 / university :wiki ""Boston_University"" :name (b / name :op1 ""Boston"" :op2 ""University""))))))))



",DiGraph with 30 nodes and 29 edges,school,medicine,:mod,school,medicine,:mod,s2_23,s_16,m2_24,m_17,inanimate
957,0,271,"(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



",DiGraph with 14 nodes and 13 edges,cloud,dust,:consist-of,cloud,dust,:consist-of,c3_3,c3_3,d3_4,d3_4,inanimate
958,0,271,"(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



",DiGraph with 14 nodes and 13 edges,dust,blue,:mod,dust,blue,:mod,d3_4,d3_4,b2_5,b2_5,inanimate
959,0,271,"(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(d / describe-01
      :ARG0 (p / person
            :ARG0-of (w / work-01))
      :ARG1 (c3 / cloud
            :consist-of (d3 / dust
                  :mod (b2 / blue))
            :ARG1-of (h / hang-01
                  :location (o / over
                        :op1 (t / thing
                              :part-of (f / factory)))
                  :concession (v / ventilate-01
                        :ARG0 (f2 / fan
                              :mod (e / exhaust))
                        :ARG1 (a / area)))))



",DiGraph with 14 nodes and 13 edges,fan,exhaust,:mod,fan,exhaust,:mod,f2_11,f2_11,e_12,e_12,inanimate
960,0,272,"(g / government-organization :wiki ""United_States_Congress""
      :name (n3 / name :op1 ""Congress"")
      :poss (w / we)
      :ARG2-of (i / include-91
            :ARG1 (o / or
                  :op1 (g4 / government-organization :wiki ""United_States_House_of_Representatives""
                        :name (n / name :op1 ""House""))
                  :op2 (g5 / government-organization :wiki ""United_States_Senate""
                        :name (n2 / name :op1 ""Senate""))))
      :consist-of (p / person
            :quant (b / bunch)
            :ARG0-of (r / represent-01
                  :mod (r2 / represent-01 :polarity -))))



","[{'ORG': 'United_States'}, {'ORG': 'Congress'}, {'ORG': 'Congress'}, {'ORG': 'United'}, {'LOC': 'States'}, {'ORG': 'House'}, {'ORG': 'of'}, {'ORG': 'Representatives'}, {'ORG': 'House'}, {'ORG': 'United_States'}, {'ORG': 'Senate'}, {'ORG': 'Senate'}, {'B_human': 'person'}, {'PER': 'i'}]","(g / government-organization :wiki ""United_States_Congress""
      :name (n3 / name :op1 ""Congress"")
      :poss (w / we)
      :ARG2-of (i / include-91
            :ARG1 (o / or
                  :op1 (g4 / government-organization :wiki ""United_States_House_of_Representatives""
                        :name (n / name :op1 ""House""))
                  :op2 (g5 / government-organization :wiki ""United_States_Senate""
                        :name (n2 / name :op1 ""Senate""))))
      :consist-of (p / person
            :quant (b / bunch)
            :ARG0-of (r / represent-01
                  :mod (r2 / represent-01 :polarity -))))



",DiGraph with 19 nodes and 18 edges,government-organization,person,:consist-of,government-organization,person,:consist-of,g_0,g_0,p_15,p_15,animate
961,0,272,"(g / government-organization :wiki ""United_States_Congress""
      :name (n3 / name :op1 ""Congress"")
      :poss (w / we)
      :ARG2-of (i / include-91
            :ARG1 (o / or
                  :op1 (g4 / government-organization :wiki ""United_States_House_of_Representatives""
                        :name (n / name :op1 ""House""))
                  :op2 (g5 / government-organization :wiki ""United_States_Senate""
                        :name (n2 / name :op1 ""Senate""))))
      :consist-of (p / person
            :quant (b / bunch)
            :ARG0-of (r / represent-01
                  :mod (r2 / represent-01 :polarity -))))



","[{'ORG': 'United_States'}, {'ORG': 'Congress'}, {'ORG': 'Congress'}, {'ORG': 'United'}, {'LOC': 'States'}, {'ORG': 'House'}, {'ORG': 'of'}, {'ORG': 'Representatives'}, {'ORG': 'House'}, {'ORG': 'United_States'}, {'ORG': 'Senate'}, {'ORG': 'Senate'}, {'B_human': 'person'}, {'PER': 'i'}]","(g / government-organization :wiki ""United_States_Congress""
      :name (n3 / name :op1 ""Congress"")
      :poss (w / we)
      :ARG2-of (i / include-91
            :ARG1 (o / or
                  :op1 (g4 / government-organization :wiki ""United_States_House_of_Representatives""
                        :name (n / name :op1 ""House""))
                  :op2 (g5 / government-organization :wiki ""United_States_Senate""
                        :name (n2 / name :op1 ""Senate""))))
      :consist-of (p / person
            :quant (b / bunch)
            :ARG0-of (r / represent-01
                  :mod (r2 / represent-01 :polarity -))))



",DiGraph with 19 nodes and 18 edges,represent-01,represent-01 :polarity -,:mod,represent-01,represent-01,,r_17,r_17,r2_18,r_17,inanimate
962,0,273,"(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



","[{'ORG': 'Green'}, {'ORG': 'Party'}, {'ORG': 'of'}, {'ORG': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'ORG': 'Green'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}]","(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



",DiGraph with 16 nodes and 15 edges,political-party,person,:consist-of,political-party,person,:consist-of,p_0,p_0,p2_4,p2_4,animate
963,0,273,"(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



","[{'ORG': 'Green'}, {'ORG': 'Party'}, {'ORG': 'of'}, {'ORG': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'ORG': 'Green'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}]","(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



",DiGraph with 16 nodes and 15 edges,have-degree-91,even,:mod,have-degree-91,even,:mod,h_8,h_8,e_15,e_15,inanimate
964,0,273,"(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



","[{'ORG': 'Green'}, {'ORG': 'Party'}, {'ORG': 'of'}, {'ORG': 'the'}, {'LOC': 'United'}, {'LOC': 'States'}, {'ORG': 'Green'}, {'ORG': 'Party'}, {'B_human': 'person'}, {'B_human': 'person'}]","(p / political-party :wiki ""Green_Party_of_the_United_States"" :name (n / name :op1 ""Green"" :op2 ""Party"")
      :consist-of (p2 / person
            :ARG1-of (l / liberal-02)
            :ARG1-of (r / retard-01)
            :ARG1-of (c / crazy-03
                  :ARG2-of (h / have-degree-91
                        :ARG1 p2
                        :ARG3 (t / too)
                        :ARG6 (p3 / person
                              :ARG1-of (l2 / liberal-02)
                              :ARG1-of (r2 / retard-01)
                              :mod (o / other))
                        :mod (e / even)))))



",DiGraph with 16 nodes and 15 edges,person,other,:mod,person,other,,p3_11,p2_4,o_14,o_14,inanimate
965,0,274,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,shift-01,cause-01,:ARG1-of,shift-01,cause-01,cause-01,s_3,c2_7,c2_7,s_3,inanimate
966,0,274,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,cap,ice,:consist-of,cap,ice,:consist-of,c_5,c_5,i_6,i_6,inanimate
967,0,274,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,shift-01,cause-01,:ARG1-of,shift-01,cause-01,cause-01,s_3,c2_7,c2_7,s_3,inanimate
968,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG1,instead-of-91,cause-01,cause-01,i4_3,c2_15,c3_4,i4_3,inanimate
969,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG2,instead-of-91,cause-01,cause-01,i4_3,c2_15,c2_15,i4_3,inanimate
970,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,system,and,:consist-of,system,and,:consist-of,s2_6,s2_6,a_7,a_7,inanimate
971,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG1,instead-of-91,cause-01,cause-01,i4_3,c2_15,c3_4,i4_3,inanimate
972,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG2,instead-of-91,cause-01,cause-01,i4_3,c2_15,c2_15,i4_3,inanimate
973,0,275,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,video,this,:mod,video,this,:mod,v_1,v_1,t_2,t_2,inanimate
974,0,276,"(g2 / good-02
      :ARG1 (s / shrink-01
            :ARG1 (c / cap
                  :consist-of (i / ice)
                  :location (p / pole)))
      :ARG1-of (r / request-confirmation-91))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(g2 / good-02
      :ARG1 (s / shrink-01
            :ARG1 (c / cap
                  :consist-of (i / ice)
                  :location (p / pole)))
      :ARG1-of (r / request-confirmation-91))



",DiGraph with 6 nodes and 5 edges,cap,ice,:consist-of,cap,ice,:consist-of,c_2,c_2,i_3,i_3,inanimate
975,0,277,"(a / affect-01
      :ARG0 (a2 / and
            :op1 (l / law)
            :op2 (b / barrier))
      :ARG1 (g / group
            :consist-of (p / person)))



",[{'B_human': 'person'}],"(a / affect-01
      :ARG0 (a2 / and
            :op1 (l / law)
            :op2 (b / barrier))
      :ARG1 (g / group
            :consist-of (p / person)))



",DiGraph with 6 nodes and 5 edges,group,person,:consist-of,group,person,:consist-of,g_4,g_4,p_5,p_5,animate
976,0,278,"(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



","[{'PER': 'Victor'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'ORG': 'United_States'}, {'ORG': 'Army'}, {'ORG': 'Army'}, {'LOC': 'Baghdad'}, {'LOC': 'International_Airport'}, {'LOC': 'Baghdad'}, {'LOC': 'International'}, {'LOC': 'Airport'}, {'B_human': 'person'}, {'B_human': 'wing'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'military'}, {'W_Inanimate': 'airport'}]","(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



",DiGraph with 46 nodes and 45 edges,site,carrier,:consist-of,site,carrier,:consist-of,s_10,s_10,c3_12,c3_12,inanimate
977,0,278,"(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



","[{'PER': 'Victor'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'ORG': 'United_States'}, {'ORG': 'Army'}, {'ORG': 'Army'}, {'LOC': 'Baghdad'}, {'LOC': 'International_Airport'}, {'LOC': 'Baghdad'}, {'LOC': 'International'}, {'LOC': 'Airport'}, {'B_human': 'person'}, {'B_human': 'wing'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'military'}, {'W_Inanimate': 'airport'}]","(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



",DiGraph with 46 nodes and 45 edges,site,country,:mod,site,country,:mod,s_10,s_10,c2_24,c2_24,inanimate
978,0,278,"(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



","[{'PER': 'Victor'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'ORG': 'United_States'}, {'ORG': 'Army'}, {'ORG': 'Army'}, {'LOC': 'Baghdad'}, {'LOC': 'International_Airport'}, {'LOC': 'Baghdad'}, {'LOC': 'International'}, {'LOC': 'Airport'}, {'B_human': 'person'}, {'B_human': 'wing'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'military'}, {'W_Inanimate': 'airport'}]","(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



",DiGraph with 46 nodes and 45 edges,carrier,personnel,:mod,carrier,personnel,:mod,c3_12,c3_12,p3_14,p3_14,inanimate
979,0,278,"(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



","[{'PER': 'Victor'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'ORG': 'United_States'}, {'ORG': 'Army'}, {'ORG': 'Army'}, {'LOC': 'Baghdad'}, {'LOC': 'International_Airport'}, {'LOC': 'Baghdad'}, {'LOC': 'International'}, {'LOC': 'Airport'}, {'B_human': 'person'}, {'B_human': 'wing'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'military'}, {'W_Inanimate': 'airport'}]","(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



",DiGraph with 46 nodes and 45 edges,date-entity,back,:mod,date-entity,back,:mod,d_28,d_28,b_31,b_31,inanimate
980,0,278,"(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



","[{'PER': 'Victor'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'ORG': 'United_States'}, {'ORG': 'Army'}, {'ORG': 'Army'}, {'LOC': 'Baghdad'}, {'LOC': 'International_Airport'}, {'LOC': 'Baghdad'}, {'LOC': 'International'}, {'LOC': 'Airport'}, {'B_human': 'person'}, {'B_human': 'wing'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'military'}, {'W_Inanimate': 'airport'}]","(f / find-01
      :ARG0 (a2 / and
            :op1 (p / person :wiki - :name (n / name :op1 ""Victor""))
            :op2 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG2 (w / wingman
                              :poss p))))
      :ARG1 (s / site
            :purpose (a4 / ambush-01)
            :consist-of (c3 / carrier
                  :ARG1-of (a6 / armor-01)
                  :mod (p3 / personnel)
                  :quant (a / about :op1 12)
                  :location (r / relative-position
                        :op1 (l2 / location
                              :location-of a3)
                        :quant (l / less-than
                              :op1 (d3 / distance-quantity :quant 1
                                    :unit (m / mile)))))
            :mod (c2 / country :wiki ""Iraq"" :name (n5 / name :op1 ""Iraq"")))
      :time (d / date-entity :month 4 :year 2003
            :mod (b / back))
      :time (a3 / advance-01
            :ARG1 (m2 / military :wiki ""United_States_Army"" :name (n3 / name :op1 ""Army""))
            :purpose (c / capture-01
                  :ARG0 m2
                  :ARG1 (a5 / airport :wiki ""Baghdad_International_Airport"" :name (n4 / name :op1 ""Baghdad"" :op2 ""International"" :op3 ""Airport"")))
            :mod (i / initial)))



",DiGraph with 46 nodes and 45 edges,advance-01,initial,:mod,advance-01,initial,:mod,a3_32,a3_32,i_45,i_45,inanimate
981,0,279,"(c / cause-01
      :ARG0 (n / need-01
            :ARG0 (m / military :wiki ""United_States_Navy""
                  :name (n2 / name :op1 ""Navy""))
            :ARG1 (a / and
                  :op1 (b / bodyguard
                        :beneficiary (c2 / corps
                              :consist-of (p / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (o / officer)))))
                  :op2 (f / force
                        :purpose (e / expedition)
                        :mod (a2 / also)))))



","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'ORG': 'Navy'}, {'B_human': 'bodyguard'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'W_Animate': 'military'}]","(c / cause-01
      :ARG0 (n / need-01
            :ARG0 (m / military :wiki ""United_States_Navy""
                  :name (n2 / name :op1 ""Navy""))
            :ARG1 (a / and
                  :op1 (b / bodyguard
                        :beneficiary (c2 / corps
                              :consist-of (p / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (o / officer)))))
                  :op2 (f / force
                        :purpose (e / expedition)
                        :mod (a2 / also)))))



",DiGraph with 15 nodes and 14 edges,corps,person,:consist-of,corps,person,:consist-of,c2_8,c2_8,p_9,p_9,animate
982,0,279,"(c / cause-01
      :ARG0 (n / need-01
            :ARG0 (m / military :wiki ""United_States_Navy""
                  :name (n2 / name :op1 ""Navy""))
            :ARG1 (a / and
                  :op1 (b / bodyguard
                        :beneficiary (c2 / corps
                              :consist-of (p / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (o / officer)))))
                  :op2 (f / force
                        :purpose (e / expedition)
                        :mod (a2 / also)))))



","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'ORG': 'Navy'}, {'B_human': 'bodyguard'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'W_Animate': 'military'}]","(c / cause-01
      :ARG0 (n / need-01
            :ARG0 (m / military :wiki ""United_States_Navy""
                  :name (n2 / name :op1 ""Navy""))
            :ARG1 (a / and
                  :op1 (b / bodyguard
                        :beneficiary (c2 / corps
                              :consist-of (p / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (o / officer)))))
                  :op2 (f / force
                        :purpose (e / expedition)
                        :mod (a2 / also)))))



",DiGraph with 15 nodes and 14 edges,force,also,:mod,force,also,:mod,f_12,f_12,a2_14,a2_14,inanimate
983,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,get-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,g_3,c2_35,c_13,a4_26,inanimate
984,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,allow-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,a4_26,c2_35,c2_35,a4_26,inanimate
985,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,group,person,:consist-of,group,person,,g4_31,g4_31,p3_32,p2_20,animate
986,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,get-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,g_3,c2_35,c_13,a4_26,inanimate
987,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,allow-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,a4_26,c2_35,c2_35,a4_26,inanimate
988,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,tell-01,also,:mod,tell-01,also,:mod,t_0,t_0,a_43,a_43,inanimate
989,0,280,"(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



","[{'ORG': 'United_States'}, {'ORG': 'Air_Force'}, {'ORG': 'Force'}, {'ORG': 'United_States'}, {'ORG': 'Marine_Corps'}, {'ORG': 'Marines'}, {'B_human': 'guy'}, {'B_human': 'person'}, {'B_human': 'Marines'}, {'B_human': 'person'}, {'W_Animate': 'military'}, {'W_Animate': 'military'}]","(t / tell-01
      :ARG0 (h / he)
      :ARG1 (a2 / and
            :op1 (g / get-01
                  :ARG0 (g2 / guy
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 (m2 / military :wiki ""United_States_Air_Force"" :name (n / name :op1 ""Air"" :op2 ""Force""))))
                  :ARG1 (p / pay
                        :mod (a3 / additional))
                  :ARG1-of (c / cause-01
                        :ARG0 (s / station-01
                              :ARG1 g2
                              :ARG2 (b / base
                                    :ARG1-of (s2 / same-01
                                          :ARG2 (b2 / base
                                                :ARG2-of (s3 / station-01
                                                      :ARG1 (p2 / person
                                                            :ARG0-of (h3 / have-org-role-91
                                                                  :ARG1 (m3 / military :wiki ""United_States_Marine_Corps"" :name (n2 / name :op1 ""Marines"")))))))))))
            :op2 (a4 / allow-01 :polarity -
                  :ARG1 (g3 / go-02
                        :ARG0 p2
                        :ARG1 (r / round)
                        :prep-in (g4 / group
                              :consist-of (p3 / person
                                    :quant (m / more-than :op1 4))))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (c3 / concern-01
                              :ARG0 (p4 / possible-01
                                    :ARG1 (d / do-02
                                          :ARG0 p2
                                          :ARG1 (t3 / thing)
                                          :ARG2 (a6 / anyone)))
                              :ARG1 (t2 / they)))))
      :mod (a / also))



",DiGraph with 44 nodes and 43 edges,pay,additional,:mod,pay,additional,:mod,p_11,p_11,a3_12,a3_12,inanimate
990,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,decrease-01,cause-01,:ARG0-of,decrease-01,cause-01,cause-01,d_4,c_12,c_12,d_4,inanimate
991,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,amount,food,:consist-of,amount,food,:consist-of,a2_5,a2_5,f_6,f_6,inanimate
992,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,decrease-01,cause-01,:ARG0-of,decrease-01,cause-01,cause-01,d_4,c_12,c_12,d_4,inanimate
993,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,starve-01,decrease-01,:condition,starve-01,decrease-01,:condition,s_0,s_0,d_4,d_4,inanimate
994,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,food,surplus,:mod,food,surplus,:mod,f_6,f_6,s2_7,s2_7,inanimate
995,0,281,"(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



","[{'PER': 'i'}, {'W_Inanimate': 'location'}]","(s / starve-01
      :ARG1 (p / poor
            :location (a / around
                  :op1 (w / world)))
      :condition (d / decrease-01
            :ARG1 (a2 / amount
                  :consist-of (f / food
                        :mod (s2 / surplus)))
            :manner (s3 / sudden)
            :ARG2-of (r / result-01
                  :ARG1 (p2 / peak-01
                        :ARG1 (o / oil)))
            :ARG0-of (c / cause-01
                  :ARG1 (i / instability
                        :ARG0-of (l2 / lead-03
                              :ARG2 (c2 / conflict-01
                                    :ARG2 (r2 / resource
                                          :mod (s4 / scarce)))
                              :ARG1-of (p3 / possible-01)))))
      :ARG1-of (l / lament-01
            :ARG1-of (p4 / possible-01)))



",DiGraph with 21 nodes and 20 edges,resource,scarce,:mod,resource,scarce,:mod,r2_16,r2_16,s4_17,s4_17,inanimate
996,0,282,"(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'United_States'}, {'LOC': 'U.S.'}, {'LOC': 'Saudi_Arabia'}, {'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



",DiGraph with 33 nodes and 32 edges,reserve,oil,:consist-of,reserve,oil,:consist-of,r_12,r_12,o_14,o_14,inanimate
997,0,282,"(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'United_States'}, {'LOC': 'U.S.'}, {'LOC': 'Saudi_Arabia'}, {'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



",DiGraph with 33 nodes and 32 edges,deny-01,have-degree-91,:condition,deny-01,have-03,,d_15,d_15,h2_21,h_1,inanimate
998,0,282,"(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'United_States'}, {'LOC': 'U.S.'}, {'LOC': 'Saudi_Arabia'}, {'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



",DiGraph with 33 nodes and 32 edges,reserve,enormous,:mod,reserve,enormous,:mod,r_12,r_12,e_13,e_13,inanimate
999,0,282,"(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'United_States'}, {'LOC': 'U.S.'}, {'LOC': 'Saudi_Arabia'}, {'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a3 / and
      :op1 (h / have-03
            :ARG0 (b / between
                  :op1 (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
                  :op2 (c2 / country :wiki ""Iran"" :name (n2 / name :op1 ""Iran"")))
            :ARG1 (a / access-01
                  :ARG1 (r / reserve
                        :mod (e / enormous)
                        :consist-of (o / oil))
                  :ARG1-of (d / deny-01
                        :ARG0 b
                        :ARG2 (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""U.S.""))
                        :condition (h2 / have-degree-91
                              :ARG1 s2
                              :ARG2 (s / short-06
                                    :ARG2 (s2 / supply))
                              :ARG3 (t / too)))))
      :op2 (c4 / come-to-mind-09
            :ARG2 (c5 / country :wiki ""Saudi_Arabia"" :name (n4 / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (a2 / as-well)))



",DiGraph with 33 nodes and 32 edges,come-to-mind-09,as-well,:mod,come-to-mind-09,as-well,:mod,c4_26,c4_26,a2_32,a2_32,inanimate
1000,0,283,"(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



","[{'LOC': 'United_States'}, {'LOC': 'U.S'}, {'LOC': 'Saudi_Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'ORG': 'House'}, {'ORG': 'of_Saud'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



",DiGraph with 61 nodes and 60 edges,maintain-01,cause-01,:ARG1-of,maintain-01,cause-01,cause-01,m_1,c4_13,c4_13,m_1,inanimate
1001,0,283,"(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



","[{'LOC': 'United_States'}, {'LOC': 'U.S'}, {'LOC': 'Saudi_Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'ORG': 'House'}, {'ORG': 'of_Saud'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



",DiGraph with 61 nodes and 60 edges,reserve,oil,:consist-of,reserve,oil,:consist-of,r_16,r_16,o_17,o_17,inanimate
1002,0,283,"(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



","[{'LOC': 'United_States'}, {'LOC': 'U.S'}, {'LOC': 'Saudi_Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'ORG': 'House'}, {'ORG': 'of_Saud'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



",DiGraph with 61 nodes and 60 edges,maintain-01,cause-01,:ARG1-of,maintain-01,cause-01,cause-01,m_1,c4_13,c4_13,m_1,inanimate
1003,0,283,"(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



","[{'LOC': 'United_States'}, {'LOC': 'U.S'}, {'LOC': 'Saudi_Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'ORG': 'House'}, {'ORG': 'of_Saud'}, {'LOC': 'Iran'}, {'LOC': 'Iran'}, {'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (m / maintain-01
            :ARG1 (c / control-01
                  :ARG0 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""U.S.""))
                  :ARG1 (c3 / country :wiki ""Saudi_Arabia"" :name (n2 / name :op1 ""Saudi"" :op2 ""Arabia"")))
            :mod (v / vital)
            :ARG1-of (c4 / cause-01
                  :ARG0 (h / have-03
                        :ARG0 c3
                        :ARG1 (r / reserve
                              :consist-of (o / oil)
                              :ARG1-of (h2 / have-degree-91
                                    :ARG2 (l / large)
                                    :ARG3 (m2 / most)
                                    :ARG5 (w2 / world)))))
            :ARG1-of (m3 / mean-01
                  :ARG2 (p / prop-up-01
                        :ARG0 c2
                        :ARG1 (g / government-organization :wiki ""House_of_Saud"" :name (n3 / name :op1 ""House"" :op2 ""of"" :op3 ""Saud""))
                        :direction (u / up))))
      :op2 (f / facilitate-01
            :ARG1 (r2 / revolution-03
                  :location c3)
            :ARG0-of (b / benefit-01
                  :ARG1 (o2 / or
                        :op1 (c5 / country :wiki ""Iran"" :name (n4 / name :op1 ""Iran""))
                        :op2 (a2 / and
                              :op1 (c6 / country :wiki ""China"" :name (n5 / name :op1 ""China""))
                              :op2 (c7 / country
                                    :location (c8 / continent :wiki ""Asia"" :name (n6 / name :op1 ""Asia""))
                                    :ARG0-of (p2 / partner-01
                                          :ARG1 c6))))
                  :ARG1-of (e / equal-01))
            :ARG0-of (a3 / allow-01
                  :ARG1 (a4 / access-01
                        :ARG0 o2
                        :manner (d / default-02)
                        :ARG1-of (h3 / have-degree-91
                              :ARG2 (g2 / great)
                              :ARG3 (m4 / more))))))



",DiGraph with 61 nodes and 60 edges,maintain-01,vital,:mod,maintain-01,vital,:mod,m_1,m_1,v_12,v_12,inanimate
1004,0,284,"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",[],"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",DiGraph with 25 nodes and 24 edges,generation,human,:consist-of,generation,human,:consist-of,g_2,g_2,h_4,h_4,inanimate
1005,0,284,"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",[],"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",DiGraph with 25 nodes and 24 edges,obligate-01,and,:condition,obligate-01,and,:condition,o3_1,o3_1,a_14,a_14,inanimate
1006,0,284,"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",[],"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",DiGraph with 25 nodes and 24 edges,generation,next,:mod,generation,next,:mod,g_2,g_2,n_3,n_3,inanimate
1007,0,284,"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",[],"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",DiGraph with 25 nodes and 24 edges,stone,step-01,:mod,stone,step-01,:mod,s_6,s_6,s2_7,s2_7,inanimate
1008,0,284,"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",[],"(c / contrast-01
      :ARG2 (o3 / obligate-01
            :ARG1 (g / generation
                  :mod (n / next)
                  :consist-of (h / human))
            :ARG2 (d2 / do-02
                  :ARG3 (s / stone
                        :mod (s2 / step-01)
                        :ARG1-of (m / major-02)
                        :ARG1-of (m2 / mean-01
                              :ARG2 (e / economy
                                    :ARG1-of (b / base-02
                                          :ARG2 (o2 / oil)))))
                  :manner (w2 / without))
            :condition (a / and
                  :op1 (d / do-02 :polarity -
                        :ARG0 (w / we))
                  :op2 (a2 / allow-01
                        :ARG0 w
                        :ARG1 (c3 / collapse-01
                              :ARG0 (w3 / weight
                                    :poss c2)
                              :ARG1 (c2 / civilization
                                    :mod (t / technological)))))))



",DiGraph with 25 nodes and 24 edges,civilization,technological,:mod,civilization,technological,:mod,c2_23,c2_23,t_24,t_24,inanimate
1009,0,285,"(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



",DiGraph with 14 nodes and 13 edges,body,work-01,:consist-of,body,work-01,:consist-of,b_3,b_3,w2_5,w2_5,inanimate
1010,0,285,"(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



",DiGraph with 14 nodes and 13 edges,man,great,:mod,man,great,:mod,m_1,m_1,g_2,g_2,inanimate
1011,0,285,"(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(a / and
      :op1 (m / man
            :mod (g / great))
      :op2 (b / body
            :mod (g2 / great)
            :consist-of (w2 / work-01))
      :op3 (s / soul
            :ARG1-of (e / enlighten-01
                  :degree (t / truly)))
      :domain (p / person
            :ARG0-of (r / revisit-01
                  :ARG1 (w / we)
                  :ARG1-of (s2 / sure-02
                        :ARG0 (i / i)))))



",DiGraph with 14 nodes and 13 edges,body,great,:mod,body,great,,b_3,b_3,g2_4,g_2,inanimate
1012,0,286,"(o2 / or
      :op1 (f / fall-01
            :ARG1 (s2 / strand
                  :consist-of (h4 / hair)
                  :ARG1-of (h / have-03
                        :ARG0 (d / dog
                              :ARG0-of (h2 / have-03
                                    :ARG1 (h3 / hair
                                          :ARG1-of (s / short-07))))))
            :direction (o / out)
            :ARG1-of a)
      :op2 (b / break-01
            :ARG1 s2)
      :time (b2 / before
            :op1 (o3 / or
                  :op1 (f2 / fall-01
                        :ARG1 (s3 / strand
                              :consist-of (h5 / hair)
                              :ARG1-of (h6 / have-03
                                    :ARG0 (d2 / dog
                                          :ARG0-of (h7 / have-03
                                                :ARG1 (h8 / hair
                                                      :ARG1-of (l / long-03)))
                                          :ARG1-of (a / average-04)))))
                  :op2 (b3 / break-01
                        :ARG1 s3))))



","[{'B_animal': 'dog'}, {'B_animal': 'dog'}]","(o2 / or
      :op1 (f / fall-01
            :ARG1 (s2 / strand
                  :consist-of (h4 / hair)
                  :ARG1-of (h / have-03
                        :ARG0 (d / dog
                              :ARG0-of (h2 / have-03
                                    :ARG1 (h3 / hair
                                          :ARG1-of (s / short-07))))))
            :direction (o / out)
            :ARG1-of a)
      :op2 (b / break-01
            :ARG1 s2)
      :time (b2 / before
            :op1 (o3 / or
                  :op1 (f2 / fall-01
                        :ARG1 (s3 / strand
                              :consist-of (h5 / hair)
                              :ARG1-of (h6 / have-03
                                    :ARG0 (d2 / dog
                                          :ARG0-of (h7 / have-03
                                                :ARG1 (h8 / hair
                                                      :ARG1-of (l / long-03)))
                                          :ARG1-of (a / average-04)))))
                  :op2 (b3 / break-01
                        :ARG1 s3))))



",DiGraph with 26 nodes and 25 edges,strand,hair,:consist-of,strand,hair,:consist-of,s2_2,s2_2,h4_3,h4_3,inanimate
1013,0,286,"(o2 / or
      :op1 (f / fall-01
            :ARG1 (s2 / strand
                  :consist-of (h4 / hair)
                  :ARG1-of (h / have-03
                        :ARG0 (d / dog
                              :ARG0-of (h2 / have-03
                                    :ARG1 (h3 / hair
                                          :ARG1-of (s / short-07))))))
            :direction (o / out)
            :ARG1-of a)
      :op2 (b / break-01
            :ARG1 s2)
      :time (b2 / before
            :op1 (o3 / or
                  :op1 (f2 / fall-01
                        :ARG1 (s3 / strand
                              :consist-of (h5 / hair)
                              :ARG1-of (h6 / have-03
                                    :ARG0 (d2 / dog
                                          :ARG0-of (h7 / have-03
                                                :ARG1 (h8 / hair
                                                      :ARG1-of (l / long-03)))
                                          :ARG1-of (a / average-04)))))
                  :op2 (b3 / break-01
                        :ARG1 s3))))



","[{'B_animal': 'dog'}, {'B_animal': 'dog'}]","(o2 / or
      :op1 (f / fall-01
            :ARG1 (s2 / strand
                  :consist-of (h4 / hair)
                  :ARG1-of (h / have-03
                        :ARG0 (d / dog
                              :ARG0-of (h2 / have-03
                                    :ARG1 (h3 / hair
                                          :ARG1-of (s / short-07))))))
            :direction (o / out)
            :ARG1-of a)
      :op2 (b / break-01
            :ARG1 s2)
      :time (b2 / before
            :op1 (o3 / or
                  :op1 (f2 / fall-01
                        :ARG1 (s3 / strand
                              :consist-of (h5 / hair)
                              :ARG1-of (h6 / have-03
                                    :ARG0 (d2 / dog
                                          :ARG0-of (h7 / have-03
                                                :ARG1 (h8 / hair
                                                      :ARG1-of (l / long-03)))
                                          :ARG1-of (a / average-04)))))
                  :op2 (b3 / break-01
                        :ARG1 s3))))



",DiGraph with 26 nodes and 25 edges,strand,hair,:consist-of,strand,hair,:consist-of,s3_16,s2_2,h5_17,h4_3,inanimate
1014,0,287,"(s / suspect-01
      :ARG0 (i / i)
      :ARG1 (h / have-degree-91
            :ARG1 (s2 / scenario
                  :consist-of (a2 / and
                        :op1 (g / god
                              :ARG1-of (e / exist-01
                                    :time (a3 / always)))
                        :op2 (c / create-01
                              :ARG0 g
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / see-01
                                          :ARG0 (w / we))
                                    :ARG1-of (e2 / exist-01
                                          :ARG1-of (i2 / infer-01
                                                :ARG0 w
                                                :ARG1-of (p / possible-01)))))))
            :ARG2 (a / appeal-03
                  :ARG0 s2
                  :ARG1 (y / you))
            :ARG3 (m / more))
      :mod (r / rather))



",[{'PER': 'i'}],"(s / suspect-01
      :ARG0 (i / i)
      :ARG1 (h / have-degree-91
            :ARG1 (s2 / scenario
                  :consist-of (a2 / and
                        :op1 (g / god
                              :ARG1-of (e / exist-01
                                    :time (a3 / always)))
                        :op2 (c / create-01
                              :ARG0 g
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / see-01
                                          :ARG0 (w / we))
                                    :ARG1-of (e2 / exist-01
                                          :ARG1-of (i2 / infer-01
                                                :ARG0 w
                                                :ARG1-of (p / possible-01)))))))
            :ARG2 (a / appeal-03
                  :ARG0 s2
                  :ARG1 (y / you))
            :ARG3 (m / more))
      :mod (r / rather))



",DiGraph with 22 nodes and 21 edges,scenario,and,:consist-of,scenario,and,:consist-of,s2_3,s2_3,a2_4,a2_4,inanimate
1015,0,287,"(s / suspect-01
      :ARG0 (i / i)
      :ARG1 (h / have-degree-91
            :ARG1 (s2 / scenario
                  :consist-of (a2 / and
                        :op1 (g / god
                              :ARG1-of (e / exist-01
                                    :time (a3 / always)))
                        :op2 (c / create-01
                              :ARG0 g
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / see-01
                                          :ARG0 (w / we))
                                    :ARG1-of (e2 / exist-01
                                          :ARG1-of (i2 / infer-01
                                                :ARG0 w
                                                :ARG1-of (p / possible-01)))))))
            :ARG2 (a / appeal-03
                  :ARG0 s2
                  :ARG1 (y / you))
            :ARG3 (m / more))
      :mod (r / rather))



",[{'PER': 'i'}],"(s / suspect-01
      :ARG0 (i / i)
      :ARG1 (h / have-degree-91
            :ARG1 (s2 / scenario
                  :consist-of (a2 / and
                        :op1 (g / god
                              :ARG1-of (e / exist-01
                                    :time (a3 / always)))
                        :op2 (c / create-01
                              :ARG0 g
                              :ARG1 (t / thing
                                    :ARG1-of (s3 / see-01
                                          :ARG0 (w / we))
                                    :ARG1-of (e2 / exist-01
                                          :ARG1-of (i2 / infer-01
                                                :ARG0 w
                                                :ARG1-of (p / possible-01)))))))
            :ARG2 (a / appeal-03
                  :ARG0 s2
                  :ARG1 (y / you))
            :ARG3 (m / more))
      :mod (r / rather))



",DiGraph with 22 nodes and 21 edges,suspect-01,rather,:mod,suspect-01,rather,:mod,s_0,s_0,r_21,r_21,inanimate
1016,0,288,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",[],"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",DiGraph with 17 nodes and 16 edges,form,life,:consist-of,form,life,:consist-of,f2_5,f2_5,l3_6,l3_6,inanimate
1017,0,288,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",[],"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",DiGraph with 17 nodes and 16 edges,premise,this,:mod,premise,this,:mod,p_3,p_3,t_4,t_4,inanimate
1018,0,288,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",[],"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG2 (a / assume-02
                  :ARG0 (p / premise
                        :mod (t / this))
                  :ARG1 (f2 / form
                        :consist-of (l3 / life)
                        :ARG1-of (p3 / possible-01)
                        :mod (o2 / only)
                        :domain (l2 / life
                              :ARG1-of (h / have-manner-91
                                    :ARG1-of (k / know-01
                                          :ARG0 (w / we)))))))
      :snt2 (a2 / and
            :op2 (d / disagree-01
                  :ARG0 (i2 / i)
                  :ARG2 a)))



",DiGraph with 17 nodes and 16 edges,form,only,:mod,form,only,:mod,f2_5,f2_5,o2_8,o2_8,inanimate
1019,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,system,star,:consist-of,system,star,:consist-of,s4_9,s4_9,s5_10,s5_10,inanimate
1020,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,go-02,look-01,:condition,go-02,look-01,:condition,g_0,g_0,l_23,l_23,inanimate
1021,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,particle,subatom,:mod,particle,subatom,:mod,p_2,p_2,s_3,s_3,inanimate
1022,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,universe,entire,:mod,universe,entire,:mod,u_12,u_12,e_15,e_15,inanimate
1023,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,universe,this,:mod,universe,this,,u2_26,u_12,t2_27,t2_27,inanimate
1024,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,level,nano,:mod,level,nano,:mod,l2_32,l2_32,n_33,n_33,inanimate
1025,0,289,"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",[{'PER': 'i'}],"(g / go-02
      :ARG0 (w / we)
      :ARG3 (p / particle
            :mod (s / subatom)
            :ARG1-of (h / have-degree-91
                  :ARG2 (s2 / small)
                  :ARG3 (m / most)))
      :ARG4 (a3 / and
            :op1 (p2 / planet)
            :op2 (s4 / system
                  :consist-of (s5 / star))
            :op3 (g2 / galaxy)
            :op4 (u / universe
                  :ARG1-of (k / know-02
                        :ARG0 w)
                  :mod (e / entire)))
      :direction (t / through
            :op1 (a / atom)
            :op2 (m2 / molecule)
            :op3 (t3 / thing
                  :ARG1-of (s3 / solid-02))
            :op4 (c / construct)
            :op5 (e2 / et-cetera))
      :condition (l / look-01
            :ARG0 w
            :ARG1 (s6 / stratify-01
                  :ARG1 (u2 / universe
                        :mod (t2 / this))
                  :ARG2 (m3 / magnitude)))
      :manner (c2 / capable-01
            :ARG1 w
            :ARG2 (d / discern-01
                  :manner (l2 / level
                        :mod (n / nano
                              :mod (s7 / sub))))
            :time (c3 / current))
      :manner (i / interpret-01
            :ARG0 w
            :ARG1 u))



",DiGraph with 39 nodes and 38 edges,nano,sub,:mod,nano,sub,:mod,n_33,n_33,s7_34,s7_34,inanimate
1026,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,level,structure,:consist-of,level,structure,:consist-of,l2_22,l2_22,s3_23,s3_23,inanimate
1027,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,capable-01,meager,:mod,capable-01,meager,:mod,c_11,c_11,m_15,m_15,inanimate
1028,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,makeup,serial,:mod,makeup,serial,:mod,m2_19,m2_19,s2_20,s2_20,inanimate
1029,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,mean-01,of-course,:mod,mean-01,of-course,:mod,m3_28,m3_28,o2_36,o2_36,inanimate
1030,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,follow-02,and,:destination,follow-02,and,:destination,f2_18,f2_18,a2_21,a2_21,inanimate
1031,0,290,"(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



","[{'ORG': 'Benoit_Mandelbrot'}, {'MISC': 'Man'}, {'ORG': 'delbro'}, {'PER': 'i'}, {'W_Inanimate': 'product'}]","(f / foolish
      :polarity (a3 / amr-unknown)
      :domain (a / assume-02
            :ARG1 (s / stop-01
                  :ARG1 (l / lattice
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / product :wiki ""Benoit_Mandelbrot"" :name (n / name :op1 ""Mandelbrot""))))
                  :time (e / extreme
                        :poss (c / capable-01
                              :ARG1 (w / we)
                              :ARG2 (o / observe-01
                                    :ARG0 w)
                              :mod (m / meager)))
                  :ARG1-of (i4 / instead-of-91
                        :ARG2 (c3 / continue-01
                              :ARG1 (f2 / follow-02
                                    :ARG1 (m2 / makeup
                                          :mod (s2 / serial))
                                    :destination (a2 / and
                                          :op1 (l2 / level
                                                :consist-of (s3 / structure)
                                                :ARG1-of (i / imagine-01 :polarity -))
                                          :op2 (b / beyond)
                                          :destination (i2 / infinity
                                                :ARG1-of (m3 / mean-01
                                                      :ARG2 (l3 / lack-01
                                                            :ARG1 (t / thing
                                                                  :quant-of (c5 / constrain-01)))
                                                      :ARG1-of (i3 / instead-of-91
                                                            :ARG2 (m4 / mean-01
                                                                  :ARG1 i2
                                                                  :ARG2 (p2 / point)))
                                                      :mod (o2 / of-course))))))))))



",DiGraph with 37 nodes and 36 edges,and,infinity,:destination,and,infinity,:destination,a2_21,a2_21,i2_27,i2_27,inanimate
1032,0,291,"(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



","[{'ORG': 'Cap'}, {'MISC': 'ra'}, {'ORG': 'Cap'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



",DiGraph with 38 nodes and 37 edges,problem,person,:consist-of,problem,person,,p4_29,p4_29,p2_31,p5_19,animate
1033,0,291,"(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



","[{'ORG': 'Cap'}, {'MISC': 'ra'}, {'ORG': 'Cap'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



",DiGraph with 38 nodes and 37 edges,possible-01,remain-01,:condition,possible-01,remain-01,:condition,p_13,p_13,r_28,r_28,inanimate
1034,0,291,"(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



","[{'ORG': 'Cap'}, {'MISC': 'ra'}, {'ORG': 'Cap'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



",DiGraph with 38 nodes and 37 edges,model-01,fractal,:mod,model-01,fractal,:mod,m_15,m_15,f_27,f_27,inanimate
1035,0,291,"(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



","[{'ORG': 'Cap'}, {'MISC': 'ra'}, {'ORG': 'Cap'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



",DiGraph with 38 nodes and 37 edges,structure,such,:mod,structure,such,,s3_33,s_5,s4_34,s4_34,inanimate
1036,0,291,"(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



","[{'ORG': 'Cap'}, {'MISC': 'ra'}, {'ORG': 'Cap'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(m2 / multi-sentence
      :snt1 (i / issue-02
            :ARG0 (c / constitute-01
                  :ARG0 (t2 / thing)
                  :ARG1 (o / or
                        :op1 (s / structure)
                        :op2 (o2 / order)))
            :ARG1-of (k / key-02
                  :ARG2 (d / discuss-01
                        :ARG1 (a2 / and
                              :op1 (l / life)
                              :op2 (u / universe)))))
      :snt2 (e2 / example
            :op1 (p / possible-01
                  :ARG1 (t / take-01
                        :ARG1 (m / model-01
                              :ARG1 (s2 / structure
                                    :ARG1-of (e / embed-01))
                              :source (a3 / and
                                    :op1 (p5 / person :wiki - :name (n / name :op1 ""BGW""))
                                    :op2 (p6 / person :wiki ""Fritjof_Capra"" :name (n2 / name :op1 ""Capra"")))
                              :mod (f / fractal)))
                  :condition (r / remain-01
                        :ARG1 (p4 / problem
                              :topic (r2 / regression)
                              :consist-of (p2 / person
                                    :ARG0-of (o4 / observe-01
                                          :ARG1 (s3 / structure
                                                :mod (s4 / such)))
                                    :ARG0-of (d2 / define-01
                                          :ARG1 s3)))
                        :ARG2 (w / we)))))



",DiGraph with 38 nodes and 37 edges,model-01,and,:source,model-01,and,,m_15,m_15,a3_18,a2_9,inanimate
1037,0,292,"(s / select-01
      :ARG0 s2
      :ARG1 (g / group
            :consist-of (p / person
                  :ARG0-of (m / make-up-07
                        :ARG1 (o / office
                              :poss (s2 / she))
                        :time (n / now))))
      :manner (h / hand)
      :manner (i / intend-01
            :ARG0 s2
            :ARG1 (w / work-01
                  :ARG0 s2
                  :ARG3 g
                  :purpose (i2 / implement-01
                        :ARG0 s2
                        :ARG1 (t2 / thing
                              :ARG1-of (e / envision-01
                                    :ARG0 s2)))
                  :manner (t / together))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(s / select-01
      :ARG0 s2
      :ARG1 (g / group
            :consist-of (p / person
                  :ARG0-of (m / make-up-07
                        :ARG1 (o / office
                              :poss (s2 / she))
                        :time (n / now))))
      :manner (h / hand)
      :manner (i / intend-01
            :ARG0 s2
            :ARG1 (w / work-01
                  :ARG0 s2
                  :ARG3 g
                  :purpose (i2 / implement-01
                        :ARG0 s2
                        :ARG1 (t2 / thing
                              :ARG1-of (e / envision-01
                                    :ARG0 s2)))
                  :manner (t / together))))



",DiGraph with 20 nodes and 19 edges,group,person,:consist-of,group,person,:consist-of,g_2,g_2,p_3,p_3,animate
1038,0,293,"(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



","[{'PER': 'Michele'}, {'PER': 'Bach'}, {'PER': 'Bach'}, {'LOC': 'Stillwater'}, {'LOC': 'Minnesota'}, {'LOC': 'Stillwater'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



",DiGraph with 40 nodes and 39 edges,speak-01,cause-01,:ARG0-of,speak-01,cause-01,cause-01,s3_26,c4_35,c4_35,s3_26,inanimate
1039,0,293,"(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



","[{'PER': 'Michele'}, {'PER': 'Bach'}, {'PER': 'Bach'}, {'LOC': 'Stillwater'}, {'LOC': 'Minnesota'}, {'LOC': 'Stillwater'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



",DiGraph with 40 nodes and 39 edges,set,standard,:consist-of,set,standard,:consist-of,s4_30,s4_30,s5_31,s5_31,inanimate
1040,0,293,"(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



","[{'PER': 'Michele'}, {'PER': 'Bach'}, {'PER': 'Bach'}, {'LOC': 'Stillwater'}, {'LOC': 'Minnesota'}, {'LOC': 'Stillwater'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



",DiGraph with 40 nodes and 39 edges,speak-01,cause-01,:ARG0-of,speak-01,cause-01,cause-01,s3_26,c4_35,c4_35,s3_26,inanimate
1041,0,293,"(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



","[{'PER': 'Michele'}, {'PER': 'Bach'}, {'PER': 'Bach'}, {'LOC': 'Stillwater'}, {'LOC': 'Minnesota'}, {'LOC': 'Stillwater'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



",DiGraph with 40 nodes and 39 edges,person,other,:mod,person,other,,p2_7,p_3,o_8,o_8,inanimate
1042,0,293,"(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



","[{'PER': 'Michele'}, {'PER': 'Bach'}, {'PER': 'Bach'}, {'LOC': 'Stillwater'}, {'LOC': 'Minnesota'}, {'LOC': 'Stillwater'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (s / start-01
            :ARG0 (a2 / and
                  :op1 (p / person :wiki ""Michele_Bachmann""
                        :name (n / name :op1 ""Bachmann""))
                  :op2 (p2 / person
                        :mod (o / other)
                        :ARG0-of (h / have-rel-role-91
                              :ARG2 (p5 / parent))))
            :ARG1 (s2 / school
                  :location (c / city :wiki ""Stillwater,_Minnesota""
                        :name (n2 / name :op1 ""Stillwater""))
                  :ARG1-of (c3 / charter-01)
                  :ARG2-of (i / include-91
                        :ARG1 (b / between
                              :op1 (k / kindergarten)
                              :op2 (g / grade
                                    :ord (o2 / ordinal-entity :value 12)))))
            :time (d / date-entity :year 1993))
      :op2 (b2 / begin-01
            :ARG1 (s3 / speak-01
                  :ARG0 p
                  :ARG1 (o3 / oppose-01
                        :ARG0 p
                        :ARG1 (s4 / set
                              :consist-of (s5 / standard
                                    :topic (e / education))
                              :ARG1-of (m / mandate-01
                                    :ARG0 (s6 / state))))
                  :ARG0-of (c4 / cause-01
                        :ARG1 (p3 / propel-01
                              :ARG1 p
                              :ARG2 (w / world
                                    :mod (p4 / politics)))))))



",DiGraph with 40 nodes and 39 edges,world,politics,:mod,world,politics,:mod,w_38,w_38,p4_39,p4_39,inanimate
1043,0,294,"(o / odd
      :domain (c / contrast-01
            :ARG1 (w / website
                  :ARG1-of (e / extensive-03)
                  :topic (t / threaten-01
                        :ARG0 (t2 / treaty
                              :topic (b / ban-01
                                    :ARG1 (g / gun
                                          :location (g2 / globe))
                                    :ARG1-of (p / propose-01))
                              :mod (t4 / this)))
                  :consist-of (w2 / webpage
                        :quant (a / at-least :op1 12)))
            :ARG2 (s / seem-01
                  :ARG1 (l / link-01 :polarity -
                        :ARG1 w
                        :ARG2 (t3 / text
                              :ARG1-of (a2 / actual-02)
                              :medium-of b)))))



",[{'W_Inanimate': 'location'}],"(o / odd
      :domain (c / contrast-01
            :ARG1 (w / website
                  :ARG1-of (e / extensive-03)
                  :topic (t / threaten-01
                        :ARG0 (t2 / treaty
                              :topic (b / ban-01
                                    :ARG1 (g / gun
                                          :location (g2 / globe))
                                    :ARG1-of (p / propose-01))
                              :mod (t4 / this)))
                  :consist-of (w2 / webpage
                        :quant (a / at-least :op1 12)))
            :ARG2 (s / seem-01
                  :ARG1 (l / link-01 :polarity -
                        :ARG1 w
                        :ARG2 (t3 / text
                              :ARG1-of (a2 / actual-02)
                              :medium-of b)))))



",DiGraph with 21 nodes and 20 edges,website,webpage,:consist-of,website,webpage,:consist-of,w_2,w_2,w2_11,w2_11,inanimate
1044,0,294,"(o / odd
      :domain (c / contrast-01
            :ARG1 (w / website
                  :ARG1-of (e / extensive-03)
                  :topic (t / threaten-01
                        :ARG0 (t2 / treaty
                              :topic (b / ban-01
                                    :ARG1 (g / gun
                                          :location (g2 / globe))
                                    :ARG1-of (p / propose-01))
                              :mod (t4 / this)))
                  :consist-of (w2 / webpage
                        :quant (a / at-least :op1 12)))
            :ARG2 (s / seem-01
                  :ARG1 (l / link-01 :polarity -
                        :ARG1 w
                        :ARG2 (t3 / text
                              :ARG1-of (a2 / actual-02)
                              :medium-of b)))))



",[{'W_Inanimate': 'location'}],"(o / odd
      :domain (c / contrast-01
            :ARG1 (w / website
                  :ARG1-of (e / extensive-03)
                  :topic (t / threaten-01
                        :ARG0 (t2 / treaty
                              :topic (b / ban-01
                                    :ARG1 (g / gun
                                          :location (g2 / globe))
                                    :ARG1-of (p / propose-01))
                              :mod (t4 / this)))
                  :consist-of (w2 / webpage
                        :quant (a / at-least :op1 12)))
            :ARG2 (s / seem-01
                  :ARG1 (l / link-01 :polarity -
                        :ARG1 w
                        :ARG2 (t3 / text
                              :ARG1-of (a2 / actual-02)
                              :medium-of b)))))



",DiGraph with 21 nodes and 20 edges,treaty,this,:mod,treaty,this,:mod,t2_5,t2_5,t4_10,t4_10,inanimate
1045,0,295,"(a3 / and
      :op1 (w3 / wait-01 :mode imperative
            :ARG1 (y / you)
            :ARG2 (i2 / it))
      :op2 (h2 / have-degree-91
            :ARG1 (g / group
                  :consist-of (w / woman
                        :ARG1-of (w2 / white-02)))
            :ARG2 (l / large)
            :ARG3 (m / most
                  :degree (f / far))
            :ARG5 (g2 / group
                  :ARG1-of (b / benefit-01
                        :ARG0 (a / affirmative-action)))))



",[{'B_human': 'woman'}],"(a3 / and
      :op1 (w3 / wait-01 :mode imperative
            :ARG1 (y / you)
            :ARG2 (i2 / it))
      :op2 (h2 / have-degree-91
            :ARG1 (g / group
                  :consist-of (w / woman
                        :ARG1-of (w2 / white-02)))
            :ARG2 (l / large)
            :ARG3 (m / most
                  :degree (f / far))
            :ARG5 (g2 / group
                  :ARG1-of (b / benefit-01
                        :ARG0 (a / affirmative-action)))))



",DiGraph with 15 nodes and 14 edges,group,woman,:consist-of,group,woman,:consist-of,g_6,g_6,w_7,w_7,animate
1046,0,296,"(b / burn-01
      :ARG0 (c / comment
            :ARG1-of (a / apply-01
                  :ARG2 (p / person
                        :mod (e2 / economy)))
            :consist-of (e / elite))
      :ARG1 (i / i))



","[{'B_human': 'person'}, {'PER': 'i'}]","(b / burn-01
      :ARG0 (c / comment
            :ARG1-of (a / apply-01
                  :ARG2 (p / person
                        :mod (e2 / economy)))
            :consist-of (e / elite))
      :ARG1 (i / i))



",DiGraph with 7 nodes and 6 edges,comment,elite,:consist-of,comment,elite,:consist-of,c_1,c_1,e_5,e_5,inanimate
1047,0,296,"(b / burn-01
      :ARG0 (c / comment
            :ARG1-of (a / apply-01
                  :ARG2 (p / person
                        :mod (e2 / economy)))
            :consist-of (e / elite))
      :ARG1 (i / i))



","[{'B_human': 'person'}, {'PER': 'i'}]","(b / burn-01
      :ARG0 (c / comment
            :ARG1-of (a / apply-01
                  :ARG2 (p / person
                        :mod (e2 / economy)))
            :consist-of (e / elite))
      :ARG1 (i / i))



",DiGraph with 7 nodes and 6 edges,person,economy,:mod,person,economy,:mod,p_3,p_3,e2_4,e2_4,inanimate
1048,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,wane-01,cause-01,:ARG1-of,wane-01,cause-01,cause-01,w_6,c2_8,c2_8,w_6,inanimate
1049,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,heap,and,:consist-of,heap,and,,h_25,h_25,a2_29,a_0,inanimate
1050,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,wane-01,cause-01,:ARG1-of,wane-01,cause-01,cause-01,w_6,c2_8,c2_8,w_6,inanimate
1051,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,concept,justice,:mod,concept,justice,:mod,c4_16,c4_16,j_17,j_17,inanimate
1052,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,concept,fundamental,:mod,concept,fundamental,:mod,c4_16,c4_16,f_19,f_19,inanimate
1053,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,concept,some,:mod,concept,some,:mod,c4_16,c4_16,s7_20,s7_20,inanimate
1054,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,justice,social,:mod,justice,social,:mod,j_17,j_17,s6_18,s6_18,inanimate
1055,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,government-organization,big,:mod,government-organization,big,:mod,g_36,g_36,b_38,b_38,inanimate
1056,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,spy-01,domestic,:mod,spy-01,domestic,:mod,s3_39,s3_39,d_40,d_40,inanimate
1057,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,government-organization,small,:mod,government-organization,small,,g3_44,g_36,s4_46,s4_46,inanimate
1058,0,297,"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",[],"(a / and
      :op1 (s5 / support-01
            :ARG0 (p2 / public
                  :quant (m / majority))
            :ARG1 (p3 / party
                  :ARG1-of (r2 / respect-01
                        :ARG1-of (w / wane-01
                              :time (a4 / already)
                              :ARG1-of (c2 / cause-01
                                    :ARG0 (a5 / and
                                          :op1 (c3 / corrupt-01
                                                :ARG1 p3)
                                          :op2 (w2 / will-02
                                                :ARG0 p3
                                                :ARG1 (t / take-01
                                                      :ARG0 p3
                                                      :ARG1 (c4 / concept
                                                            :mod (j / justice
                                                                  :mod (s6 / social))
                                                            :mod (f / fundamental)
                                                            :mod (s7 / some))
                                                      :ARG3 (f2 / far
                                                            :ARG2-of (h3 / have-degree-91
                                                                  :ARG1 c4
                                                                  :ARG3 (t2 / too)))))))))))
      :op2 (h / heap
            :ARG1-of (r / rust-01)
            :ARG1-of (h2 / hulk-01)
            :time (n / now)
            :consist-of (a2 / and
                  :op1 (c / corrupt-01)
                  :op2 (s / scandal)
                  :op3 (c5 / competent-01 :polarity -)
                  :op4 (i2 / interest
                        :ARG1-of (s2 / special-02))
                  :op5 (g / government-organization
                        :ARG0-of (g2 / govern-01)
                        :mod (b / big))
                  :op6 (s3 / spy-01
                        :mod (d / domestic)))
            :domain (p / party
                  :ARG1-of (l / love-01
                        :ARG0 (a3 / and
                              :op1 (g3 / government-organization
                                    :ARG0-of (g4 / govern-01)
                                    :mod (s4 / small))
                              :op2 (l2 / liberty
                                    :mod (i3 / individual)))))))



",DiGraph with 49 nodes and 48 edges,liberty,individual,:mod,liberty,individual,:mod,l2_47,l2_47,i3_48,i3_48,inanimate
1059,0,298,"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",[{'B_human': 'person'}],"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",DiGraph with 21 nodes and 20 edges,base,person,:consist-of,base,person,:consist-of,b_4,b_4,p5_6,p5_6,animate
1060,0,298,"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",[{'B_human': 'person'}],"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",DiGraph with 21 nodes and 20 edges,hurdle,any,:mod,hurdle,any,:mod,h_12,h_12,a2_14,a2_14,inanimate
1061,0,298,"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",[{'B_human': 'person'}],"(f / figure-01
      :ARG0 (c / conservative)
      :ARG1 (a / and
            :op1 (g / get-05
                  :ARG1 (b / base
                        :poss c
                        :consist-of (p5 / person
                              :ARG0-of (v / vote-01)))
                  :ARG2 (o / out))
            :op2 (v2 / vote-01
                  :ARG0 b
                  :ARG1-of (r / regardless-91
                        :ARG2 (h / hurdle
                              :ARG1-of (m / minor-01)
                              :mod (a2 / any)
                              :ARG1-of (p / possible-01)
                              :ARG1-of (t / throw-01
                                    :ARG2 (w / way
                                          :poss p5))))))
      :ARG1-of (j / justify-01
            :mod (p4 / probable)))



",DiGraph with 21 nodes and 20 edges,justify-01,probable,:mod,justify-01,probable,:mod,j_19,j_19,p4_20,p4_20,inanimate
1062,0,299,"(u / use-01
      :ARG0 (g / generation
            :quant (c4 / couple)
            :consist-of (a / artist
                  :ARG0-of (c / convince-01
                        :ARG2 (h / help-01
                              :ARG0 (c2 / change-01
                                    :ARG1 (c3 / consciousness))
                              :ARG1 (w2 / work-01
                                    :ARG0 a)
                              :mod (g2 / great)))))
      :ARG1 (d / drug)
      :manner (w / wide)
      :ARG0-of (e / exemplify-01))



",[{'B_human': 'artist'}],"(u / use-01
      :ARG0 (g / generation
            :quant (c4 / couple)
            :consist-of (a / artist
                  :ARG0-of (c / convince-01
                        :ARG2 (h / help-01
                              :ARG0 (c2 / change-01
                                    :ARG1 (c3 / consciousness))
                              :ARG1 (w2 / work-01
                                    :ARG0 a)
                              :mod (g2 / great)))))
      :ARG1 (d / drug)
      :manner (w / wide)
      :ARG0-of (e / exemplify-01))



",DiGraph with 14 nodes and 13 edges,generation,artist,:consist-of,generation,artist,:consist-of,g_1,g_1,a_3,a_3,animate
1063,0,299,"(u / use-01
      :ARG0 (g / generation
            :quant (c4 / couple)
            :consist-of (a / artist
                  :ARG0-of (c / convince-01
                        :ARG2 (h / help-01
                              :ARG0 (c2 / change-01
                                    :ARG1 (c3 / consciousness))
                              :ARG1 (w2 / work-01
                                    :ARG0 a)
                              :mod (g2 / great)))))
      :ARG1 (d / drug)
      :manner (w / wide)
      :ARG0-of (e / exemplify-01))



",[{'B_human': 'artist'}],"(u / use-01
      :ARG0 (g / generation
            :quant (c4 / couple)
            :consist-of (a / artist
                  :ARG0-of (c / convince-01
                        :ARG2 (h / help-01
                              :ARG0 (c2 / change-01
                                    :ARG1 (c3 / consciousness))
                              :ARG1 (w2 / work-01
                                    :ARG0 a)
                              :mod (g2 / great)))))
      :ARG1 (d / drug)
      :manner (w / wide)
      :ARG0-of (e / exemplify-01))



",DiGraph with 14 nodes and 13 edges,help-01,great,:mod,help-01,great,:mod,h_5,h_5,g2_10,g2_10,inanimate
1064,0,300,"(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'PER': 'Barack'}, {'PER': 'Obama'}, {'LOC': 'Obama'}, {'B_human': 'person'}, {'B_human': 'enemy'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



",DiGraph with 29 nodes and 28 edges,make-01,cause-01,:ARG1-of,make-01,cause-01,cause-01,m_0,c3_16,c3_16,m_0,inanimate
1065,0,300,"(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'PER': 'Barack'}, {'PER': 'Obama'}, {'LOC': 'Obama'}, {'B_human': 'person'}, {'B_human': 'enemy'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



",DiGraph with 29 nodes and 28 edges,generation,person,:consist-of,generation,person,:consist-of,g_2,g_2,p2_4,p2_4,animate
1066,0,300,"(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'PER': 'Barack'}, {'PER': 'Obama'}, {'LOC': 'Obama'}, {'B_human': 'person'}, {'B_human': 'enemy'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



",DiGraph with 29 nodes and 28 edges,make-01,cause-01,:ARG1-of,make-01,cause-01,cause-01,m_0,c3_16,c3_16,m_0,inanimate
1067,0,300,"(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'PER': 'Barack'}, {'PER': 'Obama'}, {'LOC': 'Obama'}, {'B_human': 'person'}, {'B_human': 'enemy'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}]","(m / make-01
      :ARG0 (w / we)
      :ARG1 (g / generation
            :ARG1-of (n / new-01)
            :consist-of (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 w
                        :ARG2 (e / enemy)))
            :location (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan""))
            :location (c / country :wiki ""Pakistan"" :name (n2 / name :op1 ""Pakistan"")))
      :ARG1-of (c3 / cause-01
            :ARG0 (a2 / and
                  :op1 (a3 / assassinate-01
                        :mod (t / this))
                  :op2 (r / raid-01
                        :time (d / date-entity
                              :dayperiod (n4 / night)))
                  :ARG1-of (e2 / escalate-01
                        :ARG0 (p / person :wiki ""Barack_Obama"" :name (n5 / name :op1 ""Obama""))
                        :location c2))))



",DiGraph with 29 nodes and 28 edges,assassinate-01,this,:mod,assassinate-01,this,:mod,a3_18,a3_18,t_19,t_19,inanimate
1068,0,301,"(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'candidate'}, {'PER': 'i'}]","(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



",DiGraph with 36 nodes and 35 edges,batch,candidate,:consist-of,batch,candidate,:consist-of,b_32,b_32,c_34,c_34,animate
1069,0,301,"(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'candidate'}, {'PER': 'i'}]","(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



",DiGraph with 36 nodes and 35 edges,way,ugly,:mod,way,ugly,:mod,w_8,w_8,u_10,u_10,inanimate
1070,0,301,"(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'candidate'}, {'PER': 'i'}]","(i3 / infer-01
      :ARG1 (h3 / have-trouble-04
            :ARG0 (i4 / i)
            :ARG1 (s / see-01 :polarity -
                  :ARG0 i4
                  :ARG1 (w3 / worsen-01
                        :ARG1 (t2 / thing)
                        :manner (w / way
                              :quant (s2 / some)
                              :mod (u / ugly)
                              :topic (a2 / and
                                    :op1 (e2 / economy)
                                    :op2 (t3 / thing
                                          :manner-of (w2 / work-09
                                                :ARG1 (l / life)
                                                :ARG2 (p5 / person
                                                      :ARG0-of (s3 / struggle-02
                                                            :ARG1 (i2 / income
                                                                  :quant (l2 / little))))))))))
            :ARG1-of (h4 / have-quant-91
                  :ARG3 (m / more)))
      :ARG2 (h / have-org-role-91
            :ARG0 (p6 / person
                  :ARG0-of (h2 / have-org-role-91
                        :ARG1 (p2 / political-party :wiki ""Republican_Party_(United_States)"" :name (n / name :op1 ""Republican"" :op2 ""Party"")))
                  :ARG1-of (i / include-91
                        :ARG2 (p3 / person
                              :source (b / batch
                                    :time (p4 / present)
                                    :consist-of (c / candidate)))))
            :ARG2 (o2 / office)))



",DiGraph with 36 nodes and 35 edges,person,batch,:source,person,batch,,p3_31,p5_16,b_32,b_32,inanimate
1071,0,302,"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",[],"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",DiGraph with 12 nodes and 11 edges,world,good-04,:consist-of,world,good-04,:consist-of,w_4,w_4,g_5,g_5,inanimate
1072,0,302,"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",[],"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",DiGraph with 12 nodes and 11 edges,walk-01,just,:mod,walk-01,just,:mod,w2_7,w2_7,j_11,j_11,inanimate
1073,0,302,"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",[],"(c / contrast-01
      :ARG2 (p / possible-01
            :ARG1 (d / do-02
                  :ARG0 (y / you)
                  :ARG1 (w / world
                        :consist-of (g / good-04))
                  :ARG2 y
                  :ARG3 (w2 / walk-01
                        :ARG0 y
                        :direction (a / away)
                        :source (h / he)
                        :mod (j / just)))))



",DiGraph with 12 nodes and 11 edges,walk-01,he,:source,walk-01,he,:source,w2_7,w2_7,h_10,h_10,animate
1074,0,303,"(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



","[{'B_human': 'person'}, {'PER': 'i'}]","(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



",DiGraph with 9 nodes and 8 edges,union,person,:consist-of,union,person,:consist-of,u_3,u_3,p_4,p_4,animate
1075,0,303,"(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



","[{'B_human': 'person'}, {'PER': 'i'}]","(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



",DiGraph with 9 nodes and 8 edges,go-06,by-oneself,:mod,go-06,by-oneself,:mod,g_0,g_0,b2_6,b2_6,inanimate
1076,0,303,"(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



","[{'B_human': 'person'}, {'PER': 'i'}]","(g / go-06
      :ARG0 (i / i)
      :ARG2 (b / bar
            :mod (u / union
                  :consist-of (p / person
                        :ARG0-of (s2 / study-01))))
      :mod (b2 / by-oneself)
      :time (s / sober-03
            :ARG1 i))



",DiGraph with 9 nodes and 8 edges,bar,union,:mod,bar,union,:mod,b_2,b_2,u_3,u_3,inanimate
1077,0,304,"(h / have-03
      :ARG0 (s / she)
      :ARG1 (o / or
            :op1 (h2 / history
                  :consist-of (i / ill-01
                        :ARG1 s
                        :ARG2 (m / mental)))
            :op2 (d / diagnose-01
                  :ARG1 s))
      :mod (e / even)
      :polarity (a / amr-unknown))



",[{'PER': 'i'}],"(h / have-03
      :ARG0 (s / she)
      :ARG1 (o / or
            :op1 (h2 / history
                  :consist-of (i / ill-01
                        :ARG1 s
                        :ARG2 (m / mental)))
            :op2 (d / diagnose-01
                  :ARG1 s))
      :mod (e / even)
      :polarity (a / amr-unknown))



",DiGraph with 11 nodes and 10 edges,history,ill-01,:consist-of,history,ill-01,:consist-of,h2_3,h2_3,i_4,i_4,inanimate
1078,0,304,"(h / have-03
      :ARG0 (s / she)
      :ARG1 (o / or
            :op1 (h2 / history
                  :consist-of (i / ill-01
                        :ARG1 s
                        :ARG2 (m / mental)))
            :op2 (d / diagnose-01
                  :ARG1 s))
      :mod (e / even)
      :polarity (a / amr-unknown))



",[{'PER': 'i'}],"(h / have-03
      :ARG0 (s / she)
      :ARG1 (o / or
            :op1 (h2 / history
                  :consist-of (i / ill-01
                        :ARG1 s
                        :ARG2 (m / mental)))
            :op2 (d / diagnose-01
                  :ARG1 s))
      :mod (e / even)
      :polarity (a / amr-unknown))



",DiGraph with 11 nodes and 10 edges,have-03,even,:mod,have-03,even,:mod,h_0,h_0,e_9,e_9,inanimate
1079,0,305,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g3 / go-02
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (i / i)
                              :ARG2 (g / girlfriend)))
                  :ARG1 (h / help-01
                        :ARG0 p4
                        :ARG1 (p5 / person
                              :ARG0-of (h5 / have-rel-role-91
                                    :ARG1 p4
                                    :ARG2 (m2 / mum)))))
            :ARG2 (h2 / hit-01
                  :ARG1 (h3 / head
                        :part-of p4)
                  :ARG2 (b / bottle
                        :consist-of (g2 / glass))
                  :mod (i2 / in-turn)))
      :snt2 (a / and
            :op1 (c2 / call-02
                  :ARG1 (p / police))
            :op2 (a2 / arrest-01
                  :ARG1 (p2 / prick))
            :ARG1-of (e / expect-01
                  :ARG0 (y / you)
                  :ARG1-of (p3 / possible-01))))



","[{'B_human': 'person'}, {'B_human': 'girlfriend'}, {'B_human': 'person'}, {'B_human': 'mum'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g3 / go-02
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (i / i)
                              :ARG2 (g / girlfriend)))
                  :ARG1 (h / help-01
                        :ARG0 p4
                        :ARG1 (p5 / person
                              :ARG0-of (h5 / have-rel-role-91
                                    :ARG1 p4
                                    :ARG2 (m2 / mum)))))
            :ARG2 (h2 / hit-01
                  :ARG1 (h3 / head
                        :part-of p4)
                  :ARG2 (b / bottle
                        :consist-of (g2 / glass))
                  :mod (i2 / in-turn)))
      :snt2 (a / and
            :op1 (c2 / call-02
                  :ARG1 (p / police))
            :op2 (a2 / arrest-01
                  :ARG1 (p2 / prick))
            :ARG1-of (e / expect-01
                  :ARG0 (y / you)
                  :ARG1-of (p3 / possible-01))))



",DiGraph with 27 nodes and 26 edges,bottle,glass,:consist-of,bottle,glass,:consist-of,b_16,b_16,g2_17,g2_17,inanimate
1080,0,305,"(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g3 / go-02
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (i / i)
                              :ARG2 (g / girlfriend)))
                  :ARG1 (h / help-01
                        :ARG0 p4
                        :ARG1 (p5 / person
                              :ARG0-of (h5 / have-rel-role-91
                                    :ARG1 p4
                                    :ARG2 (m2 / mum)))))
            :ARG2 (h2 / hit-01
                  :ARG1 (h3 / head
                        :part-of p4)
                  :ARG2 (b / bottle
                        :consist-of (g2 / glass))
                  :mod (i2 / in-turn)))
      :snt2 (a / and
            :op1 (c2 / call-02
                  :ARG1 (p / police))
            :op2 (a2 / arrest-01
                  :ARG1 (p2 / prick))
            :ARG1-of (e / expect-01
                  :ARG0 (y / you)
                  :ARG1-of (p3 / possible-01))))



","[{'B_human': 'person'}, {'B_human': 'girlfriend'}, {'B_human': 'person'}, {'B_human': 'mum'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (c / contrast-01
            :ARG1 (g3 / go-02
                  :ARG0 (p4 / person
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 (i / i)
                              :ARG2 (g / girlfriend)))
                  :ARG1 (h / help-01
                        :ARG0 p4
                        :ARG1 (p5 / person
                              :ARG0-of (h5 / have-rel-role-91
                                    :ARG1 p4
                                    :ARG2 (m2 / mum)))))
            :ARG2 (h2 / hit-01
                  :ARG1 (h3 / head
                        :part-of p4)
                  :ARG2 (b / bottle
                        :consist-of (g2 / glass))
                  :mod (i2 / in-turn)))
      :snt2 (a / and
            :op1 (c2 / call-02
                  :ARG1 (p / police))
            :op2 (a2 / arrest-01
                  :ARG1 (p2 / prick))
            :ARG1-of (e / expect-01
                  :ARG0 (y / you)
                  :ARG1-of (p3 / possible-01))))



",DiGraph with 27 nodes and 26 edges,hit-01,in-turn,:mod,hit-01,in-turn,:mod,h2_13,h2_13,i2_18,i2_18,inanimate
1081,0,306,"(t / together
      :domain (w / we
            :time (a / always)
            :prep-in (g / group
                  :consist-of (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 w
                              :ARG2 (f / friend)))
                  :ARG1-of (s / same-01))
            :time (y / year
                  :ord (o / ordinal-entity :value 1))))



","[{'B_human': 'person'}, {'B_human': 'friend'}]","(t / together
      :domain (w / we
            :time (a / always)
            :prep-in (g / group
                  :consist-of (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 w
                              :ARG2 (f / friend)))
                  :ARG1-of (s / same-01))
            :time (y / year
                  :ord (o / ordinal-entity :value 1))))



",DiGraph with 12 nodes and 11 edges,group,person,:consist-of,group,person,:consist-of,g_3,g_3,p_4,p_4,animate
1082,0,307,"(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



","[{'B_human': 'girl'}, {'B_human': 'girl'}, {'B_human': 'a'}, {'PER': 'i'}]","(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



",DiGraph with 23 nodes and 22 edges,list,girl,:consist-of,list,girl,,l_15,l_15,g2_16,g_11,animate
1083,0,307,"(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



","[{'B_human': 'girl'}, {'B_human': 'girl'}, {'B_human': 'a'}, {'PER': 'i'}]","(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



",DiGraph with 23 nodes and 22 edges,come-across-15,probable,:mod,come-across-15,probable,:mod,c_3,c_3,p_10,p_10,inanimate
1084,0,307,"(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



","[{'B_human': 'girl'}, {'B_human': 'girl'}, {'B_human': 'a'}, {'PER': 'i'}]","(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



",DiGraph with 23 nodes and 22 edges,time,all,:mod,time,all,:mod,t2_8,t2_8,a2_9,a2_9,inanimate
1085,0,307,"(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



","[{'B_human': 'girl'}, {'B_human': 'girl'}, {'B_human': 'a'}, {'PER': 'i'}]","(o / opine-01
      :ARG0 (s / she)
      :ARG1 (a / and
            :op1 (c / come-across-15
                  :ARG1 (i / i)
                  :ARG2 (s2 / someone
                        :ARG0-of (d / do-02
                              :ARG1 (t / this)
                              :frequency (t2 / time
                                    :mod (a2 / all))))
                  :mod (p / probable))
            :op2 (g / girl :quant 1
                  :domain s
                  :ARG1-of (i2 / include-91
                        :ARG2 (l / list
                              :consist-of (g2 / girl
                                    :quant (m / multiple :op1 12)
                                    :accompanier-of (h / have-06
                                          :ARG0 i
                                          :ARG1 (o2 / one-night-stand)))))
                  :mod (j / just))))



",DiGraph with 23 nodes and 22 edges,girl,just,:mod,girl,just,:mod,g_11,g_11,j_22,j_22,inanimate
1086,0,308,"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / like-01
                  :ARG0 (i / i)
                  :ARG1 (i2 / idea
                        :mod (b / box
                              :ARG1-of (g / gloss-02))))
            :op2 (s / sign-up-03
                  :ARG0 i
                  :time (b2 / before
                        :op1 (n / now)
                        :quant (c2 / couple
                              :op1 (t / temporal-quantity :quant 1
                                    :unit (m2 / month))))))
      :snt2 (c / contrast-01
            :ARG2 (w / worry-02
                  :ARG0 i
                  :ARG1 (e / end-up-03
                        :ARG1 i
                        :ARG2 (l2 / load
                              :consist-of (s2 / stuff
                                    :ARG1-of (u / use-01 :polarity -
                                          :ARG0 i
                                          :manner (j / just))))))))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / like-01
                  :ARG0 (i / i)
                  :ARG1 (i2 / idea
                        :mod (b / box
                              :ARG1-of (g / gloss-02))))
            :op2 (s / sign-up-03
                  :ARG0 i
                  :time (b2 / before
                        :op1 (n / now)
                        :quant (c2 / couple
                              :op1 (t / temporal-quantity :quant 1
                                    :unit (m2 / month))))))
      :snt2 (c / contrast-01
            :ARG2 (w / worry-02
                  :ARG0 i
                  :ARG1 (e / end-up-03
                        :ARG1 i
                        :ARG2 (l2 / load
                              :consist-of (s2 / stuff
                                    :ARG1-of (u / use-01 :polarity -
                                          :ARG0 i
                                          :manner (j / just))))))))



",DiGraph with 26 nodes and 25 edges,load,stuff,:consist-of,load,stuff,:consist-of,l2_20,l2_20,s2_21,s2_21,inanimate
1087,0,308,"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / like-01
                  :ARG0 (i / i)
                  :ARG1 (i2 / idea
                        :mod (b / box
                              :ARG1-of (g / gloss-02))))
            :op2 (s / sign-up-03
                  :ARG0 i
                  :time (b2 / before
                        :op1 (n / now)
                        :quant (c2 / couple
                              :op1 (t / temporal-quantity :quant 1
                                    :unit (m2 / month))))))
      :snt2 (c / contrast-01
            :ARG2 (w / worry-02
                  :ARG0 i
                  :ARG1 (e / end-up-03
                        :ARG1 i
                        :ARG2 (l2 / load
                              :consist-of (s2 / stuff
                                    :ARG1-of (u / use-01 :polarity -
                                          :ARG0 i
                                          :manner (j / just))))))))



",[{'PER': 'i'}],"(m / multi-sentence
      :snt1 (a / and
            :op1 (l / like-01
                  :ARG0 (i / i)
                  :ARG1 (i2 / idea
                        :mod (b / box
                              :ARG1-of (g / gloss-02))))
            :op2 (s / sign-up-03
                  :ARG0 i
                  :time (b2 / before
                        :op1 (n / now)
                        :quant (c2 / couple
                              :op1 (t / temporal-quantity :quant 1
                                    :unit (m2 / month))))))
      :snt2 (c / contrast-01
            :ARG2 (w / worry-02
                  :ARG0 i
                  :ARG1 (e / end-up-03
                        :ARG1 i
                        :ARG2 (l2 / load
                              :consist-of (s2 / stuff
                                    :ARG1-of (u / use-01 :polarity -
                                          :ARG0 i
                                          :manner (j / just))))))))



",DiGraph with 26 nodes and 25 edges,idea,box,:mod,idea,box,:mod,i2_4,i2_4,b_5,b_5,inanimate
1088,0,309,"(c / contrast-01
      :ARG1 (w / want-01
            :ARG0 (i / i)
            :ARG1 (s / sign-up-03
                  :ARG1 i))
      :ARG2 (w2 / worry-02
            :ARG0 i
            :ARG1 (g / get-01
                  :ARG0 i
                  :ARG1 (l / load
                        :consist-of (r / rubbish))
                  :mod (t / too))))



",[{'PER': 'i'}],"(c / contrast-01
      :ARG1 (w / want-01
            :ARG0 (i / i)
            :ARG1 (s / sign-up-03
                  :ARG1 i))
      :ARG2 (w2 / worry-02
            :ARG0 i
            :ARG1 (g / get-01
                  :ARG0 i
                  :ARG1 (l / load
                        :consist-of (r / rubbish))
                  :mod (t / too))))



",DiGraph with 12 nodes and 11 edges,load,rubbish,:consist-of,load,rubbish,:consist-of,l_9,l_9,r_10,r_10,inanimate
1089,0,309,"(c / contrast-01
      :ARG1 (w / want-01
            :ARG0 (i / i)
            :ARG1 (s / sign-up-03
                  :ARG1 i))
      :ARG2 (w2 / worry-02
            :ARG0 i
            :ARG1 (g / get-01
                  :ARG0 i
                  :ARG1 (l / load
                        :consist-of (r / rubbish))
                  :mod (t / too))))



",[{'PER': 'i'}],"(c / contrast-01
      :ARG1 (w / want-01
            :ARG0 (i / i)
            :ARG1 (s / sign-up-03
                  :ARG1 i))
      :ARG2 (w2 / worry-02
            :ARG0 i
            :ARG1 (g / get-01
                  :ARG0 i
                  :ARG1 (l / load
                        :consist-of (r / rubbish))
                  :mod (t / too))))



",DiGraph with 12 nodes and 11 edges,get-01,too,:mod,get-01,too,:mod,g_7,g_7,t_11,t_11,inanimate
1090,0,310,"(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



","[{'MISC': 'The'}, {'MISC': 'Subtle'}, {'MISC': 'Knife'}, {'MISC': 'Philip'}, {'MISC': 'Pullman'}, {'PER': 'Philip'}, {'PER': 'P'}, {'ORG': 'ull'}, {'MISC': 'man'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



",DiGraph with 33 nodes and 32 edges,series,book,:consist-of,series,book,,s2_9,s2_9,b2_10,b_2,inanimate
1091,0,310,"(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



","[{'MISC': 'The'}, {'MISC': 'Subtle'}, {'MISC': 'Knife'}, {'MISC': 'Philip'}, {'MISC': 'Pullman'}, {'PER': 'Philip'}, {'PER': 'P'}, {'ORG': 'ull'}, {'MISC': 'man'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



",DiGraph with 33 nodes and 32 edges,call-01,well,:mod,call-01,well,:mod,c4_1,c4_1,w_16,w_16,inanimate
1092,0,310,"(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



","[{'MISC': 'The'}, {'MISC': 'Subtle'}, {'MISC': 'Knife'}, {'MISC': 'Philip'}, {'MISC': 'Pullman'}, {'PER': 'Philip'}, {'PER': 'P'}, {'ORG': 'ull'}, {'MISC': 'man'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



",DiGraph with 33 nodes and 32 edges,call-01,next,:mod,call-01,next,:mod,c4_1,c4_1,n_17,n_17,inanimate
1093,0,310,"(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



","[{'MISC': 'The'}, {'MISC': 'Subtle'}, {'MISC': 'Knife'}, {'MISC': 'Philip'}, {'MISC': 'Pullman'}, {'PER': 'Philip'}, {'PER': 'P'}, {'ORG': 'ull'}, {'MISC': 'man'}, {'PER': 'i'}, {'W_Inanimate': 'book'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (c4 / call-01
            :ARG1 (b / book :wiki ""The_Subtle_Knife"" :name (n2 / name :op1 ""The"" :op2 ""Subtle"" :op3 ""Knife""))
            :ARG1-of (i / include-91
                  :ARG2 (s2 / series
                        :consist-of (b2 / book
                              :source (p / person :wiki ""Philip_Pullman"" :name (n3 / name :op1 ""Philip"" :op2 ""Pullman"")))))
            :mod (w / well)
            :mod (n / next))
      :snt2 (g / guess-01
            :ARG0 (i2 / i)
            :ARG1 (m3 / make-01
                  :ARG0 (t / they)
                  :ARG1 (f / film)
                  :ARG2 b
                  :ARG1-of (i3 / instead-of-91
                        :ARG2 (c2 / call-01
                              :ARG0 t
                              :ARG1 f
                              :ARG2 (n4 / name :op1 ""The"" :op2 ""Golden"" :op3 ""Compass"" :op4 2))))))



",DiGraph with 33 nodes and 32 edges,book,person,:source,book,person,,b2_10,b_2,p_11,p_11,animate
1094,0,311,"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",[{'B_human': 'person'}],"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",DiGraph with 10 nodes and 9 edges,group,person,:consist-of,group,person,:consist-of,g_5,g_5,p_7,p_7,animate
1095,0,311,"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",[{'B_human': 'person'}],"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",DiGraph with 10 nodes and 9 edges,notion,this,:mod,notion,this,:mod,n_1,n_1,t_3,t_3,inanimate
1096,0,311,"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",[{'B_human': 'person'}],"(c / cause-01
      :ARG0 (n / notion
            :topic (q / qualify-02)
            :mod (t / this))
      :ARG1 (a / ally-01
            :ARG1 (g / group :quant 2
                  :consist-of (p / person))
            :mod (h / holy :polarity -)))



",DiGraph with 10 nodes and 9 edges,ally-01,holy,:mod,ally-01,holy,:mod,a_4,a_4,h_8,h_8,inanimate
1097,0,312,"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",[{'W_Inanimate': 'location'}],"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",DiGraph with 8 nodes and 7 edges,list,thing,:consist-of,list,thing,:consist-of,l_5,l_5,t_7,t_7,inanimate
1098,0,312,"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",[{'W_Inanimate': 'location'}],"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",DiGraph with 8 nodes and 7 edges,point,bullet,:mod,point,bullet,:mod,p_2,p_2,b_3,b_3,inanimate
1099,0,312,"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",[{'W_Inanimate': 'location'}],"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",DiGraph with 8 nodes and 7 edges,point,another,:mod,point,another,:mod,p_2,p_2,a2_4,a2_4,inanimate
1100,0,312,"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",[{'W_Inanimate': 'location'}],"(d / do-02 :polarity -
      :ARG0 (a / atheist)
      :ARG1 (p / point
            :mod (b / bullet)
            :mod (a2 / another)
            :location (l / list
                  :mod (b2 / big)
                  :consist-of (t / thing))))



",DiGraph with 8 nodes and 7 edges,list,big,:mod,list,big,:mod,l_5,l_5,b2_6,b2_6,inanimate
1101,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,group,person,:consist-of,group,person,:consist-of,g_6,g_6,p2_8,p2_8,animate
1102,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,fill-01,and,:condition,fill-01,and,:condition,f_0,f_0,a2_12,a2_12,inanimate
1103,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,comment-01,derogative,:mod,comment-01,derogative,:mod,c_5,c_5,d_9,d_9,inanimate
1104,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,group,entire,:mod,group,entire,:mod,g_6,g_6,e_7,e_7,inanimate
1105,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,and,this,:mod,and,this,:mod,a2_12,a2_12,t_15,t_15,inanimate
1106,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,person,world-region,:mod,person,world-region,,p4_18,p2_8,w_19,w_19,inanimate
1107,0,313,"(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



","[{'LOC': 'South_Asia'}, {'LOC': 'South'}, {'LOC': 'Asia'}, {'MISC': 'Muslim'}, {'MISC': 'Muslim'}, {'PER': 'God'}, {'PER': 'God'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(f / fill-01
      :ARG1 (f2 / forum)
      :ARG2 (r / rhetoric
            :location-of (p / possible-01
                  :ARG1 (a / accept-01
                        :ARG1 (c / comment-01
                              :ARG3 (g / group
                                    :mod (e / entire)
                                    :consist-of (p2 / person))
                              :mod (d / derogative))))
            :ARG0-of (o2 / oppose-01
                  :ARG1 (m / multiculturalism)))
      :condition (a2 / and
            :op1 (r2 / riot-01)
            :op2 (l / loot-01)
            :mod (t / this)
            :quant (l2 / lot)
            :domain (o / or
                  :op1 (p4 / person
                        :mod (w / world-region :wiki ""South_Asia"" :name (n / name :op1 ""South"" :op2 ""Asia"")))
                  :op2 (p3 / person
                        :mod (r3 / religious-group :wiki ""Muslim"" :name (n2 / name :op1 ""Muslim""))
                        :ARG1-of (f3 / forbid-01 :mode expressive
                              :ARG0 (p5 / person :wiki ""God"" :name (n4 / name :op1 ""God"")))))
            :time (n3 / now)))



",DiGraph with 36 nodes and 35 edges,person,religious-group,:mod,person,religious-group,,p3_24,p2_8,r3_25,r3_25,inanimate
1108,0,314,"(m / multi-sentence
      :snt1 (e / edit-01)
      :snt2 (t / throw-01
            :ARG0 (p / person)
            :ARG1 (b / bomb
                  :consist-of (p2 / petrol))
            :ARG2 (c / car
                  :ARG1-of (p3 / pass-03
                        :location (r / road :wiki ""A10_road_(England)"" :name (n / name :op1 ""A10""))))
            :location (b2 / bridge)
            :time (b3 / before)))



","[{'LOC': 'England'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'road'}, {'W_Inanimate': 'location'}]","(m / multi-sentence
      :snt1 (e / edit-01)
      :snt2 (t / throw-01
            :ARG0 (p / person)
            :ARG1 (b / bomb
                  :consist-of (p2 / petrol))
            :ARG2 (c / car
                  :ARG1-of (p3 / pass-03
                        :location (r / road :wiki ""A10_road_(England)"" :name (n / name :op1 ""A10""))))
            :location (b2 / bridge)
            :time (b3 / before)))



",DiGraph with 14 nodes and 13 edges,bomb,petrol,:consist-of,bomb,petrol,:consist-of,b_4,b_4,p2_5,p2_5,inanimate
1109,0,315,"(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



","[{'ORG': 'House'}, {'ORG': 'of'}, {'ORG': 'Lords'}, {'ORG': 'House'}, {'B_human': 'Lords'}, {'B_human': 'lord'}, {'PER': 'i'}]","(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



",DiGraph with 21 nodes and 20 edges,country,lord,:consist-of,country,lord,:consist-of,c2_10,c2_10,l_11,l_11,animate
1110,0,315,"(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



","[{'ORG': 'House'}, {'ORG': 'of'}, {'ORG': 'Lords'}, {'ORG': 'House'}, {'B_human': 'Lords'}, {'B_human': 'lord'}, {'PER': 'i'}]","(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



",DiGraph with 21 nodes and 20 edges,age,middle,:mod,age,middle,:mod,a2_17,a2_17,m2_18,m2_18,inanimate
1111,0,315,"(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



","[{'ORG': 'House'}, {'ORG': 'of'}, {'ORG': 'Lords'}, {'ORG': 'House'}, {'B_human': 'Lords'}, {'B_human': 'lord'}, {'PER': 'i'}]","(c / contrast-01
      :ARG2 (a / and
            :op1 (g / government-organization :wiki ""House_of_Lords""
                  :name (n / name :op1 ""House"" :op2 ""of"" :op3 ""Lords""))
            :op2 (f / feel-05
                  :ARG1 (i / it)
                  :ARG2 (c2 / country
                        :consist-of (l / lord))
                  :degree (p / pretty-much))
            :op3 (r / resemble-01
                  :ARG1 (s / stick-01
                        :ARG1 (w / we)
                        :ARG2 (t / tradition
                              :source (a2 / age
                                    :mod (m2 / middle))
                              :quant (s2 / some))
                        :time (s3 / still)))))



",DiGraph with 21 nodes and 20 edges,tradition,age,:source,tradition,age,:source,t_16,t_16,a2_17,a2_17,inanimate
1112,0,316,"(c / chamber
      :consist-of (p / person
            :ARG1-of (e / expert-01))
      :ARG0-of (f / function-01
            :ARG1 (c2 / capacity
                  :mod (a / advise-01
                        :degree (l / large))))
      :li 2)



","[{'B_human': 'person'}, {'B_human': 'expert'}]","(c / chamber
      :consist-of (p / person
            :ARG1-of (e / expert-01))
      :ARG0-of (f / function-01
            :ARG1 (c2 / capacity
                  :mod (a / advise-01
                        :degree (l / large))))
      :li 2)



",DiGraph with 8 nodes and 7 edges,chamber,person,:consist-of,chamber,person,:consist-of,c_0,c_0,p_1,p_1,animate
1113,0,316,"(c / chamber
      :consist-of (p / person
            :ARG1-of (e / expert-01))
      :ARG0-of (f / function-01
            :ARG1 (c2 / capacity
                  :mod (a / advise-01
                        :degree (l / large))))
      :li 2)



","[{'B_human': 'person'}, {'B_human': 'expert'}]","(c / chamber
      :consist-of (p / person
            :ARG1-of (e / expert-01))
      :ARG0-of (f / function-01
            :ARG1 (c2 / capacity
                  :mod (a / advise-01
                        :degree (l / large))))
      :li 2)



",DiGraph with 8 nodes and 7 edges,capacity,advise-01,:mod,capacity,advise-01,:mod,c2_4,c2_4,a_5,a_5,inanimate
1114,0,317,"(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



","[{'ORG': 'Clan'}, {'ORG': 'Anderson'}, {'PER': 'Anderson'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'mother'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



",DiGraph with 33 nodes and 32 edges,history,ancestry,:consist-of,history,ancestry,:consist-of,h3_11,h3_11,a_13,a_13,inanimate
1115,0,317,"(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



","[{'ORG': 'Clan'}, {'ORG': 'Anderson'}, {'PER': 'Anderson'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'mother'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



",DiGraph with 33 nodes and 32 edges,have-03,then,:mod,have-concession-91,then,,h2_1,h_0,t_18,t_18,inanimate
1116,0,317,"(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



","[{'ORG': 'Clan'}, {'ORG': 'Anderson'}, {'PER': 'Anderson'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'mother'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



",DiGraph with 33 nodes and 32 edges,person,family,:mod,person,family,:mod,p2_3,p2_3,f_4,f_4,inanimate
1117,0,317,"(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



","[{'ORG': 'Clan'}, {'ORG': 'Anderson'}, {'PER': 'Anderson'}, {'LOC': 'Scotland'}, {'LOC': 'Scotland'}, {'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'mother'}, {'B_human': 'person'}, {'B_human': 'parent'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(h / have-concession-91
      :ARG1 (h2 / have-03
            :ARG0 (s / side
                  :poss (p2 / person
                        :mod (f / family :wiki ""Clan_Anderson"" :name (n2 / name :op1 ""Anderson""))
                        :ARG0-of (h4 / have-rel-role-91
                              :ARG1 i
                              :ARG2 (m / mother))))
            :ARG1 (h3 / history
                  :ARG1-of (l / long-03)
                  :consist-of (a / ancestry
                        :mod (c2 / country :wiki ""Scotland"" :name (n3 / name :op1 ""Scotland""))))
            :mod (t / then))
      :ARG2 (b / bear-02
            :ARG0 (p / person
                  :ARG1-of (b2 / bear-02
                        :location (c / country :wiki ""England"" :name (n / name :op1 ""England"")))
                  :ARG1-of (r / raise-03
                        :location c)
                  :ARG0-of (h5 / have-rel-role-91
                        :ARG1 i
                        :ARG2 (p3 / parent)))
            :ARG1 (i / i)
            :location c2))



",DiGraph with 33 nodes and 32 edges,ancestry,country,:mod,ancestry,country,:mod,a_13,a_13,c2_14,c2_14,inanimate
1118,0,318,"(m / multi-sentence
      :snt1 (m2 / monetary-quantity :quant 4
            :unit (p / pound)
            :prep-for (p2 / packet
                  :consist-of (b / butter)))
      :snt2 (a / anyone :polarity (a2 / amr-unknown)))



",[],"(m / multi-sentence
      :snt1 (m2 / monetary-quantity :quant 4
            :unit (p / pound)
            :prep-for (p2 / packet
                  :consist-of (b / butter)))
      :snt2 (a / anyone :polarity (a2 / amr-unknown)))



",DiGraph with 8 nodes and 7 edges,packet,butter,:consist-of,packet,butter,:consist-of,p2_4,p2_4,b_5,b_5,inanimate
1119,0,319,"(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



",DiGraph with 14 nodes and 13 edges,ghetto,person,:consist-of,ghetto,person,:consist-of,g2_3,g2_3,p_5,p_5,animate
1120,0,319,"(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



",DiGraph with 14 nodes and 13 edges,get-01,most,:mod,get-01,most,:mod,g_0,g_0,m_13,m_13,inanimate
1121,0,319,"(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(g / get-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (g2 / ghetto
                  :ARG2-of (c / concentrate-01)
                  :consist-of (p / person
                        :ARG1-of (b / black-05)))
            :op2 (s / state
                  :mod (e / entire)
                  :ARG1-of (f / full-09
                        :ARG2 (p2 / person
                              :ARG1-of (w / white-02)))
                  :time (t / then)))
      :mod (m / most))



",DiGraph with 14 nodes and 13 edges,state,entire,:mod,state,entire,:mod,s_7,s_7,e_8,e_8,inanimate
1122,0,320,"(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



","[{'LOC': 'United_Kingdom'}, {'MISC': 'Great'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



",DiGraph with 29 nodes and 28 edges,population,person,:consist-of,population,person,:consist-of,p_13,p_13,p2_14,p2_14,animate
1123,0,320,"(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



","[{'LOC': 'United_Kingdom'}, {'MISC': 'Great'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



",DiGraph with 29 nodes and 28 edges,person,only,:mod,person,only,:mod,p2_14,p2_14,o_26,o_26,inanimate
1124,0,320,"(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



","[{'LOC': 'United_Kingdom'}, {'MISC': 'Great'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



",DiGraph with 29 nodes and 28 edges,country,other,:mod,country,other,,c3_23,c2_2,o2_24,o2_24,inanimate
1125,0,320,"(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



","[{'LOC': 'United_Kingdom'}, {'MISC': 'Great'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op1 (c / control-01
            :ARG0 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""Great"" :op2 ""Britain""))
            :ARG1 (l / little
                  :degree (v / very))
            :topic (t / territory
                  :location (o3 / overseas)))
      :op2 (h / have-03
            :ARG0 c2
            :ARG1 (p / population
                  :consist-of (p2 / person :quant 58000000
                        :ARG0-of (r3 / reside-01)
                        :ARG2-of (i / include-91
                              :ARG1 (p3 / person
                                    :ARG0-of (r2 / reside-01)
                                    :ARG0-of (m / move-01
                                          :ARG1 (p4 / person)
                                          :ARG2 c2
                                          :source (c3 / country
                                                :mod (o2 / other)))
                                    :quant (m2 / many)))
                        :mod (o / only))))
      :time (d / date-entity :year 2008))



",DiGraph with 29 nodes and 28 edges,move-01,country,:source,move-01,country,,m_20,m_20,c3_23,c2_2,inanimate
1126,0,321,"(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



","[{'LOC': 'Tripoli'}, {'LOC': 'Tripoli'}, {'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



",DiGraph with 36 nodes and 35 edges,army,troop,:consist-of,army,troop,:consist-of,a2_4,a2_4,t_5,t_5,inanimate
1127,0,321,"(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



","[{'LOC': 'Tripoli'}, {'LOC': 'Tripoli'}, {'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



",DiGraph with 36 nodes and 35 edges,revenue,oil,:mod,revenue,oil,:mod,r2_19,r2_19,o_20,o_20,inanimate
1128,0,321,"(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



","[{'LOC': 'Tripoli'}, {'LOC': 'Tripoli'}, {'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



",DiGraph with 36 nodes and 35 edges,oil,country,:mod,oil,country,:mod,o_20,o_20,c2_21,c2_21,inanimate
1129,0,321,"(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



","[{'LOC': 'Tripoli'}, {'LOC': 'Tripoli'}, {'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



",DiGraph with 36 nodes and 35 edges,revenue,o,:mod,revenue,o,,r_26,r2_19,o_27,o_27,inanimate
1130,0,321,"(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



","[{'LOC': 'Tripoli'}, {'LOC': 'Tripoli'}, {'LOC': 'Libya'}, {'LOC': 'Libya'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(r3 / return-05
      :ARG0 w
      :ARG1 (s / send-02
            :ARG0 (w / we)
            :ARG1 (a2 / army
                  :consist-of (t / troop :quant 100000))
            :ARG2 (t2 / take-01
                  :ARG0 a2
                  :ARG1 (c / city :wiki ""Tripoli"" :name (n / name :op1 ""Tripoli""))))
      :ARG2 t3
      :ARG3 (p / provide-01
            :ARG0 (t3 / they)
            :ARG1 (p2 / promise-01
                  :ARG0 t3
                  :ARG2 (f / fee
                        :example (r2 / revenue
                              :mod (o / oil
                                    :mod (c2 / country :wiki ""Libya"" :name (n2 / name :op1 ""Libya"")))
                              :ARG1-of (i / include-91
                                    :ARG2 (r / revenue
                                          :mod o
                                          :mod (a3 / all))
                                    :ARG3 (p3 / percentage-entity :value 30
                                          :time (a / after
                                                :op1 (n3 / now)
                                                :quant (t4 / temporal-quantity :quant 15
                                                      :unit (y / year))))))))))



",DiGraph with 36 nodes and 35 edges,revenue,all,:mod,revenue,all,,r_26,r2_19,a3_28,a3_28,inanimate
1131,0,322,"(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



","[{'PER': 'David'}, {'PER': 'Cameron'}, {'PER': 'Dave'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'man'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



",DiGraph with 45 nodes and 44 edges,group,person,:consist-of,group,person,,g_25,g_25,p3_26,p2_10,animate
1132,0,322,"(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



","[{'PER': 'David'}, {'PER': 'Cameron'}, {'PER': 'Dave'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'man'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



",DiGraph with 45 nodes and 44 edges,and,and,:condition,and,and,,a3_22,a2_13,a6_36,a2_13,inanimate
1133,0,322,"(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



","[{'PER': 'David'}, {'PER': 'Cameron'}, {'PER': 'Dave'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'man'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



",DiGraph with 45 nodes and 44 edges,day,other,:mod,day,other,:mod,d3_20,d3_20,o_21,o_21,inanimate
1134,0,322,"(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



","[{'PER': 'David'}, {'PER': 'Cameron'}, {'PER': 'Dave'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'man'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



",DiGraph with 45 nodes and 44 edges,group,another,:mod,group,another,:mod,g_25,g_25,a5_27,a5_27,inanimate
1135,0,322,"(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



","[{'PER': 'David'}, {'PER': 'Cameron'}, {'PER': 'Dave'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'man'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(t / take-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (d / debate-01
            :medium (t2 / television))
      :purpose (e / exemplify-01
            :ARG0 (c / contrast-01
                  :ARG1 (h / hate-01
                        :ARG0 (e2 / everyone)
                        :ARG1 (a / act-01
                              :ARG0 (p2 / person :wiki ""David_Cameron"" :name (n / name :op1 ""Dave""))
                              :ARG1 (a2 / and
                                    :op1 (d2 / down-01
                                          :ARG1 (p / person))
                                    :op2 (m / meet-02
                                          :ARG0 (i / i)
                                          :ARG1 (m2 / man
                                                :ARG1-of (b / black-05))
                                          :time (d3 / day
                                                :mod (o / other))))))
                  :ARG2 (a3 / and
                        :op1 (a4 / aggravate-01
                              :ARG0 p2
                              :ARG1 (g / group
                                    :consist-of (p3 / person)
                                    :mod (a5 / another)))
                        :op2 (c2 / call-01
                              :ARG1 p2
                              :ARG2 (t3 / toff)
                              :ARG1-of (h2 / have-quant-91
                                    :ARG3 (m3 / more
                                          :mod (e3 / even))))
                        :time (t4 / time
                              :ARG1-of (s / same-01))
                        :condition (a6 / and
                              :op1 (r / remain-01
                                    :ARG1 p2
                                    :ARG2 (a7 / aloof))
                              :op2 (f / fail-01
                                    :ARG1 p2
                                    :ARG2 (e4 / engage-01
                                          :ARG0 p2
                                          :ARG2 (a8 / anyone))))))))



",DiGraph with 45 nodes and 44 edges,more,even,:mod,more,even,:mod,m3_32,m3_32,e3_33,e3_33,inanimate
1136,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,cringe-01,cause-01,:ARG1-of,cringe-01,cause-01,cause-01,c_0,c2_2,c2_2,c_0,inanimate
1137,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,cluster,bomb,:consist-of,cluster,bomb,:consist-of,c5_19,c5_19,b_20,b_20,inanimate
1138,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,cringe-01,cause-01,:ARG1-of,cringe-01,cause-01,cause-01,c_0,c2_2,c2_2,c_0,inanimate
1139,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,person,country,:mod,person,country,:mod,p_8,p_8,c4_9,c4_9,inanimate
1140,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,fund-01,yet,:mod,fund-01,yet,,f2_13,f_7,y_15,y_15,inanimate
1141,0,323,"(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'Britain'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(c / cringe-01
      :ARG0 (i / i)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (c3 / cut-02
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 (f / fund-01
                              :ARG1 (p / person
                                    :mod (c4 / country :wiki ""United_Kingdom""
                                          :name (n / name :op1 ""Britain"")))))
                  :op2 (f2 / fund-01
                        :ARG1 (m / military)
                        :mod (y / yet)
                        :manner (s / somehow)
                        :purpose (r / rain-01
                              :ARG0 m
                              :ARG1 (c5 / cluster
                                    :consist-of (b / bomb))
                              :ARG2 (p2 / person
                                    :mod (f3 / foreign)))))))



",DiGraph with 23 nodes and 22 edges,person,foreign,:mod,person,foreign,,p2_21,p_8,f3_22,f3_22,inanimate
1142,0,324,"(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (t / they)
            :ARG1 (r / resemble-01
                  :ARG1 (t6 / this)
                  :ARG2 (d / dust
                        :consist-of (g / gold)
                        :beneficiary (a / and
                              :op1 (c / country :wiki ""Israel"" :name (n / name :op1 ""Israel""))
                              :op2 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")))
                        :ARG1-of (m2 / mean-01
                              :ARG2 (t5 / thing
                                    :ARG1-of (t4 / target-01
                                          :ARG2 (a2 / assassinate-01))))))
            :manner (w / well
                  :degree (v / very)))
      :snt2 (h / have-polarity-91
            :ARG1 (p / partial-01 :polarity -)
            :ARG2 (a3 / amr-unknown)))



","[{'LOC': 'Israel'}, {'LOC': 'Israel'}, {'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'ben'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (k / know-01
            :ARG0 (t / they)
            :ARG1 (r / resemble-01
                  :ARG1 (t6 / this)
                  :ARG2 (d / dust
                        :consist-of (g / gold)
                        :beneficiary (a / and
                              :op1 (c / country :wiki ""Israel"" :name (n / name :op1 ""Israel""))
                              :op2 (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America"")))
                        :ARG1-of (m2 / mean-01
                              :ARG2 (t5 / thing
                                    :ARG1-of (t4 / target-01
                                          :ARG2 (a2 / assassinate-01))))))
            :manner (w / well
                  :degree (v / very)))
      :snt2 (h / have-polarity-91
            :ARG1 (p / partial-01 :polarity -)
            :ARG2 (a3 / amr-unknown)))



",DiGraph with 26 nodes and 25 edges,dust,gold,:consist-of,dust,gold,:consist-of,d_5,d_5,g_6,g_6,inanimate
1143,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,kill-01,cause-01,:ARG0-of,kill-01,cause-01,cause-01,k_1,c_6,c_6,k_1,animate
1144,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,clique,and,:consist-of,clique,and,,c5_19,c5_19,a2_20,a_0,inanimate
1145,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,kill-01,cause-01,:ARG0-of,kill-01,cause-01,cause-01,k_1,c_6,c_6,k_1,animate
1146,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,have-03,yet,:mod,have-quant-91,yet,,h_17,h4_3,y_29,y_29,inanimate
1147,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,crook,mafia,:mod,crook,mafia,:mod,c6_22,c6_22,m2_23,m2_23,inanimate
1148,0,325,"(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



","[{'ORG': 'United_Nations'}, {'ORG': 'UN'}, {'LOC': 'Moscow'}, {'LOC': 'Moscow'}, {'B_human': 'casual'}, {'B_human': 'c'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(a / and
      :op1 (k / kill-01
            :ARG1 (p / person
                  :ARG1-of (h4 / have-quant-91
                        :ARG2 (m / many)
                        :ARG3 (s / so)))
            :ARG0-of (c / cause-01
                  :ARG1 (g / give-up-07
                        :ARG0 (o / organization :wiki ""United_Nations"" :name (n / name :op1 ""UN""))
                        :ARG1 (t / try-01
                              :ARG0 o
                              :ARG1 (c3 / count-01
                                    :ARG0 o
                                    :ARG1 (c4 / casualty))))))
      :op2 (h / have-03
            :ARG0 (w / we)
            :ARG1 (c5 / clique
                  :consist-of (a2 / and
                        :op1 (b / barbarian)
                        :op2 (c6 / crook
                              :mod (m2 / mafia))
                        :ARG0-of (h2 / hold-01
                              :ARG1 (w2 / world)
                              :ARG3 (h3 / hostage
                                    :topic (i / issue-02
                                          :mod (t2 / this))))))
            :mod (y / yet)
            :location (c7 / city :wiki ""Moscow"" :name (n2 / name :op1 ""Moscow""))))



",DiGraph with 34 nodes and 33 edges,issue-02,this,:mod,issue-02,this,:mod,i_27,i_27,t2_28,t2_28,inanimate
1149,0,326,"(p / possible-01
      :ARG1 (h2 / have-03
            :ARG0 (c / country
                  :ARG1-of (r / resemble-01
                        :ARG2 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""USA"")))
                  :ARG1-of (l / liberal-02
                        :ARG2-of (r2 / relative-05))
                  :ARG0-of (t / tolerate-01
                        :degree r2))
            :ARG1 (p2 / political-party
                  :consist-of (e / extremist)
                  :ARG1-of (p3 / powerful-02
                        :degree (s / such))))
      :manner (a / amr-unknown))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'B_human': 'ex'}, {'W_Inanimate': 'country'}]","(p / possible-01
      :ARG1 (h2 / have-03
            :ARG0 (c / country
                  :ARG1-of (r / resemble-01
                        :ARG2 (c2 / country :wiki ""United_States"" :name (n / name :op1 ""USA"")))
                  :ARG1-of (l / liberal-02
                        :ARG2-of (r2 / relative-05))
                  :ARG0-of (t / tolerate-01
                        :degree r2))
            :ARG1 (p2 / political-party
                  :consist-of (e / extremist)
                  :ARG1-of (p3 / powerful-02
                        :degree (s / such))))
      :manner (a / amr-unknown))



",DiGraph with 17 nodes and 16 edges,political-party,extremist,:consist-of,political-party,extremist,:consist-of,p2_12,p2_12,e_13,e_13,inanimate
1150,0,327,"(r / represent-01 :polarity -
      :ARG0 (p2 / person
            :ARG1-of (i / involve-01
                  :ARG2 (p3 / politics)
                  :degree (g / go-02
                        :ARG0 p2
                        :ARG1 (d / debate))))
      :ARG1 (m / majority
            :consist-of (p / person)
            :location (o / over
                  :op1 (t / there)))
      :ARG2-of (t2 / thankful-02))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}]","(r / represent-01 :polarity -
      :ARG0 (p2 / person
            :ARG1-of (i / involve-01
                  :ARG2 (p3 / politics)
                  :degree (g / go-02
                        :ARG0 p2
                        :ARG1 (d / debate))))
      :ARG1 (m / majority
            :consist-of (p / person)
            :location (o / over
                  :op1 (t / there)))
      :ARG2-of (t2 / thankful-02))



",DiGraph with 12 nodes and 11 edges,majority,person,:consist-of,majority,person,,m_7,m_7,p_8,p2_1,animate
1151,0,328,"(a / allow-01 :polarity -
      :ARG0 (t / they)
      :ARG1 (s / suffer-01
            :ARG0 (g / generation
                  :consist-of (p / person
                        :mod (c / country :wiki ""Iraq""
                              :name (n / name :op1 ""Iraq""))))
            :ARG1 (a2 / and
                  :op1 (m / mutate-01
                        :ARG1 p)
                  :op2 (d / deform-01
                        :ARG1 p)
                  :ARG1-of (r / resemble-01
                        :ARG2 (t2 / this))))
      :time (e / ever))



","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(a / allow-01 :polarity -
      :ARG0 (t / they)
      :ARG1 (s / suffer-01
            :ARG0 (g / generation
                  :consist-of (p / person
                        :mod (c / country :wiki ""Iraq""
                              :name (n / name :op1 ""Iraq""))))
            :ARG1 (a2 / and
                  :op1 (m / mutate-01
                        :ARG1 p)
                  :op2 (d / deform-01
                        :ARG1 p)
                  :ARG1-of (r / resemble-01
                        :ARG2 (t2 / this))))
      :time (e / ever))



",DiGraph with 17 nodes and 16 edges,generation,person,:consist-of,generation,person,:consist-of,g_4,g_4,p_5,p_5,animate
1152,0,328,"(a / allow-01 :polarity -
      :ARG0 (t / they)
      :ARG1 (s / suffer-01
            :ARG0 (g / generation
                  :consist-of (p / person
                        :mod (c / country :wiki ""Iraq""
                              :name (n / name :op1 ""Iraq""))))
            :ARG1 (a2 / and
                  :op1 (m / mutate-01
                        :ARG1 p)
                  :op2 (d / deform-01
                        :ARG1 p)
                  :ARG1-of (r / resemble-01
                        :ARG2 (t2 / this))))
      :time (e / ever))



","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}]","(a / allow-01 :polarity -
      :ARG0 (t / they)
      :ARG1 (s / suffer-01
            :ARG0 (g / generation
                  :consist-of (p / person
                        :mod (c / country :wiki ""Iraq""
                              :name (n / name :op1 ""Iraq""))))
            :ARG1 (a2 / and
                  :op1 (m / mutate-01
                        :ARG1 p)
                  :op2 (d / deform-01
                        :ARG1 p)
                  :ARG1-of (r / resemble-01
                        :ARG2 (t2 / this))))
      :time (e / ever))



",DiGraph with 17 nodes and 16 edges,person,country,:mod,person,country,:mod,p_5,p_5,c_6,c_6,inanimate
1153,0,329,"(a / and
      :op1 (d / disgust-01
            :ARG0 (t / that))
      :op2 (h / hope-01
            :ARG0 (i / i)
            :ARG1 (m / make-02
                  :ARG1 (s / suffer-01
                        :ARG0 (p / person
                              :ARG0-of (p2 / perpetrate-01))
                        :ARG1 (t3 / thing
                              :ARG1-of (s2 / suffer-01
                                    :ARG0 (g / generation
                                          :consist-of (p3 / person
                                                :mod (c / country :wiki ""Iraq""
                                                      :name (n2 / name :op1 ""Iraq"")))))
                              :ARG2-of (e / endure-01
                                    :ARG1 g
                                    :time (e2 / ever))
                              :ARG2-of (e3 / endure-01
                                    :ARG1 g
                                    :time (a2 / already)))))))



","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (d / disgust-01
            :ARG0 (t / that))
      :op2 (h / hope-01
            :ARG0 (i / i)
            :ARG1 (m / make-02
                  :ARG1 (s / suffer-01
                        :ARG0 (p / person
                              :ARG0-of (p2 / perpetrate-01))
                        :ARG1 (t3 / thing
                              :ARG1-of (s2 / suffer-01
                                    :ARG0 (g / generation
                                          :consist-of (p3 / person
                                                :mod (c / country :wiki ""Iraq""
                                                      :name (n2 / name :op1 ""Iraq"")))))
                              :ARG2-of (e / endure-01
                                    :ARG1 g
                                    :time (e2 / ever))
                              :ARG2-of (e3 / endure-01
                                    :ARG1 g
                                    :time (a2 / already)))))))



",DiGraph with 23 nodes and 22 edges,generation,person,:consist-of,generation,person,,g_11,g_11,p3_12,p_7,animate
1154,0,329,"(a / and
      :op1 (d / disgust-01
            :ARG0 (t / that))
      :op2 (h / hope-01
            :ARG0 (i / i)
            :ARG1 (m / make-02
                  :ARG1 (s / suffer-01
                        :ARG0 (p / person
                              :ARG0-of (p2 / perpetrate-01))
                        :ARG1 (t3 / thing
                              :ARG1-of (s2 / suffer-01
                                    :ARG0 (g / generation
                                          :consist-of (p3 / person
                                                :mod (c / country :wiki ""Iraq""
                                                      :name (n2 / name :op1 ""Iraq"")))))
                              :ARG2-of (e / endure-01
                                    :ARG1 g
                                    :time (e2 / ever))
                              :ARG2-of (e3 / endure-01
                                    :ARG1 g
                                    :time (a2 / already)))))))



","[{'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (d / disgust-01
            :ARG0 (t / that))
      :op2 (h / hope-01
            :ARG0 (i / i)
            :ARG1 (m / make-02
                  :ARG1 (s / suffer-01
                        :ARG0 (p / person
                              :ARG0-of (p2 / perpetrate-01))
                        :ARG1 (t3 / thing
                              :ARG1-of (s2 / suffer-01
                                    :ARG0 (g / generation
                                          :consist-of (p3 / person
                                                :mod (c / country :wiki ""Iraq""
                                                      :name (n2 / name :op1 ""Iraq"")))))
                              :ARG2-of (e / endure-01
                                    :ARG1 g
                                    :time (e2 / ever))
                              :ARG2-of (e3 / endure-01
                                    :ARG1 g
                                    :time (a2 / already)))))))



",DiGraph with 23 nodes and 22 edges,person,country,:mod,person,country,,p3_12,p_7,c_13,c_13,inanimate
1155,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,population,person,:consist-of,population,person,:consist-of,p_5,p_5,p2_7,p2_7,animate
1156,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,influx,person,:consist-of,influx,person,,i2_13,i2_13,p3_14,p2_7,animate
1157,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,population,huge,:mod,population,huge,:mod,p_5,p_5,h3_6,h3_6,inanimate
1158,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,religious-group,:mod,person,religious-group,,p2_7,p2_7,r2_28,r3_21,inanimate
1159,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,influx,large,:mod,influx,large,:mod,i2_13,i2_13,l2_25,l2_25,inanimate
1160,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,continent,:mod,person,continent,,p3_14,p2_7,c_16,c_16,inanimate
1161,0,330,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,religious-group,:mod,person,religious-group,,p3_14,p2_7,r3_21,r3_21,inanimate
1162,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,population,person,:consist-of,population,person,:consist-of,p_5,p_5,p2_7,p2_7,animate
1163,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,influx,person,:consist-of,influx,person,,i2_13,i2_13,p3_14,p2_7,animate
1164,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,population,huge,:mod,population,huge,:mod,p_5,p_5,h3_6,h3_6,inanimate
1165,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,religious-group,:mod,person,religious-group,,p2_7,p2_7,r2_28,r3_21,inanimate
1166,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,influx,large,:mod,influx,large,:mod,i2_13,i2_13,l2_25,l2_25,inanimate
1167,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,continent,:mod,person,continent,,p3_14,p2_7,c_16,c_16,inanimate
1168,0,331,"(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



","[{'LOC': 'California'}, {'LOC': 'California'}, {'LOC': 'South_America'}, {'LOC': 'South'}, {'LOC': 'America'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholic'}, {'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Roman'}, {'MISC': 'Catholic'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'state'}, {'W_Inanimate': 'continent'}]","(h / have-03
      :ARG0 (s / state :wiki ""California""
            :name (n / name :op1 ""California""))
      :ARG1 (p / population
            :mod (h3 / huge)
            :consist-of (p2 / person
                  :ARG0-of (r / reject-01
                        :ARG1 (i / it)
                        :ARG1-of (h2 / help-01 :polarity -
                              :ARG0 (a / arrive-01
                                    :ARG1 (i2 / influx
                                          :consist-of (p3 / person
                                                :ARG0-of (m / migrate-01)
                                                :mod (c / continent :wiki ""South_America""
                                                      :name (n4 / name :op1 ""South"" :op2 ""America""))
                                                :mod (r3 / religious-group :wiki ""Catholic_Church""
                                                      :name (n2 / name :op1 ""Catholic"")))
                                          :mod (l2 / large))
                                    :ARG4 s))
                        :ARG1-of (o / obvious-01))
                  :mod (r2 / religious-group :wiki ""Catholic_Church""
                        :name (n5 / name :op1 ""Roman"" :op2 ""Catholic"")))))



",DiGraph with 33 nodes and 32 edges,person,religious-group,:mod,person,religious-group,,p3_14,p2_7,r3_21,r3_21,inanimate
1169,0,332,"(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



",DiGraph with 13 nodes and 12 edges,do-02,cause-01,:ARG1-of,do-02,cause-01,cause-01,d_6,c2_7,c2_7,d_6,inanimate
1170,0,332,"(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



",DiGraph with 13 nodes and 12 edges,community,person,:consist-of,community,person,,c4_10,c3_8,p2_11,p2_11,animate
1171,0,332,"(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



","[{'B_human': 'person'}, {'PER': 'i'}]","(c / concern-02 :polarity -
      :ARG0 (i / it)
      :ARG1 (o / or
            :op1 (r / recommend-01
                  :ARG1 d)
            :op2 (p / purpose
                  :purpose-of (d / do-02
                        :ARG1-of (c2 / cause-01
                              :ARG0 (c3 / community
                                    :extent (s / semi)
                                    :domain (c4 / community
                                          :consist-of (p2 / person
                                                :ARG1-of (b / black-05)))))))))



",DiGraph with 13 nodes and 12 edges,do-02,cause-01,:ARG1-of,do-02,cause-01,cause-01,d_6,c2_7,c2_7,d_6,inanimate
1172,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,issue-02,cause-01,:ARG1-of,issue-02,cause-01,cause-01,i_0,c2_19,c2_19,i_0,inanimate
1173,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,ceiling,glass,:consist-of,ceiling,glass,:consist-of,c_1,c_1,g_2,g_2,inanimate
1174,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,issue-02,cause-01,:ARG1-of,issue-02,cause-01,cause-01,i_0,c2_19,c2_19,i_0,inanimate
1175,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,person,ethnic-group,:mod,person,ethnic-group,:mod,p4_5,p4_5,e_6,e_6,inanimate
1176,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,ethnic-group,minority,:mod,ethnic-group,minority,:mod,e_6,e_6,m_7,m_7,inanimate
1177,0,333,"(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



","[{'ORG': 'Cinema'}, {'MISC': 'of'}, {'MISC': 'the'}, {'MISC': 'United'}, {'LOC': 'States'}, {'LOC': 'Hollywood'}, {'B_human': 'person'}, {'B_human': 'woman'}, {'B_human': 'person'}, {'PER': 'i'}]","(i / issue-02
      :ARG0 (c / ceiling
            :consist-of (g / glass)
            :ARG0-of (k / keep-04
                  :ARG1 (a / and
                        :op1 (p4 / person
                              :mod (e / ethnic-group
                                    :mod (m / minority)))
                        :op2 (w2 / woman))
                  :ARG2 (o / outside
                        :domain m2)))
      :ARG1 (p2 / place
            :ARG1-of (r / resemble-01
                  :ARG2 (m2 / market-sector :wiki ""Cinema_of_the_United_States"" :name (n / name :op1 ""Hollywood"")
                        :mod (p3 / person
                              :ARG1-of (w / white-02)))))
      :ARG1-of (c2 / cause-01
            :ARG0 (f / feel-02
                  :ARG1 (f2 / field
                        :location-of (p5 / play-01)
                        :ARG1-of (l / level-04 :polarity -)
                        :ARG1-of (f3 / fair-01 :polarity -))
                  :ARG1-of (r2 / regardless-91
                        :ARG2 f2))))



",DiGraph with 29 nodes and 28 edges,market-sector,person,:mod,market-sector,person,,m2_13,m2_13,p3_17,p4_5,inanimate
1178,0,334,"(c / cause-01
      :ARG1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (a2 / and
                  :op1 (m / move-01
                        :ARG0 (g / group
                              :degree (e / entire)
                              :consist-of (p / person))
                        :ARG2 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))
                        :time (a / after
                              :op1 (g2 / genocide-01)))
                  :op2 (a3 / and
                        :op1 (e2 / establish-01
                              :ARG0 o
                              :ARG1 (s / state))
                        :op2 (v / vote-01
                              :ARG0 o
                              :ARG1 s)
                        :op3 (p2 / partition-01
                              :ARG0 (o / organization :wiki ""United_Nations"" :name (n2 / name :op1 ""United"" :op2 ""Nations""))
                              :ARG1 s)))
            :ARG1-of (r / request-confirmation-91)))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'UK'}, {'ORG': 'United_Nations'}, {'ORG': 'United'}, {'LOC': 'Nations'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'organization'}]","(c / cause-01
      :ARG1 (t / think-01
            :ARG0 (y / you)
            :ARG1 (a2 / and
                  :op1 (m / move-01
                        :ARG0 (g / group
                              :degree (e / entire)
                              :consist-of (p / person))
                        :ARG2 (c2 / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))
                        :time (a / after
                              :op1 (g2 / genocide-01)))
                  :op2 (a3 / and
                        :op1 (e2 / establish-01
                              :ARG0 o
                              :ARG1 (s / state))
                        :op2 (v / vote-01
                              :ARG0 o
                              :ARG1 s)
                        :op3 (p2 / partition-01
                              :ARG0 (o / organization :wiki ""United_Nations"" :name (n2 / name :op1 ""United"" :op2 ""Nations""))
                              :ARG1 s)))
            :ARG1-of (r / request-confirmation-91)))



",DiGraph with 29 nodes and 28 edges,group,person,:consist-of,group,person,:consist-of,g_5,g_5,p_7,p_7,animate
1179,0,335,"(i / invade-01
      :ARG0 (p / person :wiki ""George_W._Bush""
            :name (n2 / name :op1 ""GWB""))
      :ARG1 (c / country :wiki ""Iraq""
            :name (n / name :op1 ""Iraq""))
      :condition (h / have-polarity-91 :ARG2 -
            :ARG1 (g / gang
                  :consist-of (p5 / person :quant 3)
                  :ARG1-of (m / mean-01
                        :ARG2 (a / and
                              :op1 (p2 / person :wiki ""Paul_Wolfowitz""
                                    :name (n3 / name :op1 ""Wolfwitz""))
                              :op2 (p3 / person :wiki ""Donald_Rumsfeld""
                                    :name (n4 / name :op1 ""Rumsfeld""))
                              :op3 (p4 / person :wiki ""Dick_Cheney""
                                    :name (n5 / name :op1 ""Cheney"")))))))



","[{'PER': 'George'}, {'ORG': 'W'}, {'LOC': '.'}, {'PER': 'Bush'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'PER': 'Paul'}, {'PER': 'Wolfow'}, {'PER': 'Wolf'}, {'LOC': 'witz'}, {'LOC': 'Donald'}, {'LOC': 'Rumsfeld'}, {'LOC': 'Rumsfeld'}, {'PER': 'Dick'}, {'MISC': 'Cheney'}, {'PER': 'Cheney'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / invade-01
      :ARG0 (p / person :wiki ""George_W._Bush""
            :name (n2 / name :op1 ""GWB""))
      :ARG1 (c / country :wiki ""Iraq""
            :name (n / name :op1 ""Iraq""))
      :condition (h / have-polarity-91 :ARG2 -
            :ARG1 (g / gang
                  :consist-of (p5 / person :quant 3)
                  :ARG1-of (m / mean-01
                        :ARG2 (a / and
                              :op1 (p2 / person :wiki ""Paul_Wolfowitz""
                                    :name (n3 / name :op1 ""Wolfwitz""))
                              :op2 (p3 / person :wiki ""Donald_Rumsfeld""
                                    :name (n4 / name :op1 ""Rumsfeld""))
                              :op3 (p4 / person :wiki ""Dick_Cheney""
                                    :name (n5 / name :op1 ""Cheney"")))))))



",DiGraph with 28 nodes and 27 edges,gang,person,:consist-of,gang,person,,g_11,g_11,p5_12,p_1,animate
1180,0,335,"(i / invade-01
      :ARG0 (p / person :wiki ""George_W._Bush""
            :name (n2 / name :op1 ""GWB""))
      :ARG1 (c / country :wiki ""Iraq""
            :name (n / name :op1 ""Iraq""))
      :condition (h / have-polarity-91 :ARG2 -
            :ARG1 (g / gang
                  :consist-of (p5 / person :quant 3)
                  :ARG1-of (m / mean-01
                        :ARG2 (a / and
                              :op1 (p2 / person :wiki ""Paul_Wolfowitz""
                                    :name (n3 / name :op1 ""Wolfwitz""))
                              :op2 (p3 / person :wiki ""Donald_Rumsfeld""
                                    :name (n4 / name :op1 ""Rumsfeld""))
                              :op3 (p4 / person :wiki ""Dick_Cheney""
                                    :name (n5 / name :op1 ""Cheney"")))))))



","[{'PER': 'George'}, {'ORG': 'W'}, {'LOC': '.'}, {'PER': 'Bush'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'PER': 'Paul'}, {'PER': 'Wolfow'}, {'PER': 'Wolf'}, {'LOC': 'witz'}, {'LOC': 'Donald'}, {'LOC': 'Rumsfeld'}, {'LOC': 'Rumsfeld'}, {'PER': 'Dick'}, {'MISC': 'Cheney'}, {'PER': 'Cheney'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / invade-01
      :ARG0 (p / person :wiki ""George_W._Bush""
            :name (n2 / name :op1 ""GWB""))
      :ARG1 (c / country :wiki ""Iraq""
            :name (n / name :op1 ""Iraq""))
      :condition (h / have-polarity-91 :ARG2 -
            :ARG1 (g / gang
                  :consist-of (p5 / person :quant 3)
                  :ARG1-of (m / mean-01
                        :ARG2 (a / and
                              :op1 (p2 / person :wiki ""Paul_Wolfowitz""
                                    :name (n3 / name :op1 ""Wolfwitz""))
                              :op2 (p3 / person :wiki ""Donald_Rumsfeld""
                                    :name (n4 / name :op1 ""Rumsfeld""))
                              :op3 (p4 / person :wiki ""Dick_Cheney""
                                    :name (n5 / name :op1 ""Cheney"")))))))



",DiGraph with 28 nodes and 27 edges,invade-01,have-polarity-91,:condition,invade-01,have-polarity-91,:condition,i_0,i_0,h_9,h_9,inanimate
1181,0,336,"(s / see-01
      :ARG0 (i / i)
      :ARG1 (p / picture
            :poss (n / nation
                  :consist-of (s2 / savage
                        :mod (s3 / subhuman)))))



",[{'PER': 'i'}],"(s / see-01
      :ARG0 (i / i)
      :ARG1 (p / picture
            :poss (n / nation
                  :consist-of (s2 / savage
                        :mod (s3 / subhuman)))))



",DiGraph with 6 nodes and 5 edges,nation,savage,:consist-of,nation,savage,:consist-of,n_3,n_3,s2_4,s2_4,inanimate
1182,0,336,"(s / see-01
      :ARG0 (i / i)
      :ARG1 (p / picture
            :poss (n / nation
                  :consist-of (s2 / savage
                        :mod (s3 / subhuman)))))



",[{'PER': 'i'}],"(s / see-01
      :ARG0 (i / i)
      :ARG1 (p / picture
            :poss (n / nation
                  :consist-of (s2 / savage
                        :mod (s3 / subhuman)))))



",DiGraph with 6 nodes and 5 edges,savage,subhuman,:mod,savage,subhuman,:mod,s2_4,s2_4,s3_5,s3_5,inanimate
1183,0,337,"(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



","[{'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_animal': 'pig'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



",DiGraph with 25 nodes and 24 edges,group,man,:consist-of,group,man,,g2_13,g_10,m_14,m_14,animate
1184,0,337,"(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



","[{'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_animal': 'pig'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



",DiGraph with 25 nodes and 24 edges,group,either,:mod,group,either,:mod,g_10,g_10,e_11,e_11,inanimate
1185,0,337,"(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



","[{'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_animal': 'pig'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



",DiGraph with 25 nodes and 24 edges,group,that,:mod,group,that,,g2_13,g_10,t_15,t_15,inanimate
1186,0,337,"(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



","[{'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_animal': 'pig'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



",DiGraph with 25 nodes and 24 edges,pig,honor,:mod,pig,honor,:mod,p2_20,p2_20,h2_21,h2_21,inanimate
1187,0,337,"(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



","[{'PER': 'George'}, {'PER': 'W'}, {'PER': 'Bush'}, {'PER': 'Bush'}, {'B_human': 'person'}, {'B_animal': 'pig'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(c / cause-01
      :ARG0 (l / lift-01 :polarity -
            :ARG0 (p / person :wiki ""George_W._Bush"" :name (n / name :op1 ""Bush""))
            :ARG1 (f / finger)
            :purpose (h / help-01
                  :ARG0 p
                  :ARG1 (g / group
                        :mod (e / either)
                        :ARG1-of (i2 / include-91
                              :ARG2 (g2 / group
                                    :consist-of (m / man)
                                    :mod (t / that))))))
      :ARG1 (o / opine-01
            :ARG0 (i / i)
            :ARG1 (s / show-01
                  :ARG0 p
                  :ARG1 (p2 / pig
                        :mod (h2 / honor :polarity -)
                        :domain p
                        :mod (n2 / nothing-but)))))



",DiGraph with 25 nodes and 24 edges,pig,nothing-but,:mod,pig,nothing-but,:mod,p2_20,p2_20,n2_24,n2_24,inanimate
1188,0,338,"(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



","[{'B_human': 'sniper'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



",DiGraph with 71 nodes and 70 edges,unit,sniper,:consist-of,unit,sniper,,u_20,u2_13,s3_21,s3_21,animate
1189,0,338,"(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



","[{'B_human': 'sniper'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



",DiGraph with 71 nodes and 70 edges,warfare,guerrilla,:mod,warfare,guerrilla,:mod,w_7,w_7,g_8,g_8,inanimate
1190,0,338,"(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



","[{'B_human': 'sniper'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



",DiGraph with 71 nodes and 70 edges,arms,small,:mod,arms,small,:mod,a3_25,a3_25,s4_26,s4_26,inanimate
1191,0,338,"(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



","[{'B_human': 'sniper'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(m / multi-sentence
      :snt1 (s / show-01
            :ARG0 (a / ambush-01)
            :ARG1 (h / have-degree-91
                  :ARG1 i2
                  :ARG2 (i / important-01
                        :ARG1 (i2 / intelligence)
                        :ARG2 (w / warfare
                              :mod (g / guerrilla)))
                  :ARG3 (s2 / so))
            :ARG1-of (c / clear-06
                  :ARG1-of (r / real-04)))
      :snt2 (s5 / same-01
            :ARG1 (u2 / unit
                  :ARG0-of (s6 / suffer-01
                        :ARG1 (a4 / attack-01
                              :instrument (d / device
                                    :ARG1-of (i5 / improvise-01)
                                    :ARG1-of (e2 / explode-01
                                          :ARG1-of (p / possible-01))))))
            :ARG2 (u / unit
                  :consist-of (s3 / sniper :quant 6
                        :ARG1-of (k / kill-01
                              :ARG0 (a2 / ambush-01
                                    :instrument (a3 / arms
                                          :mod (s4 / small)))
                              :time (j / just)))))
      :snt3 (t / tell-01
            :ARG0 (y / you)
            :ARG1 (t5 / thing
                  :manner-of (p4 / possible-01
                        :ARG1 (a5 / ambush-01
                              :ARG0 (a6 / anybody)
                              :ARG1 (p5 / person :quant 6
                                    :ARG0-of (s7 / snipe-01))
                              :ARG1-of (h2 / have-condition-91 :polarity -
                                    :ARG2 (p6 / penetrate-01
                                          :ARG0 a6
                                          :ARG1 (u3 / unit)
                                          :ARG1-of (c2 / complete-02))))))
            :ARG2 (i3 / i)
            :time (n2 / now))
      :snt4 (a8 / and
            :op1 (k2 / know-01
                  :ARG0 (i4 / insurgent)
                  :ARG1 (t2 / thing
                        :location-of (a9 / assemble-02
                              :ARG1 (s9 / sniper
                                    :part-of (u4 / unit)))))
            :op2 (k3 / know-01
                  :ARG0 i4
                  :ARG1 (t3 / thing
                        :location-of (p8 / pass-03
                              :ARG1 (v / vehicle)))))
      :snt5 (c3 / contrast-01
            :ARG1 (k4 / know-01 :polarity -
                  :ARG0 (w2 / we)
                  :ARG1 (t4 / thing)
                  :topic (e / enemy))
            :ARG2 (c4 / clear-01
                  :ARG1 (k5 / know-01
                        :ARG0 e
                        :topic w2
                        :ARG1-of (h3 / have-quant-91
                              :ARG2 (m2 / much)
                              :ARG3 (t6 / too
                                    :mod (w3 / way)))))))



",DiGraph with 71 nodes and 70 edges,too,way,:mod,too,way,:mod,t6_69,t6_69,w3_70,w3_70,inanimate
1192,0,339,"(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



",DiGraph with 29 nodes and 28 edges,have-03,cause-01,:ARG1-of,have-03,cause-01,cause-01,h2_1,c_5,c_5,h2_1,animate
1193,0,339,"(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



",DiGraph with 29 nodes and 28 edges,group,person,:consist-of,group,person,,g_17,g_17,p_18,p4_7,animate
1194,0,339,"(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



",DiGraph with 29 nodes and 28 edges,have-03,cause-01,:ARG1-of,have-03,cause-01,cause-01,h2_1,c_5,c_5,h2_1,animate
1195,0,339,"(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



",DiGraph with 29 nodes and 28 edges,person,only,:mod,person,only,:mod,p4_7,p4_7,o_11,o_11,inanimate
1196,0,339,"(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (h2 / have-03 :polarity -
            :ARG0 t
            :ARG1 (p3 / power)
            :ARG1-of (c / cause-01
                  :ARG0 (o2 / oppose-01
                        :ARG0 (p4 / person :quant 4
                              :ARG1-of (i2 / include-91
                                    :ARG2 g)
                              :mod (o / only))
                        :ARG1 (p5 / person :quant 12
                              :ARG0-of (p6 / pull-01
                                    :ARG1 (s2 / shenanigan
                                          :mod (t2 / this)))))))
      :ARG2 (g / group
            :consist-of (p / person)
            :ARG1-of (d / dedicate-01)
            :ARG0-of (t / try-01
                  :ARG1 (a / and
                        :op1 (s / slow-down-03
                              :ARG0 g
                              :ARG1 (e / everything
                                    :ARG1-of (p2 / possible-01)))
                        :op2 (b / block-01
                              :ARG0 g
                              :ARG1 e)))))



",DiGraph with 29 nodes and 28 edges,shenanigan,this,:mod,shenanigan,this,:mod,s2_15,s2_15,t2_16,t2_16,inanimate
1197,0,340,"(h / hope-01
      :ARG0 (i / i)
      :ARG1 (a / and :polarity -
            :op1 (p / pull-01
                  :ARG0 (o / organization :wiki - :name (n / name :op1 ""KSA""))
                  :ARG1 (o2 / organization :wiki ""University_of_Victoria_Students'_Society"" :name (n2 / name :op1 ""UVSS"")))
            :op2 (s / spiral-01
                  :ARG1 o2
                  :ARG2 (d / debt)
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (d3 / deep-02
                              :ARG1 s)
                        :ARG3 (m / more)))
            :ARG1-of (c / contrast-01
                  :ARG2 (a3 / and
                        :op1 (f / fling-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (b2 / board
                                                :consist-of (d2 / director))
                                          :ARG2 (m2 / member)))
                              :ARG1 (p3 / poo-poo)
                              :ARG2 (o4 / other
                                    :mod (e / each)))
                        :op2 (b / blame-01
                              :ARG0 p2
                              :ARG1 (e2 / everyone
                                    :ARG2-of (e3 / except-01
                                          :ARG1 p2))
                              :ARG2 (m3 / mismanage-01
                                    :ARG0 p2
                                    :ARG1-of (g / gross-06)))))))



","[{'ORG': 'KSA'}, {'ORG': ""University_of_Victoria_Students'_Society""}, {'ORG': 'UVSS'}, {'B_human': 'person'}, {'B_human': 'director'}, {'B_human': 'member'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Animate': 'organization'}]","(h / hope-01
      :ARG0 (i / i)
      :ARG1 (a / and :polarity -
            :op1 (p / pull-01
                  :ARG0 (o / organization :wiki - :name (n / name :op1 ""KSA""))
                  :ARG1 (o2 / organization :wiki ""University_of_Victoria_Students'_Society"" :name (n2 / name :op1 ""UVSS"")))
            :op2 (s / spiral-01
                  :ARG1 o2
                  :ARG2 (d / debt)
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (d3 / deep-02
                              :ARG1 s)
                        :ARG3 (m / more)))
            :ARG1-of (c / contrast-01
                  :ARG2 (a3 / and
                        :op1 (f / fling-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (b2 / board
                                                :consist-of (d2 / director))
                                          :ARG2 (m2 / member)))
                              :ARG1 (p3 / poo-poo)
                              :ARG2 (o4 / other
                                    :mod (e / each)))
                        :op2 (b / blame-01
                              :ARG0 p2
                              :ARG1 (e2 / everyone
                                    :ARG2-of (e3 / except-01
                                          :ARG1 p2))
                              :ARG2 (m3 / mismanage-01
                                    :ARG0 p2
                                    :ARG1-of (g / gross-06)))))))



",DiGraph with 39 nodes and 38 edges,board,director,:consist-of,board,director,:consist-of,b2_25,b2_25,d2_26,d2_26,animate
1198,0,340,"(h / hope-01
      :ARG0 (i / i)
      :ARG1 (a / and :polarity -
            :op1 (p / pull-01
                  :ARG0 (o / organization :wiki - :name (n / name :op1 ""KSA""))
                  :ARG1 (o2 / organization :wiki ""University_of_Victoria_Students'_Society"" :name (n2 / name :op1 ""UVSS"")))
            :op2 (s / spiral-01
                  :ARG1 o2
                  :ARG2 (d / debt)
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (d3 / deep-02
                              :ARG1 s)
                        :ARG3 (m / more)))
            :ARG1-of (c / contrast-01
                  :ARG2 (a3 / and
                        :op1 (f / fling-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (b2 / board
                                                :consist-of (d2 / director))
                                          :ARG2 (m2 / member)))
                              :ARG1 (p3 / poo-poo)
                              :ARG2 (o4 / other
                                    :mod (e / each)))
                        :op2 (b / blame-01
                              :ARG0 p2
                              :ARG1 (e2 / everyone
                                    :ARG2-of (e3 / except-01
                                          :ARG1 p2))
                              :ARG2 (m3 / mismanage-01
                                    :ARG0 p2
                                    :ARG1-of (g / gross-06)))))))



","[{'ORG': 'KSA'}, {'ORG': ""University_of_Victoria_Students'_Society""}, {'ORG': 'UVSS'}, {'B_human': 'person'}, {'B_human': 'director'}, {'B_human': 'member'}, {'PER': 'i'}, {'W_Animate': 'organization'}, {'W_Animate': 'organization'}]","(h / hope-01
      :ARG0 (i / i)
      :ARG1 (a / and :polarity -
            :op1 (p / pull-01
                  :ARG0 (o / organization :wiki - :name (n / name :op1 ""KSA""))
                  :ARG1 (o2 / organization :wiki ""University_of_Victoria_Students'_Society"" :name (n2 / name :op1 ""UVSS"")))
            :op2 (s / spiral-01
                  :ARG1 o2
                  :ARG2 (d / debt)
                  :ARG1-of (h3 / have-degree-91
                        :ARG2 (d3 / deep-02
                              :ARG1 s)
                        :ARG3 (m / more)))
            :ARG1-of (c / contrast-01
                  :ARG2 (a3 / and
                        :op1 (f / fling-01
                              :ARG0 (p2 / person
                                    :ARG0-of (h2 / have-org-role-91
                                          :ARG1 (b2 / board
                                                :consist-of (d2 / director))
                                          :ARG2 (m2 / member)))
                              :ARG1 (p3 / poo-poo)
                              :ARG2 (o4 / other
                                    :mod (e / each)))
                        :op2 (b / blame-01
                              :ARG0 p2
                              :ARG1 (e2 / everyone
                                    :ARG2-of (e3 / except-01
                                          :ARG1 p2))
                              :ARG2 (m3 / mismanage-01
                                    :ARG0 p2
                                    :ARG1-of (g / gross-06)))))))



",DiGraph with 39 nodes and 38 edges,other,each,:mod,other,each,:mod,o4_29,o4_29,e_30,e_30,inanimate
1199,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,collective,person,:consist-of,collective,person,:consist-of,c4_2,c4_2,p2_3,p2_3,animate
1200,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,we,collective,:mod,we,collective,:mod,w_1,w_1,c4_2,c4_2,inanimate
1201,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,person,country,:mod,person,country,:mod,p2_3,p2_3,c_4,c_4,inanimate
1202,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,person,individual,:mod,person,individual,:mod,p2_3,p2_3,i_8,i_8,inanimate
1203,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,country,other,:mod,country,other,,c5_14,c_4,o2_15,o2_15,inanimate
1204,0,341,"(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'LOC': 'Haiti'}, {'LOC': 'Haiti'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(d / donate-01
      :ARG0 (w / we
            :mod (c4 / collective
                  :consist-of (p2 / person
                        :mod (c / country :wiki ""United_States"" :name (n / name :op1 ""America""))
                        :mod (i / individual))))
      :ARG1 (m / money
            :ARG1-of (h / have-quant-91
                  :ARG3 (m2 / more)
                  :ARG4 (m3 / money
                        :ARG1-of (d2 / donate-01
                              :ARG2 (c5 / country
                                    :mod (o2 / other)
                                    :mod (a / all)
                                    :ARG1-of (c6 / combine-01))))))
      :ARG2 (c2 / country :wiki ""Haiti"" :name (n2 / name :op1 ""Haiti"")))



",DiGraph with 22 nodes and 21 edges,country,all,:mod,country,all,,c5_14,c_4,a_16,a_16,inanimate
1205,0,342,"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r2 / resemble-01
            :ARG1 (s / something)
            :ARG2 (p2 / percentage-entity :value 80
                  :consist-of (a2 / activist
                        :ARG0-of (o / oppose-01
                              :ARG1 (c3 / choose-01))
                        :mod (m / man)))))



",[{'B_human': 'activist'}],"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r2 / resemble-01
            :ARG1 (s / something)
            :ARG2 (p2 / percentage-entity :value 80
                  :consist-of (a2 / activist
                        :ARG0-of (o / oppose-01
                              :ARG1 (c3 / choose-01))
                        :mod (m / man)))))



",DiGraph with 10 nodes and 9 edges,percentage-entity,activist,:consist-of,percentage-entity,activist,:consist-of,p2_4,p2_4,a2_6,a2_6,animate
1206,0,342,"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r2 / resemble-01
            :ARG1 (s / something)
            :ARG2 (p2 / percentage-entity :value 80
                  :consist-of (a2 / activist
                        :ARG0-of (o / oppose-01
                              :ARG1 (c3 / choose-01))
                        :mod (m / man)))))



",[{'B_human': 'activist'}],"(c / cause-01
      :ARG0 (a / amr-unknown)
      :ARG1 (r2 / resemble-01
            :ARG1 (s / something)
            :ARG2 (p2 / percentage-entity :value 80
                  :consist-of (a2 / activist
                        :ARG0-of (o / oppose-01
                              :ARG1 (c3 / choose-01))
                        :mod (m / man)))))



",DiGraph with 10 nodes and 9 edges,activist,man,:mod,activist,man,:mod,a2_6,a2_6,m_9,m_9,inanimate
1207,0,343,"(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



",DiGraph with 12 nodes and 11 edges,generation,person,:consist-of,generation,person,:consist-of,g_3,g_3,p_4,p_4,animate
1208,0,343,"(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



",DiGraph with 12 nodes and 11 edges,generation,person,:consist-of,generation,person,:consist-of,g2_7,g_3,p2_8,p_4,animate
1209,0,344,"(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



",DiGraph with 12 nodes and 11 edges,generation,person,:consist-of,generation,person,:consist-of,g_3,g_3,p_4,p_4,animate
1210,0,344,"(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(t / talk-01
      :ARG0 (i / i)
      :ARG1 (a / and
            :op1 (g / generation
                  :consist-of (p / person
                        :ARG1-of (e / employ-01 :polarity -)))
            :op2 (g2 / generation
                  :consist-of (p2 / person)
                  :ARG1-of (e2 / employ-01
                        :ARG1-of (p3 / possible-01 :polarity -)))))



",DiGraph with 12 nodes and 11 edges,generation,person,:consist-of,generation,person,:consist-of,g2_7,g_3,p2_8,p_4,animate
1211,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,class,person,:consist-of,class,person,:consist-of,c3_5,c3_5,p3_6,p3_6,animate
1212,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,choose-01,foist-01,:condition,choose-01,foist-01,:condition,c5_33,c5_33,f2_35,f2_35,inanimate
1213,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,charity,government-organization,:mod,charity,government-organization,:mod,c2_2,c2_2,g_3,g_3,inanimate
1214,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,person,poor,:mod,person,poor,:mod,p3_6,p3_6,p2_7,p2_7,inanimate
1215,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,person,anything,:mod,person,anything,:mod,p3_6,p3_6,a_40,a_40,inanimate
1216,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,country,great,:mod,country,great,:mod,c4_21,c4_21,g3_22,g3_22,inanimate
1217,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,country,this,:mod,country,this,:mod,c4_21,c4_21,t2_23,t2_23,inanimate
1218,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,security,misery,:mod,security,misery,,s2_31,s2_31,m3_32,m2_11,inanimate
1219,0,345,"(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



","[{'B_human': 'person'}, {'B_human': 'ben'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(i / issue-02
      :ARG0 (c / create-01
            :ARG0 (c2 / charity
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01)))
            :ARG1 (c3 / class
                  :consist-of (p3 / person
                        :mod (p2 / poor)
                        :ARG0-of (m / make-01
                              :ARG1 (b / bed
                                    :poss p3)
                              :location (m2 / misery
                                    :poss p3)
                              :frequency (r / rate-entity-91
                                    :ARG3 (t5 / temporal-quantity :quant 1
                                          :unit (d / day))))
                        :ARG0-of (s / see-01
                              :ARG1 (o / opportunity
                                    :location (o2 / out-there)
                                    :beneficiary p3
                                    :location (c4 / country
                                          :mod (g3 / great)
                                          :mod (t2 / this)))
                              :ARG1-of (p / possible-01 :polarity -))
                        :ARG0-of (g4 / give-up-07
                              :ARG1 (f / free-04
                                    :ARG1 p3
                                    :ARG1-of (e3 / exchange-01
                                          :ARG0 p3
                                          :ARG3 (s2 / security
                                                :mod (m3 / misery)
                                                :ARG1-of (c5 / choose-01
                                                      :ARG0 (n / no-one)
                                                      :condition (f2 / foist-01 :polarity -
                                                            :ARG1 s2
                                                            :ARG2 (t4 / they)))
                                                :mod (t3 / type)))))
                        :mod (a / anything :polarity -
                              :ARG2-of (e / except-01
                                    :ARG1 p2)
                              :time (e2 / ever))))))



",DiGraph with 45 nodes and 44 edges,security,type,:mod,security,type,:mod,s2_31,s2_31,t3_39,t3_39,inanimate
1220,0,346,"(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



","[{'ORG': 'Call'}, {'LOC': 'ista'}, {'ORG': 'G'}, {'ORG': 'rich'}, {'ORG': 'Calista'}, {'B_human': 'person'}, {'B_human': 'lover'}, {'B_human': 'woman'}, {'B_human': 'lover'}, {'B_human': 'politician'}, {'B_human': 'woman'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



",DiGraph with 46 nodes and 45 edges,string,lover,:consist-of,string,lover,:consist-of,s_24,s_24,l_25,l_25,animate
1221,0,346,"(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



","[{'ORG': 'Call'}, {'LOC': 'ista'}, {'ORG': 'G'}, {'ORG': 'rich'}, {'ORG': 'Calista'}, {'B_human': 'person'}, {'B_human': 'lover'}, {'B_human': 'woman'}, {'B_human': 'lover'}, {'B_human': 'politician'}, {'B_human': 'woman'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



",DiGraph with 46 nodes and 45 edges,string,lover,:consist-of,string,lover,:consist-of,s3_33,s_24,l2_34,l_25,animate
1222,0,346,"(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



","[{'ORG': 'Call'}, {'LOC': 'ista'}, {'ORG': 'G'}, {'ORG': 'rich'}, {'ORG': 'Calista'}, {'B_human': 'person'}, {'B_human': 'lover'}, {'B_human': 'woman'}, {'B_human': 'lover'}, {'B_human': 'politician'}, {'B_human': 'woman'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



",DiGraph with 46 nodes and 45 edges,consequence-03,politics,:mod,consequence-03,politics,:mod,c2_19,c2_19,p2_20,p2_20,inanimate
1223,0,346,"(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



","[{'ORG': 'Call'}, {'LOC': 'ista'}, {'ORG': 'G'}, {'ORG': 'rich'}, {'ORG': 'Calista'}, {'B_human': 'person'}, {'B_human': 'lover'}, {'B_human': 'woman'}, {'B_human': 'lover'}, {'B_human': 'politician'}, {'B_human': 'woman'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (m / marry-01 :quant 3
            :ARG1 (h / he))
      :op2 (m2 / marry-01
            :ARG1 h
            :ARG2 (p / person :wiki ""Callista_Gingrich"" :name (n / name :op1 ""Calista""))
            :duration (t / temporal-quantity :quant 13
                  :unit (y / year))
            :time (c / current))
      :op3 (r / respect-01
            :ARG0 (i / i)
            :ARG2 (d / divorce-01 :quant 2
                  :ARG0 h
                  :concession (c2 / consequence-03
                        :mod (p2 / politics))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (h2 / have-03
                              :ARG0 h
                              :ARG1 (s / string
                                    :consist-of (l / lover))
                              :time (m3 / marry-01
                                    :ARG0 h
                                    :ARG1 (w / woman :quant 1))
                              :ARG1-of (r2 / resemble-01
                                    :ARG2 (h3 / have-03
                                          :ARG0 p3
                                          :ARG1 (s3 / string
                                                :consist-of (l2 / lover))
                                          :ARG1-of (g / get-away-08
                                                :ARG0 (p3 / politician
                                                      :mod (o / other)
                                                      :quant (m4 / many
                                                            :degree (s2 / so)))
                                                :ARG1-of (t2 / try-01
                                                      :ARG0 p3))
                                          :time (m5 / marry-01
                                                :ARG0 p3
                                                :ARG1 (w2 / woman :quant 1)))))))))



",DiGraph with 46 nodes and 45 edges,politician,other,:mod,politician,other,:mod,p3_36,p3_36,o_37,o_37,inanimate
1224,0,347,"(a / and
      :op1 (c / cartel
            :domain (o / organization :wiki ""OPEC"" :name (n / name :op1 ""OPEC""))
            :consist-of (p / person
                  :ARG0-of (p3 / produce-01
                        :ARG1 (o2 / oil))))
      :op2 (f / fail-01
            :ARG1 o
            :ARG2 (c3 / control-01
                  :ARG0 o
                  :degree (t / thing
                        :degree-of (c4 / control-01
                              :ARG0 o
                              :ARG1-of (o3 / obligate-01
                                    :ARG1-of (c5 / claim-01
                                          :ARG0 (y / you))))))))



","[{'ORG': 'OPEC'}, {'ORG': 'OPEC'}, {'B_human': 'person'}, {'W_Animate': 'organization'}]","(a / and
      :op1 (c / cartel
            :domain (o / organization :wiki ""OPEC"" :name (n / name :op1 ""OPEC""))
            :consist-of (p / person
                  :ARG0-of (p3 / produce-01
                        :ARG1 (o2 / oil))))
      :op2 (f / fail-01
            :ARG1 o
            :ARG2 (c3 / control-01
                  :ARG0 o
                  :degree (t / thing
                        :degree-of (c4 / control-01
                              :ARG0 o
                              :ARG1-of (o3 / obligate-01
                                    :ARG1-of (c5 / claim-01
                                          :ARG0 (y / you))))))))



",DiGraph with 19 nodes and 18 edges,cartel,person,:consist-of,cartel,person,:consist-of,c_1,c_1,p_6,p_6,animate
1225,0,348,"(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



","[{'B_human': 'victim'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



",DiGraph with 30 nodes and 29 edges,idea,victim,:consist-of,idea,victim,:consist-of,i_1,i_1,v_3,v_3,animate
1226,0,348,"(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



","[{'B_human': 'victim'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



",DiGraph with 30 nodes and 29 edges,dismiss-01,float-01,:condition,dismiss-01,float-01,:condition,d4_0,d4_0,f_13,f_13,inanimate
1227,0,348,"(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



","[{'B_human': 'victim'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



",DiGraph with 30 nodes and 29 edges,person,wealth,:mod,person,wealth,:mod,p2_6,p2_6,w_7,w_7,inanimate
1228,0,348,"(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



","[{'B_human': 'victim'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



",DiGraph with 30 nodes and 29 edges,country,this,:mod,country,this,:mod,c_8,c_8,t_9,t_9,inanimate
1229,0,348,"(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



","[{'B_human': 'victim'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(d4 / dismiss-01
      :ARG1 (i / idea
            :ARG1-of (o3 / orchestrate-01)
            :consist-of (v / victim
                  :topic (w2 / war-01
                        :ARG1 (c2 / class))
                  :domain (p2 / person
                        :mod (w / wealth)
                        :location (c / country
                              :mod (t / this)))
                  :manner (s2 / somehow)))
      :ord (o2 / ordinal-entity :value 1)
      :condition (f / float-01
            :ARG1 (t3 / talk-01
                  :ARG1 (r / raise-01
                        :ARG1 (t4 / tax-01
                              :ARG2 p2)
                        :purpose (h / help-01
                              :ARG1 (t5 / tackle-01
                                    :ARG1 (a / and
                                          :op1 (d2 / deficit)
                                          :op2 (d3 / debt))))))
            :time (t7 / time
                  :ARG1-of (s3 / same-01
                        :ARG2 (c3 / cut-02
                              :degree (m / massive)
                              :location (h2 / horizon)
                              :purpose t5)
                        :mod (v2 / very)))))



",DiGraph with 30 nodes and 29 edges,same-01,very,:mod,same-01,very,:mod,s3_24,s3_24,v2_29,v2_29,inanimate
1230,0,349,"(c2 / contrast-01
      :ARG1 (s / suppose-02
            :ARG1 (c / country
                  :poss (w / we))
            :ARG2 (n / nation
                  :consist-of (l / law)))
      :ARG2 (s2 / suppose-02 :polarity -
            :ARG1 c
            :ARG2 (n2 / nation
                  :consist-of (m / man)))
      :ARG1-of (r2 / request-confirmation-91))



",[],"(c2 / contrast-01
      :ARG1 (s / suppose-02
            :ARG1 (c / country
                  :poss (w / we))
            :ARG2 (n / nation
                  :consist-of (l / law)))
      :ARG2 (s2 / suppose-02 :polarity -
            :ARG1 c
            :ARG2 (n2 / nation
                  :consist-of (m / man)))
      :ARG1-of (r2 / request-confirmation-91))



",DiGraph with 12 nodes and 11 edges,nation,law,:consist-of,nation,law,:consist-of,n_4,n_4,l_5,l_5,inanimate
1231,0,349,"(c2 / contrast-01
      :ARG1 (s / suppose-02
            :ARG1 (c / country
                  :poss (w / we))
            :ARG2 (n / nation
                  :consist-of (l / law)))
      :ARG2 (s2 / suppose-02 :polarity -
            :ARG1 c
            :ARG2 (n2 / nation
                  :consist-of (m / man)))
      :ARG1-of (r2 / request-confirmation-91))



",[],"(c2 / contrast-01
      :ARG1 (s / suppose-02
            :ARG1 (c / country
                  :poss (w / we))
            :ARG2 (n / nation
                  :consist-of (l / law)))
      :ARG2 (s2 / suppose-02 :polarity -
            :ARG1 c
            :ARG2 (n2 / nation
                  :consist-of (m / man)))
      :ARG1-of (r2 / request-confirmation-91))



",DiGraph with 12 nodes and 11 edges,nation,man,:consist-of,nation,man,,n2_9,n_4,m_10,m_10,animate
1232,0,350,"(s / shop
      :consist-of (m / man :quant 1)
      :domain (b / business
            :mod (t / that)))



",[{'B_human': 'man'}],"(s / shop
      :consist-of (m / man :quant 1)
      :domain (b / business
            :mod (t / that)))



",DiGraph with 5 nodes and 4 edges,shop,man,:consist-of,shop,man,:consist-of,s_0,s_0,m_1,m_1,animate
1233,0,350,"(s / shop
      :consist-of (m / man :quant 1)
      :domain (b / business
            :mod (t / that)))



",[{'B_human': 'man'}],"(s / shop
      :consist-of (m / man :quant 1)
      :domain (b / business
            :mod (t / that)))



",DiGraph with 5 nodes and 4 edges,business,that,:mod,business,that,:mod,b_3,b_3,t_4,t_4,inanimate
1234,0,351,"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",[{'B_human': 'person'}],"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",DiGraph with 8 nodes and 7 edges,band,person,:consist-of,band,person,:consist-of,b_3,b_3,p2_4,p2_4,animate
1235,0,351,"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",[{'B_human': 'person'}],"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",DiGraph with 8 nodes and 7 edges,band,small,:mod,band,small,:mod,b_3,b_3,s3_6,s3_6,inanimate
1236,0,351,"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",[{'B_human': 'person'}],"(p / play-11
      :ARG2 (f / flute)
      :purpose (s / summon-01
            :ARG1 (b / band
                  :consist-of (p2 / person
                        :ARG1-of (l / left-19))
                  :mod (s3 / small))
            :source (w / woodwork)))



",DiGraph with 8 nodes and 7 edges,summon-01,woodwork,:source,summon-01,woodwork,:source,s_2,s_2,w_7,w_7,inanimate
1237,0,352,"(r / responsible-01
      :ARG0 (c / company :wiki ""Microsoft"" :name (n / name :op1 ""Microsoft""))
      :ARG1 (a / and
            :op1 (h / hire-01
                  :ARG0 c)
            :op2 (p / pay-01
                  :ARG0 c)
            :op3 (c2 / care-03
                  :ARG0 c
                  :ARG1 (h2 / horde
                        :consist-of (p2 / person
                              :ARG1-of (l / left-19)))))
      :mod (m / moral))



","[{'ORG': 'Microsoft'}, {'ORG': 'Microsoft'}, {'B_human': 'person'}, {'W_Animate': 'company'}]","(r / responsible-01
      :ARG0 (c / company :wiki ""Microsoft"" :name (n / name :op1 ""Microsoft""))
      :ARG1 (a / and
            :op1 (h / hire-01
                  :ARG0 c)
            :op2 (p / pay-01
                  :ARG0 c)
            :op3 (c2 / care-03
                  :ARG0 c
                  :ARG1 (h2 / horde
                        :consist-of (p2 / person
                              :ARG1-of (l / left-19)))))
      :mod (m / moral))



",DiGraph with 16 nodes and 15 edges,horde,person,:consist-of,horde,person,:consist-of,h2_12,h2_12,p2_13,p2_13,animate
1238,0,352,"(r / responsible-01
      :ARG0 (c / company :wiki ""Microsoft"" :name (n / name :op1 ""Microsoft""))
      :ARG1 (a / and
            :op1 (h / hire-01
                  :ARG0 c)
            :op2 (p / pay-01
                  :ARG0 c)
            :op3 (c2 / care-03
                  :ARG0 c
                  :ARG1 (h2 / horde
                        :consist-of (p2 / person
                              :ARG1-of (l / left-19)))))
      :mod (m / moral))



","[{'ORG': 'Microsoft'}, {'ORG': 'Microsoft'}, {'B_human': 'person'}, {'W_Animate': 'company'}]","(r / responsible-01
      :ARG0 (c / company :wiki ""Microsoft"" :name (n / name :op1 ""Microsoft""))
      :ARG1 (a / and
            :op1 (h / hire-01
                  :ARG0 c)
            :op2 (p / pay-01
                  :ARG0 c)
            :op3 (c2 / care-03
                  :ARG0 c
                  :ARG1 (h2 / horde
                        :consist-of (p2 / person
                              :ARG1-of (l / left-19)))))
      :mod (m / moral))



",DiGraph with 16 nodes and 15 edges,responsible-01,moral,:mod,responsible-01,moral,:mod,r_0,r_0,m_15,m_15,inanimate
1239,0,353,"(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



","[{'MISC': 'George'}, {'LOC': 'Washington'}, {'LOC': 'Washington'}, {'LOC': 'Pennsylvania'}, {'LOC': 'Pennsylvania'}, {'B_human': 'soldier'}, {'B_human': 'soldier'}, {'W_Animate': 'person'}, {'W_Inanimate': 'state'}]","(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



",DiGraph with 25 nodes and 24 edges,group,soldier,:consist-of,group,soldier,:consist-of,g_5,g_5,s2_6,s2_6,animate
1240,0,353,"(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



","[{'MISC': 'George'}, {'LOC': 'Washington'}, {'LOC': 'Washington'}, {'LOC': 'Pennsylvania'}, {'LOC': 'Pennsylvania'}, {'B_human': 'soldier'}, {'B_human': 'soldier'}, {'W_Animate': 'person'}, {'W_Inanimate': 'state'}]","(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



",DiGraph with 25 nodes and 24 edges,group,soldier,:mod,group,soldier,:consist-of,g2_10,g_5,s3_11,s2_6,inanimate
1241,0,353,"(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



","[{'MISC': 'George'}, {'LOC': 'Washington'}, {'LOC': 'Washington'}, {'LOC': 'Pennsylvania'}, {'LOC': 'Pennsylvania'}, {'B_human': 'soldier'}, {'B_human': 'soldier'}, {'W_Animate': 'person'}, {'W_Inanimate': 'state'}]","(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



",DiGraph with 25 nodes and 24 edges,battle-01,war,:mod,battle-01,war,:mod,b_12,b_12,w2_13,w2_13,inanimate
1242,0,353,"(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



","[{'MISC': 'George'}, {'LOC': 'Washington'}, {'LOC': 'Washington'}, {'LOC': 'Pennsylvania'}, {'LOC': 'Pennsylvania'}, {'B_human': 'soldier'}, {'B_human': 'soldier'}, {'W_Animate': 'person'}, {'W_Inanimate': 'state'}]","(l / lead-02
      :ARG0 (p / person :wiki ""George_Washington"" :name (n3 / name :op1 ""Washington""))
      :ARG1 (g / group
            :consist-of (s2 / soldier)
            :ARG1-of (h / have-degree-91
                  :ARG2 (l2 / large)
                  :ARG3 (m / more)
                  :ARG4 (g2 / group
                        :mod (s3 / soldier)
                        :ARG0-of (b / battle-01
                              :mod (w2 / war
                                    :ARG1-of (r / revolutionary-04))
                              :mod (a / any)))))
      :ARG2 (e / enforce-01
            :ARG0 p
            :ARG1 (c2 / collect-01
                  :ARG1 (t / tax-01)))
      :direction (w3 / west
            :part-of (s4 / state :wiki ""Pennsylvania"" :name (n5 / name :op1 ""Pennsylvania""))))



",DiGraph with 25 nodes and 24 edges,battle-01,any,:mod,battle-01,any,:mod,b_12,b_12,a_15,a_15,inanimate
1243,0,354,"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",[],"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",DiGraph with 15 nodes and 14 edges,lot,you,:consist-of,lot,you,:consist-of,l_3,l_3,y_4,y_4,animate
1244,0,354,"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",[],"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",DiGraph with 15 nodes and 14 edges,pay-01,back,:mod,pay-01,back,:mod,p_10,p_10,b2_14,b2_14,inanimate
1245,0,354,"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",[],"(r / recommend-01
      :ARG1 (a / and
            :op1 (b / bar-01
                  :ARG1 (l / lot
                        :consist-of (y / you))
                  :ARG2 (e / employ-01
                        :ARG0 (g / government-organization
                              :ARG0-of (g2 / govern-01))
                        :ARG1 l))
            :op2 (m / make-02
                  :ARG1 (p / pay-01
                        :ARG0 l
                        :ARG1 (p2 / penny
                              :mod (e2 / every))
                        :mod (b2 / back)))))



",DiGraph with 15 nodes and 14 edges,penny,every,:mod,penny,every,:mod,p2_12,p2_12,e2_13,e2_13,inanimate
1246,0,355,"(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



",DiGraph with 25 nodes and 24 edges,turn-down-05,cause-01,:ARG1-of,turn-down-05,cause-01,cause-01,t_4,c5_16,c5_16,t_4,inanimate
1247,0,355,"(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



",DiGraph with 25 nodes and 24 edges,cadre,person,:consist-of,cadre,person,:consist-of,c2_7,c2_7,p_9,p_9,animate
1248,0,355,"(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



",DiGraph with 25 nodes and 24 edges,turn-down-05,cause-01,:ARG1-of,turn-down-05,cause-01,cause-01,t_4,c5_16,c5_16,t_4,inanimate
1249,0,355,"(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(w / want-01
      :ARG0 (y / you)
      :ARG1 (b / believe-01
            :ARG0 (w2 / we)
            :ARG1 (t / turn-down-05
                  :ARG0 (c / company
                        :ARG0-of (i / insure-02))
                  :ARG1 (c2 / cadre
                        :mod (w3 / whole)
                        :consist-of (p / person)
                        :location (o / out-there))
                  :manner (r / recourse :polarity -
                        :ARG2-of (e / except-01
                              :ARG1 (s / suck-up-02
                                    :ARG1 (i2 / it))))
                  :ARG1-of (c5 / cause-01
                        :ARG0 (p2 / procedure
                              :ARG1-of (d / define-01
                                    :ARG2 (c4 / cover-01)
                                    :ARG1-of (c3 / clear-06)
                                    :location (p3 / policy-01
                                          :ARG0 c))))))
      :polarity (a / amr-unknown)
      :ARG1-of (r2 / real-04))



",DiGraph with 25 nodes and 24 edges,cadre,whole,:mod,cadre,whole,:mod,c2_7,c2_7,w3_8,w3_8,inanimate
1250,0,356,"(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



","[{'ORG': 'Daily'}, {'MISC': 'Ko'}, {'ORG': 'Andrew'}, {'ORG': 'B'}, {'PER': 'Andrew'}, {'B_human': 'person'}, {'W_Inanimate': 'publication'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



",DiGraph with 33 nodes and 32 edges,band,person,:consist-of,band,person,:consist-of,b_2,b_2,p2_4,p2_4,animate
1251,0,356,"(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



","[{'ORG': 'Daily'}, {'MISC': 'Ko'}, {'ORG': 'Andrew'}, {'ORG': 'B'}, {'PER': 'Andrew'}, {'B_human': 'person'}, {'W_Inanimate': 'publication'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



",DiGraph with 33 nodes and 32 edges,band,merry,:mod,band,merry,:mod,b_2,b_2,m_3,m_3,inanimate
1252,0,356,"(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



","[{'ORG': 'Daily'}, {'MISC': 'Ko'}, {'ORG': 'Andrew'}, {'ORG': 'B'}, {'PER': 'Andrew'}, {'B_human': 'person'}, {'W_Inanimate': 'publication'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



",DiGraph with 33 nodes and 32 edges,hay-01,politics,:mod,hay-01,politics,:mod,h4_19,h4_19,p3_22,p3_22,inanimate
1253,0,356,"(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



","[{'ORG': 'Daily'}, {'MISC': 'Ko'}, {'ORG': 'Andrew'}, {'ORG': 'B'}, {'PER': 'Andrew'}, {'B_human': 'person'}, {'W_Inanimate': 'publication'}, {'W_Animate': 'person'}]","(h / have-concession-91
      :ARG1 (d / decide-01
            :ARG0 (b / band
                  :mod (m / merry)
                  :consist-of (p2 / person
                        :ARG0-of (m2 / maraud-00)
                        :ARG1-of (h2 / have-part-91 :polarity -
                              :ARG2 (f3 / face))
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (p4 / publication :wiki ""Daily_Kos""
                                    :name (n3 / name :op1 ""Daily"" :op2 ""Kos"")))))
            :ARG1 (t / time
                  :time-of (u / use-01
                        :ARG1 d2
                        :ARG2 (o / opportunity
                              :purpose (h4 / hay-01
                                    :ARG0 b
                                    :ARG1 d2
                                    :mod (p3 / politics))))))
      :ARG2 (f / fresh-04
            :ARG1 (n / news
                  :topic (d2 / die-01
                        :ARG1 (p / person :wiki ""Andrew_Breitbart""
                              :name (n2 / name :op1 ""Andrew"" :op2 ""Breitbart""))))
            :degree (f2 / fairly)
            :mod (s / still)))



",DiGraph with 33 nodes and 32 edges,fresh-04,still,:mod,fresh-04,still,:mod,f_23,f_23,s_32,s_32,inanimate
1254,0,357,"(b / bunch
      :consist-of (k / kid
            :ARG1-of (s / spoil-01)
            :ARG0-of (w / want-01
                  :ARG1 (p2 / pay-01
                        :ARG1 (g / great))
                  :manner (o / or
                        :op1 (e / educate-01 :polarity -
                              :ARG1 p)
                        :op2 (e2 / effort-01 :polarity -
                              :ARG1-of (t2 / take-10
                                    :ARG0 (g2 / get-01
                                          :ARG0 k
                                          :ARG1 p2))))))
      :domain (p / person
            :ARG1-of (i / include-91
                  :ARG2 (p3 / political-movement :wiki ""Occupy_Wall_Street"" :name (n / name :op1 ""Occupy"" :op2 ""Wall"" :op3 ""Street"")))))



","[{'LOC': 'Wall'}, {'LOC': 'Street'}, {'LOC': 'Wall'}, {'LOC': 'Street'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'PER': 'i'}]","(b / bunch
      :consist-of (k / kid
            :ARG1-of (s / spoil-01)
            :ARG0-of (w / want-01
                  :ARG1 (p2 / pay-01
                        :ARG1 (g / great))
                  :manner (o / or
                        :op1 (e / educate-01 :polarity -
                              :ARG1 p)
                        :op2 (e2 / effort-01 :polarity -
                              :ARG1-of (t2 / take-10
                                    :ARG0 (g2 / get-01
                                          :ARG0 k
                                          :ARG1 p2))))))
      :domain (p / person
            :ARG1-of (i / include-91
                  :ARG2 (p3 / political-movement :wiki ""Occupy_Wall_Street"" :name (n / name :op1 ""Occupy"" :op2 ""Wall"" :op3 ""Street"")))))



",DiGraph with 24 nodes and 23 edges,bunch,kid,:consist-of,bunch,kid,:consist-of,b_0,b_0,k_1,k_1,animate
1255,0,358,"(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'B_human': 'person'}]","(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



",DiGraph with 11 nodes and 10 edges,tribe,person,:consist-of,tribe,person,:consist-of,t_2,t_2,p_3,p_3,animate
1256,0,358,"(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'B_human': 'person'}]","(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



",DiGraph with 11 nodes and 10 edges,and,amr-unknown,:mod,and,amr-unknown,:polarity,a_0,a_0,a2_10,a3_9,inanimate
1257,0,358,"(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



","[{'ORG': 'Republican_Party'}, {'LOC': 'United_States'}, {'MISC': 'Republican'}, {'B_human': 'person'}]","(a / and
      :op1 (y / you)
      :op2 (t / tribe
            :consist-of (p / person
                  :mod (p2 / political-party :wiki ""Republican_Party_(United_States)""
                        :name (n / name :op1 ""Republican"")))
            :poss y)
      :polarity (a3 / amr-unknown)
      :mod (a2 / amr-unknown))



",DiGraph with 11 nodes and 10 edges,person,political-party,:mod,person,political-party,:mod,p_3,p_3,p2_4,p2_4,inanimate
1258,0,359,"(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



","[{'MISC': 'Christian'}, {'MISC': 'Christian'}, {'PER': 'Jesus'}, {'PER': 'Jesus'}, {'MISC': 'G'}, {'MISC': 'ama'}, {'PER': 'Buddha'}, {'PER': 'Buddha'}, {'MISC': 'Native'}, {'MISC': 'Americans'}, {'LOC': 'United_States'}, {'MISC': 'American'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



",DiGraph with 44 nodes and 43 edges,group,person,:consist-of,group,person,:consist-of,g_6,g_6,p_8,p_8,animate
1259,0,359,"(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



","[{'MISC': 'Christian'}, {'MISC': 'Christian'}, {'PER': 'Jesus'}, {'PER': 'Jesus'}, {'MISC': 'G'}, {'MISC': 'ama'}, {'PER': 'Buddha'}, {'PER': 'Buddha'}, {'MISC': 'Native'}, {'MISC': 'Americans'}, {'LOC': 'United_States'}, {'MISC': 'American'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



",DiGraph with 44 nodes and 43 edges,have-03,only,:mod,have-03,only,,h2_11,h_2,o2_22,o2_22,inanimate
1260,0,359,"(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



","[{'MISC': 'Christian'}, {'MISC': 'Christian'}, {'PER': 'Jesus'}, {'PER': 'Jesus'}, {'MISC': 'G'}, {'MISC': 'ama'}, {'PER': 'Buddha'}, {'PER': 'Buddha'}, {'MISC': 'Native'}, {'MISC': 'Americans'}, {'LOC': 'United_States'}, {'MISC': 'American'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



",DiGraph with 44 nodes and 43 edges,person,religious-group,:mod,person,religious-group,,p2_12,p_8,r4_13,r4_13,inanimate
1261,0,359,"(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



","[{'MISC': 'Christian'}, {'MISC': 'Christian'}, {'PER': 'Jesus'}, {'PER': 'Jesus'}, {'MISC': 'G'}, {'MISC': 'ama'}, {'PER': 'Buddha'}, {'PER': 'Buddha'}, {'MISC': 'Native'}, {'MISC': 'Americans'}, {'LOC': 'United_States'}, {'MISC': 'American'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'ben'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(i / infer-01
      :ARG1 (a2 / and
            :op1 (h / have-03
                  :ARG0 (y / you)
                  :ARG1 (f / faith
                        :beneficiary (r / right-06
                              :ARG1 (g / group :quant 1
                                    :consist-of (p / person))))
                  :ARG1-of (r3 / resemble-01
                        :ARG2 (a / and
                              :op1 (h2 / have-03
                                    :ARG0 (p2 / person
                                          :mod (r4 / religious-group :wiki ""Christian""
                                                :name (n / name :op1 ""Christian"")))
                                    :ARG1 (f2 / faith
                                          :beneficiary (p3 / person :wiki ""Jesus""
                                                :name (n2 / name :op1 ""Jesus"")))
                                    :mod (o2 / only))
                              :op2 (i3 / ignore-01
                                    :ARG0 p2
                                    :ARG1 (o / or
                                          :op1 (p4 / person :wiki ""Gautama_Buddha""
                                                :name (n3 / name :op1 ""Buddha""))
                                          :op2 (s / spirit
                                                :ARG1-of (b / believe-01
                                                      :ARG0 (p5 / person
                                                            :mod (e / ethnic-group :wiki ""Native_Americans_in_the_United_States""
                                                                  :name (n4 / name :op1 ""Native"" :op2 ""American"")))))))))
                  :ARG1-of (s2 / simple-02))
            :op2 (c / choose-01
                  :ARG0 y
                  :ARG1 (i2 / ignore-01
                        :ARG0 y
                        :ARG1 (r2 / rest)))))



",DiGraph with 44 nodes and 43 edges,person,ethnic-group,:mod,person,ethnic-group,,p5_32,p_8,e_33,e_33,inanimate
1262,0,360,"(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



",DiGraph with 15 nodes and 14 edges,nation,person,:consist-of,nation,person,:consist-of,n2_2,n2_2,p_3,p_3,animate
1263,0,360,"(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



",DiGraph with 15 nodes and 14 edges,we,nation,:mod,we,nation,:mod,w_1,w_1,n2_2,n2_2,inanimate
1264,0,360,"(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



","[{'B_human': 'person'}, {'B_human': 'person'}]","(n / need-01
      :ARG0 (w / we
            :mod (n2 / nation
                  :consist-of (p / person
                        :ARG1-of (f / free-01))))
      :ARG1 (r / reevaluate-01
            :ARG0 w
            :ARG1 (s / situation
                  :mod (e / energy)
                  :poss w))
      :time (b / before
            :op1 (p2 / person
                  :ARG1-of (f2 / free-01)
                  :domain w
                  :time (n3 / no-longer))))



",DiGraph with 15 nodes and 14 edges,situation,energy,:mod,situation,energy,:mod,s_7,s_7,e_8,e_8,inanimate
1265,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_2,c6_3,c6_3,t_2,inanimate
1266,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,person,:consist-of,population,person,:consist-of,p2_6,p2_6,p3_8,p3_8,animate
1267,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,person,:consist-of,population,person,:consist-of,p4_14,p2_6,p5_16,p3_8,animate
1268,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_2,c6_3,c6_3,t_2,inanimate
1269,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,magic,:mod,thing,magic,:mod,t_2,t_2,m_27,m_27,inanimate
1270,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,gold,:mod,thing,gold,:mod,t_2,t_2,g2_28,g2_28,inanimate
1271,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,civilian,:mod,population,civilian,:mod,p2_6,p2_6,c2_7,c2_7,inanimate
1272,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,c2,:mod,population,c2,,p4_14,p2_6,c2_15,c2_15,inanimate
1273,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,bathe-01,nucleus,:mod,bathe-01,nucleus,:mod,b_23,b_23,n3_25,n3_25,inanimate
1274,0,361,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,section,comprehensive,:mod,section,comprehensive,:mod,s2_33,s2_33,c5_36,c5_36,inanimate
1275,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_2,c6_3,c6_3,t_2,inanimate
1276,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,person,:consist-of,population,person,:consist-of,p2_6,p2_6,p3_8,p3_8,animate
1277,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,person,:consist-of,population,person,:consist-of,p4_14,p2_6,p5_16,p3_8,animate
1278,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_2,c6_3,c6_3,t_2,inanimate
1279,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,magic,:mod,thing,magic,:mod,t_2,t_2,m_27,m_27,inanimate
1280,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,thing,gold,:mod,thing,gold,:mod,t_2,t_2,g2_28,g2_28,inanimate
1281,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,civilian,:mod,population,civilian,:mod,p2_6,p2_6,c2_7,c2_7,inanimate
1282,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,population,c2,:mod,population,c2,,p4_14,p2_6,c2_15,c2_15,inanimate
1283,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,bathe-01,nucleus,:mod,bathe-01,nucleus,:mod,b_23,b_23,n3_25,n3_25,inanimate
1284,0,362,"(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



","[{'LOC': 'Hiroshima'}, {'LOC': 'Hiroshima'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'LOC': 'Na'}, {'LOC': 'gasaki'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}]","(p / possible-01
      :ARG1 (h / hide-01
            :ARG1 (t / thing
                  :ARG0-of (c6 / cause-01
                        :ARG1 (c / consign-01
                              :ARG1 (a / and
                                    :op1 (p2 / population
                                          :mod (c2 / civilian)
                                          :consist-of (p3 / person :quant 350000)
                                          :location (c3 / city :wiki ""Hiroshima""
                                                :name (n / name :op1 ""Hiroshima"")))
                                    :op2 (p4 / population
                                          :mod c2
                                          :consist-of (p5 / person :quant 250000)
                                          :location (c4 / city :wiki ""Nagasaki""
                                                :name (n2 / name :op1 ""Nagasaki""))))
                              :ARG2 (h2 / horror
                                    :poss (b / bathe-01
                                          :ARG2 (b2 / blood)
                                          :mod (n3 / nucleus)))))
                  :ARG1-of (g / good-02)
                  :mod (m / magic)
                  :mod (g2 / gold)
                  :ARG1-of (r2 / resemble-01
                        :ARG2 (f / fleece))
                  :ARG1-of (s / seek-01
                        :degree (m2 / much)))
            :location (s2 / section :quant 77
                  :ARG1-of (l / long-03)
                  :mod (c5 / comprehensive)
                  :location (a3 / amr-unknown)))
      :ARG1-of (i / infer-01))



",DiGraph with 39 nodes and 38 edges,section,comprehensive,:mod,section,comprehensive,:mod,s2_33,s2_33,c5_36,c5_36,inanimate
1285,0,363,"(g / group :polarity -
      :consist-of (p2 / person
            :ARG1-of (r / right-08)
            :ARG0-of (d / dance-01
                  :location (s / street))
            :ARG0-of (w2 / wave-01
                  :ARG1 (s2 / sign
                        :ARG0-of (s3 / say-01
                              :ARG1 (d2 / die-01
                                    :ARG1 (p / person
                                          :ARG1-of (l / liberal-02))))))))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}]","(g / group :polarity -
      :consist-of (p2 / person
            :ARG1-of (r / right-08)
            :ARG0-of (d / dance-01
                  :location (s / street))
            :ARG0-of (w2 / wave-01
                  :ARG1 (s2 / sign
                        :ARG0-of (s3 / say-01
                              :ARG1 (d2 / die-01
                                    :ARG1 (p / person
                                          :ARG1-of (l / liberal-02))))))))



",DiGraph with 11 nodes and 10 edges,group :polarity -,person,:consist-of,group :polarity -,person,:consist-of,g_0,g_0,p2_1,p2_1,animate
1286,0,364,"(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



","[{'ORG': 'The'}, {'ORG': 'New_York_Times'}, {'LOC': 'NY'}, {'ORG': 'Times'}, {'ORG': 'The'}, {'ORG': 'Washington_Post'}, {'LOC': 'Washington'}, {'ORG': 'Post'}, {'B_human': 'den'}, {'B_human': 'person'}, {'B_human': 'p'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'location'}]","(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



",DiGraph with 40 nodes and 39 edges,denizen,person,:consist-of,denizen,person,:consist-of,d_18,d_18,p2_19,p2_19,animate
1287,0,364,"(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



","[{'ORG': 'The'}, {'ORG': 'New_York_Times'}, {'LOC': 'NY'}, {'ORG': 'Times'}, {'ORG': 'The'}, {'ORG': 'Washington_Post'}, {'LOC': 'Washington'}, {'ORG': 'Post'}, {'B_human': 'den'}, {'B_human': 'person'}, {'B_human': 'p'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'location'}]","(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



",DiGraph with 40 nodes and 39 edges,denizen,pajamas,:mod,denizen,pajamas,:mod,d_18,d_18,p_24,p_24,inanimate
1288,0,364,"(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



","[{'ORG': 'The'}, {'ORG': 'New_York_Times'}, {'LOC': 'NY'}, {'ORG': 'Times'}, {'ORG': 'The'}, {'ORG': 'Washington_Post'}, {'LOC': 'Washington'}, {'ORG': 'Post'}, {'B_human': 'den'}, {'B_human': 'person'}, {'B_human': 'p'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'location'}]","(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



",DiGraph with 40 nodes and 39 edges,denizen,goodness,:mod,denizen,goodness,:mod,d_18,d_18,g2_25,g2_25,inanimate
1289,0,364,"(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



","[{'ORG': 'The'}, {'ORG': 'New_York_Times'}, {'LOC': 'NY'}, {'ORG': 'Times'}, {'ORG': 'The'}, {'ORG': 'Washington_Post'}, {'LOC': 'Washington'}, {'ORG': 'Post'}, {'B_human': 'den'}, {'B_human': 'person'}, {'B_human': 'p'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'location'}]","(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



",DiGraph with 40 nodes and 39 edges,person,basement,:mod,person,basement,:mod,p2_19,p2_19,b3_21,b3_21,inanimate
1290,0,364,"(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



","[{'ORG': 'The'}, {'ORG': 'New_York_Times'}, {'LOC': 'NY'}, {'ORG': 'Times'}, {'ORG': 'The'}, {'ORG': 'Washington_Post'}, {'LOC': 'Washington'}, {'ORG': 'Post'}, {'B_human': 'den'}, {'B_human': 'person'}, {'B_human': 'p'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'newspaper'}, {'W_Inanimate': 'location'}]","(d2 / dissect-01
      :ARG0 (w / we)
      :ARG1 (s / sermonette
            :source (a / and
                  :op1 (s2 / someone
                        :ARG1-of (r / roll-01
                              :ARG0 (a3 / and
                                    :op1 (n2 / newspaper :wiki ""The_New_York_Times"" :name (n3 / name :op1 ""NY"" :op2 ""Times""))
                                    :op2 (n / newspaper :wiki ""The_Washington_Post"" :name (n4 / name :op1 ""The"" :op2 ""Washington"" :op3 ""Post""))
                                    :op3 (d / denizen
                                          :consist-of (p2 / person
                                                :ARG0-of (b2 / blog-01)
                                                :mod (b3 / basement
                                                      :poss (g / granny)))
                                          :ARG1-of (l / load-01)
                                          :mod (p / pajamas)
                                          :mod (g2 / goodness)
                                          :ARG0-of (h / honest-01
                                                :ARG1-of (r2 / real-04))))
                              :duration (t4 / temporal-quantity :quant 1.5
                                    :unit (d3 / day)))
                        :ARG1-of (t2 / trash-01
                              :ARG0 a3)
                        :ARG1-of (b / burn-01
                              :ARG0 a3)
                        :ARG1-of (t3 / take-01
                              :ARG0 a3
                              :ARG3 (c2 / company
                                    :ARG0-of (c / clean-01))))))
      :location (h2 / here))



",DiGraph with 40 nodes and 39 edges,sermonette,and,:source,sermonette,and,:source,s_2,s_2,a_3,a_3,inanimate
1291,0,365,"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",[{'B_human': 'person'}],"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",DiGraph with 9 nodes and 8 edges,set,person,:consist-of,set,person,:consist-of,s2_3,s2_3,p2_4,p2_4,animate
1292,0,365,"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",[{'B_human': 'person'}],"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",DiGraph with 9 nodes and 8 edges,equate-01,somehow,:mod,equate-01,somehow,:mod,e_0,e_0,s_8,s_8,inanimate
1293,0,365,"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",[{'B_human': 'person'}],"(e / equate-01
      :ARG0 (y / you)
      :ARG1 (r / religion
            :poss (s2 / set
                  :consist-of (p2 / person
                        :ARG0-of (p / perpetrate-01))))
      :ARG2 (c / crime-02
            :mod (h / heinous))
      :mod (s / somehow))



",DiGraph with 9 nodes and 8 edges,crime-02,heinous,:mod,crime-02,heinous,:mod,c_6,c_6,h_7,h_7,inanimate
1294,0,366,"(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



","[{'B_human': 'p'}, {'PER': 'i'}]","(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



",DiGraph with 20 nodes and 19 edges,group,citizen,:consist-of,group,citizen,:consist-of,g_11,g_11,c_13,c_13,animate
1295,0,366,"(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



","[{'B_human': 'p'}, {'PER': 'i'}]","(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



",DiGraph with 20 nodes and 19 edges,group,small,:mod,group,small,:mod,g_11,g_11,s2_12,s2_12,inanimate
1296,0,366,"(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



","[{'B_human': 'p'}, {'PER': 'i'}]","(m / mean-02 :polarity -
      :ARG1 (i / it)
      :ARG2 (p / protect-01
            :ARG0 i
            :ARG1 (o2 / or
                  :op1 (p2 / pornographer)
                  :op2 (s / speak-01
                        :ARG1 (h / hate-01
                              :ARG1 (m2 / minority)))
                  :op3 (a / attack-01
                        :ARG1 (g / group
                              :mod (s2 / small)
                              :consist-of (c / citizen
                                    :ARG1-of (p3 / private-02)
                                    :mod (p4 / part :polarity -
                                          :part-of (d / discuss-01
                                                :ARG1 (t / that)))))
                        :ARG2-of (m3 / motivate-01
                              :ARG0 (p5 / politic))))))



",DiGraph with 20 nodes and 19 edges,citizen,part :polarity -,:mod,citizen,part :polarity -,:mod,c_13,c_13,p4_15,p4_15,inanimate
1297,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,hit-01,cause-01,:ARG1-of,hit-01,cause-01,cause-01,h2_5,c4_11,c4_11,h2_5,inanimate
1298,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,bunch,person,:consist-of,bunch,person,:consist-of,b2_7,b2_7,p_8,p_8,animate
1299,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,hit-01,cause-01,:ARG1-of,hit-01,cause-01,cause-01,h2_5,c4_11,c4_11,h2_5,inanimate
1300,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,person,despicable,:mod,person,despicable,:mod,p_8,p_8,d_9,d_9,inanimate
1301,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,right-05,fundamental,:mod,right-05,fundamental,:mod,r_15,r_15,f_25,f_25,inanimate
1302,0,367,"(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



","[{'B_human': 'person'}, {'W_Inanimate': 'location'}]","(c2 / contrast-01
      :ARG1 (h / have-03
            :ARG0 (j / jury)
            :ARG1 (c3 / chance-02
                  :ARG0 j
                  :ARG1 (h2 / hit-01
                        :ARG0 j
                        :ARG1 (b2 / bunch
                              :consist-of (p / person
                                    :mod (d / despicable)))
                        :direction (b / back)
                        :ARG1-of (c4 / cause-01
                              :ARG0 (b3 / believe-01
                                    :ARG0 p
                                    :ARG1 (h3 / horrific))))))
      :ARG2 (r / right-05
            :ARG2 (a / and
                  :op1 b3
                  :op2 (r2 / right-05
                        :ARG1 p
                        :ARG2 (e / express-01
                              :ARG0 p
                              :ARG1 b3)))
            :location (c / country
                  :mod (t / this))
            :mod (f / fundamental)))



",DiGraph with 26 nodes and 25 edges,country,this,:mod,country,this,:mod,c_23,c_23,t_24,t_24,inanimate
1303,0,368,"(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



","[{'LOC': 'Vietnam'}, {'LOC': 'Nam'}, {'MISC': 'Gulf_War'}, {'LOC': 'Gulf'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'B_human': 'person'}, {'B_human': 'clown'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'war'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'War'}]","(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



",DiGraph with 61 nodes and 60 edges,bunch,person,:consist-of,bunch,person,,b5_54,b5_54,p3_57,p_6,animate
1304,0,368,"(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



","[{'LOC': 'Vietnam'}, {'LOC': 'Nam'}, {'MISC': 'Gulf_War'}, {'LOC': 'Gulf'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'B_human': 'person'}, {'B_human': 'clown'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'war'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'War'}]","(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



",DiGraph with 61 nodes and 60 edges,parade-02,hooray,:mod,parade-02,hooray,:mod,p2_32,p2_32,h2_39,h2_39,inanimate
1305,0,368,"(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



","[{'LOC': 'Vietnam'}, {'LOC': 'Nam'}, {'MISC': 'Gulf_War'}, {'LOC': 'Gulf'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'B_human': 'person'}, {'B_human': 'clown'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'war'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'War'}]","(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



",DiGraph with 61 nodes and 60 edges,have-degree-91,even,:mod,have-rel-role-91,even,,h3_45,h_7,e2_60,e2_60,inanimate
1306,0,368,"(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



","[{'LOC': 'Vietnam'}, {'LOC': 'Nam'}, {'MISC': 'Gulf_War'}, {'LOC': 'Gulf'}, {'B_human': 'person'}, {'B_human': 'brother'}, {'B_human': 'person'}, {'B_human': 'clown'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'war'}, {'W_Inanimate': 'Gulf'}, {'W_Inanimate': 'War'}]","(a4 / and
      :op1 (b / be-located-at-91
            :ARG1 (i / i)
            :ARG2 (t / there)
            :time (a / and
                  :op1 (c / come-01
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG1 i
                                    :ARG2 (b2 / brother)))
                        :ARG3 (c2 / country :wiki ""Vietnam"" :name (n2 / name :op1 ""Nam""))
                        :direction (b3 / back)
                        :time (d / date-entity :year 1968)
                        :time (a2 / after
                              :op1 (t2 / tour-01 :quant 3
                                    :ARG0 p
                                    :ARG1 c2)))
                  :op2 (a3 / act-01
                        :ARG0 (c3 / community)
                        :ARG1 (r / resemble-01
                              :ARG2 (b4 / be-located-at-91 :polarity -
                                    :ARG1 p
                                    :ARG2 t)))))
      :op2 (h4 / have-concession-91
            :ARG1 (s / see-01
                  :ARG0 i
                  :ARG1 (p2 / parade-02
                        :ARG2 (w / war :wiki ""Gulf_War"" :name (n3 / name :op1 ""Gulf"" :op2 ""War"" :op3 ""I""))
                        :mod (h2 / hooray)))
            :ARG2 (c4 / contrast-01
                  :ARG1 (g / great
                        :domain s)
                  :ARG2 (m / make-02
                        :ARG0 p2
                        :ARG1 (h3 / have-degree-91
                              :ARG1 i
                              :ARG2 (m2 / mad-04
                                    :ARG0 p2
                                    :ARG1 i
                                    :ARG2 (a5 / and
                                          :op1 (g2 / go-through-20
                                                :ARG0 p
                                                :ARG1 a3)
                                          :op2 (b5 / bunch
                                                :mod (t3 / this)
                                                :time (n4 / now)
                                                :consist-of (p3 / person
                                                      :ARG0-of (c5 / clown-01)))))
                              :ARG3 (m3 / more)
                              :mod (e2 / even))))))



",DiGraph with 61 nodes and 60 edges,bunch,this,:mod,bunch,this,:mod,b5_54,b5_54,t3_55,t3_55,inanimate
1307,0,369,"(r / result-01
      :ARG1 (e / evaluate-01
            :ARG0 (p / panel
                  :consist-of (p2 / person
                        :ARG1-of (e2 / expert-01
                              :ARG2 a))
                  :mod (i2 / independent)))
      :ARG2 (d / decide-01
            :ARG3 (a / and
                  :op1 (h / halt-01
                        :ARG1 (p3 / program :wiki ""Constellation_program""
                              :name (n / name :op1 ""Constellation"")))
                  :op2 (m / move-01
                        :ARG1 (t / thing
                              :ARG1-of (a2 / appropriate-01))
                        :ARG2 (e3 / elsewhere
                              :location (b / budget-01
                                    :ARG2 (r2 / research-institute :wiki ""NASA""
                                          :name (n2 / name :op1 ""NASA""))))))))



","[{'ORG': 'NASA'}, {'ORG': 'NASA'}, {'B_human': 'person'}, {'B_human': 'expert'}, {'W_Inanimate': 'program'}, {'W_Inanimate': 'location'}]","(r / result-01
      :ARG1 (e / evaluate-01
            :ARG0 (p / panel
                  :consist-of (p2 / person
                        :ARG1-of (e2 / expert-01
                              :ARG2 a))
                  :mod (i2 / independent)))
      :ARG2 (d / decide-01
            :ARG3 (a / and
                  :op1 (h / halt-01
                        :ARG1 (p3 / program :wiki ""Constellation_program""
                              :name (n / name :op1 ""Constellation"")))
                  :op2 (m / move-01
                        :ARG1 (t / thing
                              :ARG1-of (a2 / appropriate-01))
                        :ARG2 (e3 / elsewhere
                              :location (b / budget-01
                                    :ARG2 (r2 / research-institute :wiki ""NASA""
                                          :name (n2 / name :op1 ""NASA""))))))))



",DiGraph with 23 nodes and 22 edges,panel,person,:consist-of,panel,person,:consist-of,p_2,p_2,p2_3,p2_3,animate
1308,0,369,"(r / result-01
      :ARG1 (e / evaluate-01
            :ARG0 (p / panel
                  :consist-of (p2 / person
                        :ARG1-of (e2 / expert-01
                              :ARG2 a))
                  :mod (i2 / independent)))
      :ARG2 (d / decide-01
            :ARG3 (a / and
                  :op1 (h / halt-01
                        :ARG1 (p3 / program :wiki ""Constellation_program""
                              :name (n / name :op1 ""Constellation"")))
                  :op2 (m / move-01
                        :ARG1 (t / thing
                              :ARG1-of (a2 / appropriate-01))
                        :ARG2 (e3 / elsewhere
                              :location (b / budget-01
                                    :ARG2 (r2 / research-institute :wiki ""NASA""
                                          :name (n2 / name :op1 ""NASA""))))))))



","[{'ORG': 'NASA'}, {'ORG': 'NASA'}, {'B_human': 'person'}, {'B_human': 'expert'}, {'W_Inanimate': 'program'}, {'W_Inanimate': 'location'}]","(r / result-01
      :ARG1 (e / evaluate-01
            :ARG0 (p / panel
                  :consist-of (p2 / person
                        :ARG1-of (e2 / expert-01
                              :ARG2 a))
                  :mod (i2 / independent)))
      :ARG2 (d / decide-01
            :ARG3 (a / and
                  :op1 (h / halt-01
                        :ARG1 (p3 / program :wiki ""Constellation_program""
                              :name (n / name :op1 ""Constellation"")))
                  :op2 (m / move-01
                        :ARG1 (t / thing
                              :ARG1-of (a2 / appropriate-01))
                        :ARG2 (e3 / elsewhere
                              :location (b / budget-01
                                    :ARG2 (r2 / research-institute :wiki ""NASA""
                                          :name (n2 / name :op1 ""NASA""))))))))



",DiGraph with 23 nodes and 22 edges,panel,independent,:mod,panel,independent,:mod,p_2,p_2,i2_6,i2_6,inanimate
1309,0,370,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,person,:consist-of,team,person,,t3_20,t_3,p4_21,p2_12,animate
1310,0,370,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,person,:consist-of,team,person,,t4_26,t_3,p6_27,p2_12,animate
1311,0,370,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,police,:consist-of,team,police,,t6_32,t_3,p8_38,p8_38,inanimate
1312,0,370,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,police,elite,:mod,police,elite,:mod,p8_38,p8_38,e2_39,e2_39,inanimate
1313,0,370,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,skill,technical,:mod,skill,technical,:mod,s5_43,s5_43,t7_44,t7_44,inanimate
1314,0,371,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,person,:consist-of,team,person,,t3_20,t_3,p4_21,p2_12,animate
1315,0,371,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,person,:consist-of,team,person,,t4_26,t_3,p6_27,p2_12,animate
1316,0,371,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,team,police,:consist-of,team,police,,t6_32,t_3,p8_38,p8_38,inanimate
1317,0,371,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,police,elite,:mod,police,elite,:mod,p8_38,p8_38,e2_39,e2_39,inanimate
1318,0,371,"(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



","[{'ORG': 'Cobra'}, {'LOC': 'Austria'}, {'LOC': 'Austria'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'team'}, {'W_Inanimate': 'country'}]","(o / or
      :op2 (r / refuse-01
            :ARG1 (a / and
                  :op1 (t / team
                        :ARG0-of (s / specialize-01
                              :ARG1 (a2 / and
                                    :op1 (p / purify-01
                                          :ARG1 (w / water))
                                    :op2 (d / decontaminate-01
                                          :ARG1 w)))
                        :purpose (r2 / relieve-01
                              :ARG1 (d2 / disaster)))
                  :op2 (p2 / person :quant 10
                        :ARG1-of (e / expert-01
                              :ARG2 (r3 / relieve-01
                                    :ARG1 d2)))
                  :op3 (t2 / thing
                        :ARG0-of (p3 / pump-01
                              :ARG2 w))
                  :op4 (t3 / team
                        :consist-of (p4 / person :quant 4)
                        :purpose (s2 / support-01
                              :ARG0 t3
                              :ARG1 (p5 / psychology)))
                  :op5 (t4 / team
                        :consist-of (p6 / person :quant 6)
                        :purpose (s3 / support-01
                              :ARG0 t4
                              :ARG1 (c2 / communicate-01)))
                  :op6 (t6 / team :wiki -
                        :name (n2 / name :op1 ""Cobra"")
                        :ARG0-of (s4 / specialize-01
                              :ARG1 (p7 / protect-01))
                        :consist-of (p8 / police
                              :mod (e2 / elite)))
                  :op7 (t5 / troop :quant 100
                        :ARG0-of (h / have-03
                              :ARG1 (s5 / skill
                                    :mod (t7 / technical)))))
            :ARG2 (c / country :wiki ""Austria""
                  :name (n / name :op1 ""Austria""))))



",DiGraph with 49 nodes and 48 edges,skill,technical,:mod,skill,technical,:mod,s5_43,s5_43,t7_44,t7_44,inanimate
1319,0,372,"(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



",DiGraph with 34 nodes and 33 edges,generation,person,:consist-of,generation,person,:consist-of,g_18,g_18,p2_20,p2_20,animate
1320,0,372,"(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



",DiGraph with 34 nodes and 33 edges,borrow-01,just,:mod,borrow-01,just,:mod,b_1,b_1,j_9,j_9,inanimate
1321,0,372,"(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



",DiGraph with 34 nodes and 33 edges,money,more,:mod,money,more,:mod,m_3,m_3,m2_4,m2_4,inanimate
1322,0,372,"(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



",DiGraph with 34 nodes and 33 edges,fund,this,:mod,fund,this,:mod,f_13,f_13,t_14,t_14,inanimate
1323,0,372,"(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (b / borrow-01
            :ARG0 (w / we)
            :ARG1 (m / money
                  :mod (m2 / more))
            :ARG2 (c / country :wiki ""China""
                  :name (n / name :op1 ""China""))
            :mod (j / just)
            :purpose (p / put-01
                  :ARG0 w
                  :ARG1 m
                  :ARG2 (f / fund
                        :mod (t / this))))
      :op2 (l / let-01
            :ARG0 w
            :ARG1 (w2 / watch-01
                  :ARG0 (g / generation
                        :time (f2 / future)
                        :consist-of (p2 / person
                              :mod (c3 / country :wiki ""United_States""
                                    :name (n2 / name :op1 ""United"" :op2 ""States""))))
                  :ARG1 (s / slide-01
                        :ARG1 (d / deep-02
                              :ARG1 c3
                              :ARG2 (d2 / debt)
                              :ARG2-of (h / have-degree-91
                                    :ARG1 c3
                                    :ARG3 (m3 / more))))))
      :polarity (a2 / amr-unknown))



",DiGraph with 34 nodes and 33 edges,person,country,:mod,person,country,,p2_20,p2_20,c3_21,c_5,inanimate
1324,0,373,"(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



","[{'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'W'}, {'MISC': 'habism'}, {'MISC': 'W'}, {'MISC': 'ahhabism'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'MISC': 'Ji'}, {'MISC': 'Ji'}, {'B_human': 'ben'}, {'B_human': 'friend'}, {'B_human': 'boy'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



",DiGraph with 33 nodes and 32 edges,generation,boy,:consist-of,generation,boy,:consist-of,g_21,g_21,b2_23,b2_23,animate
1325,0,373,"(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



","[{'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'W'}, {'MISC': 'habism'}, {'MISC': 'W'}, {'MISC': 'ahhabism'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'MISC': 'Ji'}, {'MISC': 'Ji'}, {'B_human': 'ben'}, {'B_human': 'friend'}, {'B_human': 'boy'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



",DiGraph with 33 nodes and 32 edges,benefactor,country,:mod,benefactor,country,:mod,b_4,b_4,c_5,c_5,inanimate
1326,0,373,"(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



","[{'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'W'}, {'MISC': 'habism'}, {'MISC': 'W'}, {'MISC': 'ahhabism'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'MISC': 'Ji'}, {'MISC': 'Ji'}, {'B_human': 'ben'}, {'B_human': 'friend'}, {'B_human': 'boy'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



",DiGraph with 33 nodes and 32 edges,benefactor,religious-group,:mod,benefactor,religious-group,:mod,b_4,b_4,r_10,r_10,inanimate
1327,0,373,"(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



","[{'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'W'}, {'MISC': 'habism'}, {'MISC': 'W'}, {'MISC': 'ahhabism'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'MISC': 'Ji'}, {'MISC': 'Ji'}, {'B_human': 'ben'}, {'B_human': 'friend'}, {'B_human': 'boy'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



",DiGraph with 33 nodes and 32 edges,boy,c2,:mod,boy,c2,:mod,b2_23,b2_23,c2_24,c2_24,inanimate
1328,0,373,"(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



","[{'LOC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'Saudi'}, {'LOC': 'Arabia'}, {'MISC': 'W'}, {'MISC': 'habism'}, {'MISC': 'W'}, {'MISC': 'ahhabism'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'MISC': 'Ji'}, {'MISC': 'Ji'}, {'B_human': 'ben'}, {'B_human': 'friend'}, {'B_human': 'boy'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (t / thank-01)
      :ARG2 (b / benefactor
            :mod (c / country :wiki ""Saudi_Arabia""
                  :name (n / name :op1 ""Saudi"" :op2 ""Arabia""))
            :mod (r / religious-group :wiki ""Wahhabism""
                  :name (n2 / name :op1 ""Wahhabism""))
            :ARG0-of (h / have-rel-role-91
                  :ARG1 (c2 / country :wiki ""Afghanistan""
                        :name (n3 / name :op1 ""Afghanistan""))
                  :ARG2 (f / friend))
            :ARG0-of (p / put-01
                  :ARG1 (g / generation :quant 3
                        :consist-of (b2 / boy
                              :mod c2))
                  :ARG2 (t2 / through
                        :op1 (i3 / indoctrinate-01
                              :ARG0 b
                              :ARG1 g
                              :ARG2 (r2 / religious-group :wiki ""Jihadism""
                                    :name (n5 / name :op1 ""Jihadism"")
                                    :mod (m / militant)))))))



",DiGraph with 33 nodes and 32 edges,religious-group,militant,:mod,religious-group,militant,,r2_29,r_10,m_32,m_32,inanimate
1329,0,374,"(s / send-01
      :ARG0 (c / city :wiki ""Wichita,_Kansas""
            :name (n / name :op1 ""Wichita""))
      :ARG1 (c2 / contingent
            :consist-of (p / person :quant 400)))



","[{'LOC': 'Wichita'}, {'LOC': 'Kansas'}, {'LOC': 'Wichita'}, {'B_human': 'person'}, {'W_Inanimate': 'city'}, {'W_Animate': 'person'}]","(s / send-01
      :ARG0 (c / city :wiki ""Wichita,_Kansas""
            :name (n / name :op1 ""Wichita""))
      :ARG1 (c2 / contingent
            :consist-of (p / person :quant 400)))



",DiGraph with 8 nodes and 7 edges,contingent,person,:consist-of,contingent,person,:consist-of,c2_5,c2_5,p_6,p_6,animate
1330,0,375,"(h / have-degree-91
      :ARG1 s
      :ARG2 (g / good-02
            :ARG1 (s / slave
                  :consist-of (s2 / slave
                        :ARG0-of (k / know-01 :polarity -
                              :ARG1 (e / enslave-01
                                    :ARG1 s2)))))
      :ARG3 (m / most))



","[{'B_human': 'slave'}, {'B_human': 'slave'}]","(h / have-degree-91
      :ARG1 s
      :ARG2 (g / good-02
            :ARG1 (s / slave
                  :consist-of (s2 / slave
                        :ARG0-of (k / know-01 :polarity -
                              :ARG1 (e / enslave-01
                                    :ARG1 s2)))))
      :ARG3 (m / most))



",DiGraph with 10 nodes and 9 edges,slave,slave,:consist-of,slave,slave,,s_3,s_3,s2_4,s_3,animate
1331,0,376,"(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



","[{'B_human': 'ben'}, {'B_human': 'person'}]","(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



",DiGraph with 10 nodes and 9 edges,between,chasm,:consist-of,between,chasm,:consist-of,b_1,b_1,c2_5,c2_5,inanimate
1332,0,376,"(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



","[{'B_human': 'ben'}, {'B_human': 'person'}]","(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



",DiGraph with 10 nodes and 9 edges,chasm,bit,:mod,chasm,bit,:mod,c2_5,c2_5,b2_6,b2_6,inanimate
1333,0,376,"(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



","[{'B_human': 'ben'}, {'B_human': 'person'}]","(c / contrast-01
      :ARG2 (b / between
            :op1 (w / welfare)
            :op2 (l / live-01
                  :manner (o / okay-04))
            :consist-of (c2 / chasm
                  :mod (b2 / bit
                        :mod (q / quite))
                  :beneficiary (p / person
                        :quant (l2 / lot)))))



",DiGraph with 10 nodes and 9 edges,bit,quite,:mod,bit,quite,:mod,b2_6,b2_6,q_7,q_7,inanimate
1334,0,377,"(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



",DiGraph with 18 nodes and 17 edges,payroll,person,:consist-of,payroll,person,:consist-of,p_1,p_1,p2_3,p2_3,animate
1335,0,377,"(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



",DiGraph with 18 nodes and 17 edges,week,this,:mod,week,this,:mod,w_5,w_5,t_6,t_6,inanimate
1336,0,377,"(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (p / payroll
            :poss (i / i)
            :consist-of (p2 / person :quant 62)
            :time (w / week
                  :mod (t / this)))
      :op2 (i2 / include-91
            :ARG1 (p3 / person
                  :ARG2-of (p4 / pay-01
                        :ARG1 (w2 / wage
                              :mod (m / minimum)))
                  :ARG2-of (t2 / tip-02 :polarity -
                        :prep-in-addition-to w2)
                  :quant (o / only :op1 2))
            :ARG2 p2))



",DiGraph with 18 nodes and 17 edges,wage,minimum,:mod,wage,minimum,:mod,w2_10,w2_10,m_11,m_11,inanimate
1337,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,family,member,:consist-of,family,member,:consist-of,f4_34,f4_34,m4_35,m4_35,animate
1338,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,work-01,and,:consist-of,work-01,and,,w3_39,w2_2,a4_40,a4_40,inanimate
1339,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,income,full-time,:mod,income,full-time,:mod,i2_21,i2_21,f_29,f_29,inanimate
1340,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,line,poor,:mod,line,poor,:mod,l2_31,l2_31,p2_32,p2_32,inanimate
1341,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,line,federal,:mod,line,federal,:mod,l2_31,l2_31,f3_33,f3_33,inanimate
1342,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,schedule,work-01,:mod,schedule,work-01,,s3_38,s3_38,w3_39,w2_2,inanimate
1343,0,378,"(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



","[{'B_human': 'person'}, {'B_human': 'member'}]","(e / earn-01
      :ARG0 (p / person
            :ARG0-of (w2 / work-01)
            :quant (a / approximately :op1 30000000)
            :age (b / between
                        :op1 (t4 / temporal-quantity :quant 18
                              :unit (y / year))
                        :op2 (t5 / temporal-quantity :quant 64
                              :unit (y2 / year))))
      :ARG1 (r / rate-entity-91
            :ARG1 (l / less-than
                  :op1 (m / monetary-quantity :quant 9
                        :unit (d / dollar)))
            :ARG2 (t / temporal-quantity :quant 1
                  :unit (h / hour))
            :ARG1-of (e2 / equal-01
                  :ARG2 (i2 / income
                        :quant (m2 / monetary-quantity :quant 18800
                              :unit (d2 / dollar)
                              :ARG1-of (r2 / rate-entity-91
                                    :ARG2 (t6 / temporal-quantity :quant 1
                                          :unit (y3 / year))))
                        :mod (f / full-time)
                        :ARG0-of (m3 / mark-01
                              :ARG1 (l2 / line
                                    :mod (p2 / poor)
                                    :mod (f3 / federal)
                                    :topic (f4 / family
                                          :consist-of (m4 / member :quant 4)))))
                  :concession (a3 / assume-02
                        :ARG1 (s3 / schedule
                              :mod (w3 / work-01
                                    :consist-of (a4 / and
                                          :op1 (r3 / rate-entity-91
                                                :ARG1 (t2 / temporal-quantity :quant 40
                                                      :unit (h2 / hour))
                                                :ARG2 (t7 / temporal-quantity :quant 1
                                                      :unit (w4 / week)))
                                          :op2 (t3 / temporal-quantity :quant 52
                                                :unit (w / week))))
                              :mod (f2 / full-time)))))
      :ARG3 (j / job
            :poss p)
      :ARG1-of (s / say-01
            :ARG0 (s2 / source
                  :quant (n / numerous))))



",DiGraph with 57 nodes and 56 edges,schedule,full-time,:mod,schedule,full-time,,s3_38,s3_38,f2_51,f_29,inanimate
1344,0,379,"(m / make-up-07
      :ARG0 (a / and
            :op1 (p / person
                  :ARG1-of (e / employ-01)
                  :quant (r / roughly :op1 135000000))
            :op2 (p2 / person
                  :ARG1-of (e2 / employ-01 :polarity -)
                  :quant (r2 / roughly :op1 6000000)))
      :ARG1 (f / force
            :ARG1-of (l / labor-01)
            :consist-of (p3 / person :quant 141000000))
      :time (d2 / date-entity :year 2000)
      :ARG1-of (a2 / average-04))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(m / make-up-07
      :ARG0 (a / and
            :op1 (p / person
                  :ARG1-of (e / employ-01)
                  :quant (r / roughly :op1 135000000))
            :op2 (p2 / person
                  :ARG1-of (e2 / employ-01 :polarity -)
                  :quant (r2 / roughly :op1 6000000)))
      :ARG1 (f / force
            :ARG1-of (l / labor-01)
            :consist-of (p3 / person :quant 141000000))
      :time (d2 / date-entity :year 2000)
      :ARG1-of (a2 / average-04))



",DiGraph with 18 nodes and 17 edges,force,person,:consist-of,force,person,,f_11,f_11,p3_13,p_2,animate
1345,0,380,"(c / come-03
      :ARG1 (i / i)
      :ARG2 (p / pragmatic
            :domain (l / line
                  :consist-of (p2 / person))
            :topic (d / die-01)
            :degree (v / very)))



","[{'B_human': 'person'}, {'PER': 'i'}]","(c / come-03
      :ARG1 (i / i)
      :ARG2 (p / pragmatic
            :domain (l / line
                  :consist-of (p2 / person))
            :topic (d / die-01)
            :degree (v / very)))



",DiGraph with 7 nodes and 6 edges,line,person,:consist-of,line,person,:consist-of,l_3,l_3,p2_4,p2_4,animate
1346,0,381,"(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



","[{'B_human': 'politician'}, {'B_human': 'person'}]","(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



",DiGraph with 30 nodes and 29 edges,block,person,:consist-of,block,person,:consist-of,b2_20,b2_20,p4_21,p4_21,animate
1347,0,381,"(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



","[{'B_human': 'politician'}, {'B_human': 'person'}]","(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



",DiGraph with 30 nodes and 29 edges,effort-01,medieval,:mod,effort-01,medieval,:mod,e_8,e_8,m_11,m_11,inanimate
1348,0,381,"(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



","[{'B_human': 'politician'}, {'B_human': 'person'}]","(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



",DiGraph with 30 nodes and 29 edges,encourage-01,only,:mod,encourage-01,only,:mod,e2_12,e2_12,o_14,o_14,inanimate
1349,0,381,"(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



","[{'B_human': 'politician'}, {'B_human': 'person'}]","(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



",DiGraph with 30 nodes and 29 edges,encourage-01,only,:mod,encourage-01,only,:mod,e4_15,e2_12,o2_29,o_14,inanimate
1350,0,381,"(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



","[{'B_human': 'politician'}, {'B_human': 'person'}]","(m2 / multi-sentence
      :snt1 (h / have-concession-91
            :ARG1 (c / continue-01
                  :ARG1 (s / shine-01
                        :ARG1 (l / light
                              :ARG0-of (b / bright-02)
                              :quant (s4 / some))
                        :direction (t / through
                              :op1 (e / effort-01
                                    :ARG0 (r / right-08
                                          :ARG2 (r2 / religion))
                                    :mod (m / medieval)
                                    :ARG1-of (e2 / encourage-01
                                          :degree (f / further)
                                          :mod (o / only)))))))
      :snt2 (e4 / encourage-01
            :ARG0 (a / attempt-01
                  :ARG0 (p2 / politician)
                  :ARG1 (p3 / pander-01
                        :ARG0 p2
                        :ARG1 (b2 / block
                              :consist-of (p4 / person
                                    :ARG0-of (v2 / vote-01)))
                        :purpose (e3 / expediency
                                    :mod (p / politics)))
                  :ARG0-of (s2 / see-01
                        :ARG1-of (s3 / short-06)))
            :ARG1 (t2 / this)
            :degree (f2 / further)
            :mod (o2 / only)))



",DiGraph with 30 nodes and 29 edges,person,politics,:mod,person,politics,:mod,p4_21,p4_21,p_24,p_24,inanimate
1351,0,382,"(r / react-01
      :ARG0 (i2 / it)
      :ARG1 (a / and
            :op1 (p / pulp
                  :consist-of (w / wood))
            :op2 (s / small-molecule :wiki ""Sulfuric_acid""
                  :name (n / name :op1 ""H2SO4""))
            :op3 (c / catalyze-01
                  :ARG0 (s2 / small-molecule :wiki ""Zinc""
                        :name (n2 / name :op1 ""Zinc""))))
      :ARG2 (m / make-01
            :ARG0 i2
            :ARG1 (s3 / small-molecule :wiki ""Rayon""
                  :name (n3 / name :op1 ""Rayon"")))
      :mod (u / usual)
      :location (r2 / retort))



","[{'MISC': 'Sul'}, {'MISC': 'acid'}, {'MISC': 'Z'}, {'MISC': 'Z'}, {'ORG': 'Ray'}, {'MISC': 'on'}, {'ORG': 'Rayon'}, {'W_Inanimate': 'location'}]","(r / react-01
      :ARG0 (i2 / it)
      :ARG1 (a / and
            :op1 (p / pulp
                  :consist-of (w / wood))
            :op2 (s / small-molecule :wiki ""Sulfuric_acid""
                  :name (n / name :op1 ""H2SO4""))
            :op3 (c / catalyze-01
                  :ARG0 (s2 / small-molecule :wiki ""Zinc""
                        :name (n2 / name :op1 ""Zinc""))))
      :ARG2 (m / make-01
            :ARG0 i2
            :ARG1 (s3 / small-molecule :wiki ""Rayon""
                  :name (n3 / name :op1 ""Rayon"")))
      :mod (u / usual)
      :location (r2 / retort))



",DiGraph with 22 nodes and 21 edges,pulp,wood,:consist-of,pulp,wood,:consist-of,p_3,p_3,w_4,w_4,inanimate
1352,0,382,"(r / react-01
      :ARG0 (i2 / it)
      :ARG1 (a / and
            :op1 (p / pulp
                  :consist-of (w / wood))
            :op2 (s / small-molecule :wiki ""Sulfuric_acid""
                  :name (n / name :op1 ""H2SO4""))
            :op3 (c / catalyze-01
                  :ARG0 (s2 / small-molecule :wiki ""Zinc""
                        :name (n2 / name :op1 ""Zinc""))))
      :ARG2 (m / make-01
            :ARG0 i2
            :ARG1 (s3 / small-molecule :wiki ""Rayon""
                  :name (n3 / name :op1 ""Rayon"")))
      :mod (u / usual)
      :location (r2 / retort))



","[{'MISC': 'Sul'}, {'MISC': 'acid'}, {'MISC': 'Z'}, {'MISC': 'Z'}, {'ORG': 'Ray'}, {'MISC': 'on'}, {'ORG': 'Rayon'}, {'W_Inanimate': 'location'}]","(r / react-01
      :ARG0 (i2 / it)
      :ARG1 (a / and
            :op1 (p / pulp
                  :consist-of (w / wood))
            :op2 (s / small-molecule :wiki ""Sulfuric_acid""
                  :name (n / name :op1 ""H2SO4""))
            :op3 (c / catalyze-01
                  :ARG0 (s2 / small-molecule :wiki ""Zinc""
                        :name (n2 / name :op1 ""Zinc""))))
      :ARG2 (m / make-01
            :ARG0 i2
            :ARG1 (s3 / small-molecule :wiki ""Rayon""
                  :name (n3 / name :op1 ""Rayon"")))
      :mod (u / usual)
      :location (r2 / retort))



",DiGraph with 22 nodes and 21 edges,react-01,usual,:mod,react-01,usual,:mod,r_0,r_0,u_20,u_20,inanimate
1353,0,383,"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",[],"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",DiGraph with 14 nodes and 13 edges,part,d,:consist-of,part,d,:consist-of,p_9,p_9,d_11,d_11,inanimate
1354,0,383,"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",[],"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",DiGraph with 14 nodes and 13 edges,expectancy,life,:mod,expectancy,life,:mod,e_3,e_3,l_4,l_4,inanimate
1355,0,383,"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",[],"(r / reduce-01
      :ARG0 (d / dioxin)
      :ARG1 (a / and
            :op1 (e / expectancy
                  :mod (l / life
                        :mod (h / human)))
            :op2 (q / quality
                  :poss (l2 / live-01)))
      :concession (r2 / rate-entity-91
            :ARG1 (p / part :quant 1
                  :consist-of d)
            :ARG2 (p2 / part :quant 1000000000)))



",DiGraph with 14 nodes and 13 edges,life,human,:mod,life,human,:mod,l_4,l_4,h_5,h_5,inanimate
1356,0,384,"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",[],"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",DiGraph with 39 nodes and 38 edges,area-quantity,p2,:consist-of,area-quantity,p2,:consist-of,a2_17,a2_17,p2_20,p2_20,inanimate
1357,0,384,"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",[],"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",DiGraph with 39 nodes and 38 edges,make-01,have-degree-91,:condition,make-01,have-degree-91,,m_25,m4_3,h2_35,h2_35,inanimate
1358,0,384,"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",[],"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",DiGraph with 39 nodes and 38 edges,panel,solar,:mod,panel,solar,:mod,p_5,p_5,s3_6,s3_6,inanimate
1359,0,384,"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",[],"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",DiGraph with 39 nodes and 38 edges,panel,cheap,:mod,panel,cheap,:mod,p_5,p_5,c4_7,c4_7,inanimate
1360,0,384,"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",[],"(c / contrast-01
      :ARG1 (c2 / claim-01
            :ARG0 (s2 / someone)
            :ARG1 (m4 / make-01
                  :ARG0 s2
                  :ARG1 (p / panel
                        :mod (s3 / solar)
                        :mod (c4 / cheap)
                        :ARG1-of (e / equal-01
                              :ARG2 (p2 / photovoltaic)))
                  :time (a3 / about-to))
            :frequency (r / rate-entity-91
                  :ARG2 (t2 / temporal-quantity)
                  :ARG3 (f2 / few
                        :op1 (m8 / month))))
      :ARG2 (a / and
            :op1 (c3 / cost-01
                  :ARG1 (a2 / area-quantity :quant 1
                        :unit (s / square-yard)
                        :consist-of p2)
                  :ARG2 (m2 / monetary-quantity :quant 150
                        :unit (d / dollar))
                  :mod (s5 / still))
            :op2 (m / make-01
                  :ARG0 p2
                  :ARG1 (r3 / rate-entity-91
                        :ARG1 (m6 / monetary-quantity :quant 10
                              :unit (c5 / cent))
                        :ARG2 (e3 / electricity)
                        :ARG3 (t / temporal-quantity :quant 1
                              :unit (d3 / day)))
                  :condition (h2 / have-degree-91
                        :ARG1 d3
                        :ARG2 (s4 / sunny)
                        :ARG3 (m3 / most)))))



",DiGraph with 39 nodes and 38 edges,cost-01,still,:mod,cost-01,still,:mod,c3_16,c3_16,s5_24,s5_24,inanimate
1361,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,load,arm,:consist-of,load,arm,:consist-of,l3_36,l3_36,a2_38,a2_38,inanimate
1362,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,cache,gun,:mod,cache,gun,:mod,c4_9,c4_9,g_13,g_13,inanimate
1363,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,base-01,country,:mod,base-01,country,,b_21,b_21,c2_26,c_17,inanimate
1364,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,load,plane,:mod,load,plane,:mod,l3_36,l3_36,p2_39,p2_39,inanimate
1365,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,week,last,:mod,week,last,:mod,w2_43,w2_43,l_44,l_44,inanimate
1366,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,fly-01,country,:destination,fly-01,country,:destination,f_7,f_7,c_17,c_17,inanimate
1367,0,385,"(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'MISC': 'AK'}, {'MISC': 'AK'}, {'LOC': 'Iraq'}, {'LOC': 'Iraq'}, {'LOC': 'Bosnia_and_Herzegovina'}, {'LOC': 'Bosnia'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'U.S.'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(s / say-01
      :ARG0 (o / organization :wiki ""Amnesty_International"" :name (n4 / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG1 (c5 / contrast-01
            :ARG1 (f / fly-01
                  :ARG1 (t2 / thing
                        :domain (c4 / cache
                              :quant (m / mass-quantity :quant 99
                                    :unit (t / ton))
                              :mod (g / gun :wiki ""AK-47"" :name (n5 / name :op1 ""AK47""))))
                  :destination (c / country :wiki ""Iraq"" :name (n / name :op1 ""Iraq""))
                  :source (b / base-01
                        :location (c3 / country :wiki ""Bosnia_and_Herzegovina"" :name (n3 / name :op1 ""Bosnia""))
                        :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""U.S."")))
                  :time (d / date-entity :year 2004)
                  :manner (s2 / secret))
            :ARG2 (p / prove-01 :polarity -
                  :ARG1 (a / arrive-01
                        :ARG1 (l3 / load :quant 4
                              :consist-of (a2 / arm)
                              :mod (p2 / plane))
                        :time (e / ever))))
      :medium (r / report-01
            :ARG1-of (r2 / release-01
                  :time (w2 / week
                        :mod (l / last)))))



",DiGraph with 45 nodes and 44 edges,fly-01,base-01,:source,fly-01,base-01,:source,f_7,f_7,b_21,b_21,inanimate
1368,0,386,"(k / know-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (l / love-01
                  :ARG0 (i / i)
                  :ARG1 (a2 / and
                        :op1 y
                        :op2 (p / person :wiki -
                              :name (n / name :op1 ""Nimh""))))
            :op2 (a3 / appreciate-02
                  :ARG0 i
                  :ARG1 (b / both
                        :consist-of a2))))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(k / know-01
      :ARG0 (y / you)
      :ARG1 (a / and
            :op1 (l / love-01
                  :ARG0 (i / i)
                  :ARG1 (a2 / and
                        :op1 y
                        :op2 (p / person :wiki -
                              :name (n / name :op1 ""Nimh""))))
            :op2 (a3 / appreciate-02
                  :ARG0 i
                  :ARG1 (b / both
                        :consist-of a2))))



",DiGraph with 15 nodes and 14 edges,both,a2,:consist-of,both,a2,:consist-of,b_13,b_13,a2_14,a2_14,inanimate
1369,0,387,"(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'England'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'grandfather'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



",DiGraph with 35 nodes and 34 edges,group,person,:consist-of,group,person,,g2_27,g2_27,p3_28,p_14,animate
1370,0,387,"(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'England'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'grandfather'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



",DiGraph with 35 nodes and 34 edges,pride-01,that,:mod,pride-01,that,:mod,p2_21,p2_21,t2_23,t2_23,inanimate
1371,0,387,"(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'England'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'grandfather'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



",DiGraph with 35 nodes and 34 edges,tradition,certain,:mod,tradition,certain,:mod,t_24,t_24,c5_25,c5_25,inanimate
1372,0,387,"(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



","[{'LOC': 'United_Kingdom'}, {'LOC': 'England'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'grandfather'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(f / find-02
      :ARG0 (i / i)
      :ARG1 (s / shock-01
            :ARG0 (m / manage-02
                  :ARG0 (f2 / family
                        :quant (m2 / most)
                        :ARG1-of (m3 / move-01
                              :ARG2 (c / country :wiki ""United_Kingdom""
                                    :name (n / name :op1 ""England""))
                              :time (d / date-entity :decade 1960))
                        :ARG1-of (r / resemble-01
                              :ARG2 (p / person
                                    :ARG0-of (h / have-rel-role-91
                                          :ARG1 i
                                          :ARG2 (g / grandfather)))))
                  :ARG1 (m4 / maintain-01
                        :ARG0 f2
                        :ARG1 (a2 / and
                              :op1 (p2 / pride-01
                                    :ARG2 (c4 / culture)
                                    :mod (t2 / that))
                              :op2 (t / tradition
                                    :mod (c5 / certain))
                              :ARG1-of (l / lose-02
                                    :ARG0 (g2 / group
                                          :consist-of (p3 / person
                                                :location (c2 / country :wiki ""Pakistan""
                                                      :name (n2 / name :op1 ""Pakistan"")))
                                          :mod (c3 / certain)))))))
      :ARG1-of (a / actual-02))



",DiGraph with 35 nodes and 34 edges,group,certain,:mod,group,certain,,g2_27,g2_27,c3_33,c5_25,inanimate
1373,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,have-03,cause-01,:ARG0-of,have-03,cause-01,cause-01,h_28,c5_46,c5_46,h_28,inanimate
1374,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,majority,person,:consist-of,majority,person,:consist-of,m4_23,m4_23,p_24,p_24,animate
1375,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,have-03,cause-01,:ARG0-of,have-03,cause-01,cause-01,h_28,c5_46,c5_46,h_28,inanimate
1376,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,option,again,:mod,option,again,:mod,o_2,o_2,a4_17,a4_17,inanimate
1377,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,state,region,:mod,state,region,:mod,s_9,s_9,r2_10,r2_10,inanimate
1378,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,law,r2,:mod,law,r2,:mod,l_13,l_13,r2_14,r2_14,inanimate
1379,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,person,faith,:mod,person,faith,,p3_33,p_24,f_34,f_34,inanimate
1380,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,faith,religious-group,:mod,faith,religious-group,:mod,f_34,f_34,r_35,r_35,inanimate
1381,0,388,"(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



","[{'LOC': 'United_States'}, {'LOC': 'USA'}, {'LOC': 'India'}, {'LOC': 'India'}, {'LOC': 'Islam'}, {'MISC': 'Muslim'}, {'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(m / multi-sentence
      :snt1 (h4 / have-degree-91
            :ARG1 (o / option
                  :domain (m3 / model-01
                        :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""USA""))
                        :accompanier (a / and
                              :op1 (s / state
                                    :mod (r2 / region)
                                    :ARG1-of (s2 / strong-02)
                                    :ARG0-of (h2 / have-03
                                          :ARG1 (l / law
                                                :mod r2)))
                              :op2 (c4 / center
                                    :ARG1-of (w2 / weak-02))))
                  :mod (a4 / again))
            :ARG2 (g / good-02
                  :ARG1 o)
            :ARG3 (m2 / most))
      :snt2 (w / want-01 :polarity -
            :ARG0 (m4 / majority
                  :consist-of (p / person))
            :ARG1 (p2 / partition-01)
            :time (d / date-entity :year 1947))
      :snt3 (h / have-03
            :ARG0 (c2 / country :wiki ""India"" :name (n2 / name :op1 ""India""))
            :ARG1 (p3 / person
                  :mod (f / faith
                        :mod (r / religious-group :wiki ""Islam"" :name (n3 / name :op1 ""Muslim"")))
                  :ARG1-of (h3 / have-quant-91
                        :ARG2 (m5 / many)
                        :ARG3 (e / equal)
                        :ARG4 (c3 / country :wiki ""Pakistan"" :name (n4 / name :op1 ""Pakistan""))))
            :ARG0-of (c5 / cause-01
                  :ARG1 (p4 / point-03
                        :ARG2 (a3 / amr-unknown
                              :mod (j / jeez))))))



",DiGraph with 50 nodes and 49 edges,amr-unknown,jeez,:mod,amr-unknown,jeez,:mod,a3_48,a3_48,j_49,j_49,inanimate
1382,0,389,"(s / say-01
      :ARG0 (l / logic
            :poss (i / i))
      :ARG1 (r / recommend-01
            :ARG1 (p / punish-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / person
                        :ARG0-of (p3 / perpetrate-01))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (p4 / punish-01
                              :ARG1 (g / group
                                    :consist-of (p5 / person)
                                    :ARG0-of (i3 / include-01
                                          :ARG1 p2)))))
            :ARG2 y))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}]","(s / say-01
      :ARG0 (l / logic
            :poss (i / i))
      :ARG1 (r / recommend-01
            :ARG1 (p / punish-01
                  :ARG0 (y / you)
                  :ARG1 (p2 / person
                        :ARG0-of (p3 / perpetrate-01))
                  :ARG1-of (i2 / instead-of-91
                        :ARG2 (p4 / punish-01
                              :ARG1 (g / group
                                    :consist-of (p5 / person)
                                    :ARG0-of (i3 / include-01
                                          :ARG1 p2)))))
            :ARG2 y))



",DiGraph with 15 nodes and 14 edges,group,person,:consist-of,group,person,,g_10,g_10,p5_11,p2_6,animate
1383,0,390,"(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



","[{'LOC': 'Republic'}, {'LOC': 'of'}, {'LOC': 'Ireland'}, {'LOC': 'Ireland'}, {'LOC': 'United_Kingdom'}, {'LOC': 'UK'}, {'LOC': 'Northern_Ireland'}, {'LOC': 'Northern'}, {'LOC': 'Ireland'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



",DiGraph with 24 nodes and 23 edges,person,person,:consist-of,person,person,,p_16,p_16,p2_18,p_16,animate
1384,0,390,"(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



","[{'LOC': 'Republic'}, {'LOC': 'of'}, {'LOC': 'Ireland'}, {'LOC': 'Ireland'}, {'LOC': 'United_Kingdom'}, {'LOC': 'UK'}, {'LOC': 'Northern_Ireland'}, {'LOC': 'Northern'}, {'LOC': 'Ireland'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



",DiGraph with 24 nodes and 23 edges,person,only,:mod,person,only,:mod,p_16,p_16,o2_17,o2_17,inanimate
1385,0,390,"(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



","[{'LOC': 'Republic'}, {'LOC': 'of'}, {'LOC': 'Ireland'}, {'LOC': 'Ireland'}, {'LOC': 'United_Kingdom'}, {'LOC': 'UK'}, {'LOC': 'Northern_Ireland'}, {'LOC': 'Northern'}, {'LOC': 'Ireland'}, {'B_human': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(r / recommend-01
      :ARG1 (a / ask-01
            :ARG1 (t / truth-value
                  :polarity-of (w / want-01
                        :ARG0 p2
                        :ARG1 (i2 / include-91
                              :ARG1 p2
                              :ARG2 (o3 / or
                                    :op1 (c2 / country :wiki ""Republic_of_Ireland"" :name (n2 / name :op1 ""Ireland""))
                                    :op2 (c / country :wiki ""United_Kingdom"" :name (n / name :op1 ""UK""))))))
            :ARG2 (p / person
                  :mod (o2 / only)
                  :consist-of (p2 / person
                        :mod (c3 / country :wiki ""Northern_Ireland"" :name (n4 / name :op1 ""Northern"" :op2 ""Ireland""))))))



",DiGraph with 24 nodes and 23 edges,person,country,:mod,person,country,,p2_18,p_16,c3_19,c2_8,inanimate
1386,0,391,"(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



","[{'LOC': 'Islam'}, {'LOC': 'Islam'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'member'}]","(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



",DiGraph with 23 nodes and 22 edges,cell,person,:consist-of,cell,person,,c_4,c_4,p_6,p2_2,animate
1387,0,391,"(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



","[{'LOC': 'Islam'}, {'LOC': 'Islam'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'member'}]","(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



",DiGraph with 23 nodes and 22 edges,cell,terror,:mod,cell,terror,:mod,c_4,c_4,t_5,t_5,inanimate
1388,0,391,"(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



","[{'LOC': 'Islam'}, {'LOC': 'Islam'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'member'}]","(a2 / and
      :op1 (l / lead-01
            :ARG0 (p2 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (c / cell
                              :mod (t / terror)
                              :consist-of (p / person
                                    :quant (o / or :op1 4 :op2 5)))
                        :ARG2 (m / member)))
            :ARG1 (l2 / life
                  :ARG1-of (n / normal-02)))
      :op2 (a / avoid-01
            :ARG0 p2
            :ARG1 (c2 / contact-01
                  :ARG0 p2
                  :ARG1 (o2 / organization
                        :mod (r / religious-group :wiki ""Islam"" :name (n2 / name :op1 ""Islam""))
                        :ARG1-of (k / know-01)))))



",DiGraph with 23 nodes and 22 edges,organization,religious-group,:mod,organization,religious-group,:mod,o2_17,o2_17,r_18,r_18,inanimate
1389,0,392,"(a / and
      :op2 (r / resemble-01
            :ARG1 (f / find-01
                  :ARG0 (p3 / person :wiki ""Michael_Jackson""
                        :name (n / name :op1 ""Michael""))
                  :ARG1 (s / solace-01
                        :ARG1 p3
                        :ARG2 (p4 / perform-01
                              :ARG0 p3
                              :ARG1 (m2 / music
                                    :poss p3))
                        :location (s2 / stage)))
            :ARG2 (p5 / person :wiki -
                  :name (n2 / name :op1 ""Oskar"")
                  :ARG0-of (f2 / find-01
                        :ARG1 (r3 / respite
                              :source (b / beat-01
                                    :ARG0 p5
                                    :ARG1 (d / drum
                                          :consist-of (t2 / tin)
                                          :poss p5)))))))



","[{'PER': 'Michael'}, {'PER': 'Jackson'}, {'PER': 'Michael'}, {'PER': 'O'}, {'PER': 'skar'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op2 (r / resemble-01
            :ARG1 (f / find-01
                  :ARG0 (p3 / person :wiki ""Michael_Jackson""
                        :name (n / name :op1 ""Michael""))
                  :ARG1 (s / solace-01
                        :ARG1 p3
                        :ARG2 (p4 / perform-01
                              :ARG0 p3
                              :ARG1 (m2 / music
                                    :poss p3))
                        :location (s2 / stage)))
            :ARG2 (p5 / person :wiki -
                  :name (n2 / name :op1 ""Oskar"")
                  :ARG0-of (f2 / find-01
                        :ARG1 (r3 / respite
                              :source (b / beat-01
                                    :ARG0 p5
                                    :ARG1 (d / drum
                                          :consist-of (t2 / tin)
                                          :poss p5)))))))



",DiGraph with 25 nodes and 24 edges,drum,tin,:consist-of,drum,tin,:consist-of,d_22,d_22,t2_23,t2_23,inanimate
1390,0,392,"(a / and
      :op2 (r / resemble-01
            :ARG1 (f / find-01
                  :ARG0 (p3 / person :wiki ""Michael_Jackson""
                        :name (n / name :op1 ""Michael""))
                  :ARG1 (s / solace-01
                        :ARG1 p3
                        :ARG2 (p4 / perform-01
                              :ARG0 p3
                              :ARG1 (m2 / music
                                    :poss p3))
                        :location (s2 / stage)))
            :ARG2 (p5 / person :wiki -
                  :name (n2 / name :op1 ""Oskar"")
                  :ARG0-of (f2 / find-01
                        :ARG1 (r3 / respite
                              :source (b / beat-01
                                    :ARG0 p5
                                    :ARG1 (d / drum
                                          :consist-of (t2 / tin)
                                          :poss p5)))))))



","[{'PER': 'Michael'}, {'PER': 'Jackson'}, {'PER': 'Michael'}, {'PER': 'O'}, {'PER': 'skar'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'location'}, {'W_Animate': 'person'}]","(a / and
      :op2 (r / resemble-01
            :ARG1 (f / find-01
                  :ARG0 (p3 / person :wiki ""Michael_Jackson""
                        :name (n / name :op1 ""Michael""))
                  :ARG1 (s / solace-01
                        :ARG1 p3
                        :ARG2 (p4 / perform-01
                              :ARG0 p3
                              :ARG1 (m2 / music
                                    :poss p3))
                        :location (s2 / stage)))
            :ARG2 (p5 / person :wiki -
                  :name (n2 / name :op1 ""Oskar"")
                  :ARG0-of (f2 / find-01
                        :ARG1 (r3 / respite
                              :source (b / beat-01
                                    :ARG0 p5
                                    :ARG1 (d / drum
                                          :consist-of (t2 / tin)
                                          :poss p5)))))))



",DiGraph with 25 nodes and 24 edges,respite,beat-01,:source,respite,beat-01,:source,r3_19,r3_19,b_20,b_20,inanimate
1391,0,393,"(a / and
      :op1 (s / switch-01
            :ARG0 (h / he)
            :ARG1 (s2 / study-01
                  :ARG0 h)
            :ARG2 (e / entomology))
      :op2 (b / begin-01
            :ARG0 h
            :ARG1 (f / form-01
                  :ARG0 h
                  :ARG1 (f2 / friendship
                        :ARG1-of (c / close-13))
                  :prep-with (g / group
                        :consist-of (a2 / artist
                              :mod (y / young))
                        :ARG0-of (i / influence-01
                              :ARG1 h
                              :ARG1-of (s3 / strong-02)
                              :time (f3 / future))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (i2 / important-01
                        :ARG1 b)
                  :ARG3 (m / more)))
      :time (a3 / after
            :quant (f4 / few
                  :op1 (t / temporal-quantity :quant 1
                        :unit (y2 / year)))))



","[{'B_human': 'artist'}, {'PER': 'i'}]","(a / and
      :op1 (s / switch-01
            :ARG0 (h / he)
            :ARG1 (s2 / study-01
                  :ARG0 h)
            :ARG2 (e / entomology))
      :op2 (b / begin-01
            :ARG0 h
            :ARG1 (f / form-01
                  :ARG0 h
                  :ARG1 (f2 / friendship
                        :ARG1-of (c / close-13))
                  :prep-with (g / group
                        :consist-of (a2 / artist
                              :mod (y / young))
                        :ARG0-of (i / influence-01
                              :ARG1 h
                              :ARG1-of (s3 / strong-02)
                              :time (f3 / future))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (i2 / important-01
                        :ARG1 b)
                  :ARG3 (m / more)))
      :time (a3 / after
            :quant (f4 / few
                  :op1 (t / temporal-quantity :quant 1
                        :unit (y2 / year)))))



",DiGraph with 28 nodes and 27 edges,group,artist,:consist-of,group,artist,:consist-of,g_12,g_12,a2_13,a2_13,animate
1392,0,393,"(a / and
      :op1 (s / switch-01
            :ARG0 (h / he)
            :ARG1 (s2 / study-01
                  :ARG0 h)
            :ARG2 (e / entomology))
      :op2 (b / begin-01
            :ARG0 h
            :ARG1 (f / form-01
                  :ARG0 h
                  :ARG1 (f2 / friendship
                        :ARG1-of (c / close-13))
                  :prep-with (g / group
                        :consist-of (a2 / artist
                              :mod (y / young))
                        :ARG0-of (i / influence-01
                              :ARG1 h
                              :ARG1-of (s3 / strong-02)
                              :time (f3 / future))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (i2 / important-01
                        :ARG1 b)
                  :ARG3 (m / more)))
      :time (a3 / after
            :quant (f4 / few
                  :op1 (t / temporal-quantity :quant 1
                        :unit (y2 / year)))))



","[{'B_human': 'artist'}, {'PER': 'i'}]","(a / and
      :op1 (s / switch-01
            :ARG0 (h / he)
            :ARG1 (s2 / study-01
                  :ARG0 h)
            :ARG2 (e / entomology))
      :op2 (b / begin-01
            :ARG0 h
            :ARG1 (f / form-01
                  :ARG0 h
                  :ARG1 (f2 / friendship
                        :ARG1-of (c / close-13))
                  :prep-with (g / group
                        :consist-of (a2 / artist
                              :mod (y / young))
                        :ARG0-of (i / influence-01
                              :ARG1 h
                              :ARG1-of (s3 / strong-02)
                              :time (f3 / future))))
            :ARG1-of (h2 / have-degree-91
                  :ARG2 (i2 / important-01
                        :ARG1 b)
                  :ARG3 (m / more)))
      :time (a3 / after
            :quant (f4 / few
                  :op1 (t / temporal-quantity :quant 1
                        :unit (y2 / year)))))



",DiGraph with 28 nodes and 27 edges,artist,young,:mod,artist,young,:mod,a2_13,a2_13,y_14,y_14,inanimate
1393,0,394,"(c3 / cause-01
      :ARG1 (c / contrast-01
            :ARG1 (s / sit-01
                  :ARG1 (h / he)
                  :ARG2 (n / near-02
                        :ARG2 (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God""))
                        :mod (i / indeed)))
            :ARG2 (s2 / support-01
                  :ARG0 (p3 / pillar
                        :consist-of (e / excrement))
                  :ARG1 h)
            :ARG1-of (d / describe-01
                  :ARG0 (p4 / publication :wiki ""Edwin_Mellen_Press"" :name (n3 / name :op1 ""Mellen"")
                        :ARG1-of (c2 / cite-01
                              :ARG2 115)))))



","[{'PER': 'God'}, {'PER': 'God'}, {'ORG': 'Edwin_Mellen_Press'}, {'ORG': 'Mel'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'publication'}]","(c3 / cause-01
      :ARG1 (c / contrast-01
            :ARG1 (s / sit-01
                  :ARG1 (h / he)
                  :ARG2 (n / near-02
                        :ARG2 (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God""))
                        :mod (i / indeed)))
            :ARG2 (s2 / support-01
                  :ARG0 (p3 / pillar
                        :consist-of (e / excrement))
                  :ARG1 h)
            :ARG1-of (d / describe-01
                  :ARG0 (p4 / publication :wiki ""Edwin_Mellen_Press"" :name (n3 / name :op1 ""Mellen"")
                        :ARG1-of (c2 / cite-01
                              :ARG2 115)))))



",DiGraph with 21 nodes and 20 edges,pillar,excrement,:consist-of,pillar,excrement,:consist-of,p3_11,p3_11,e_12,e_12,inanimate
1394,0,394,"(c3 / cause-01
      :ARG1 (c / contrast-01
            :ARG1 (s / sit-01
                  :ARG1 (h / he)
                  :ARG2 (n / near-02
                        :ARG2 (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God""))
                        :mod (i / indeed)))
            :ARG2 (s2 / support-01
                  :ARG0 (p3 / pillar
                        :consist-of (e / excrement))
                  :ARG1 h)
            :ARG1-of (d / describe-01
                  :ARG0 (p4 / publication :wiki ""Edwin_Mellen_Press"" :name (n3 / name :op1 ""Mellen"")
                        :ARG1-of (c2 / cite-01
                              :ARG2 115)))))



","[{'PER': 'God'}, {'PER': 'God'}, {'ORG': 'Edwin_Mellen_Press'}, {'ORG': 'Mel'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'publication'}]","(c3 / cause-01
      :ARG1 (c / contrast-01
            :ARG1 (s / sit-01
                  :ARG1 (h / he)
                  :ARG2 (n / near-02
                        :ARG2 (p2 / person :wiki ""God"" :name (n2 / name :op1 ""God""))
                        :mod (i / indeed)))
            :ARG2 (s2 / support-01
                  :ARG0 (p3 / pillar
                        :consist-of (e / excrement))
                  :ARG1 h)
            :ARG1-of (d / describe-01
                  :ARG0 (p4 / publication :wiki ""Edwin_Mellen_Press"" :name (n3 / name :op1 ""Mellen"")
                        :ARG1-of (c2 / cite-01
                              :ARG2 115)))))



",DiGraph with 21 nodes and 20 edges,near-02,indeed,:mod,near-02,indeed,:mod,n_4,n_4,i_9,i_9,inanimate
1395,0,395,"(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



","[{'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholicism'}]","(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



",DiGraph with 11 nodes and 10 edges,pillar,excrement,:consist-of,pillar,excrement,:consist-of,p_0,p_0,e_1,e_1,inanimate
1396,0,395,"(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



","[{'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholicism'}]","(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



",DiGraph with 11 nodes and 10 edges,pillar,essential,:mod,pillar,essential,:mod,p_0,p_0,e2_8,e2_8,inanimate
1397,0,395,"(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



","[{'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholicism'}]","(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



",DiGraph with 11 nodes and 10 edges,pillar,still,:mod,pillar,still,:mod,p_0,p_0,s_9,s_9,inanimate
1398,0,395,"(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



","[{'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholicism'}]","(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



",DiGraph with 11 nodes and 10 edges,pillar,another,:mod,pillar,another,:mod,p_0,p_0,a_10,a_10,inanimate
1399,0,395,"(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



","[{'MISC': 'Catholic'}, {'ORG': 'Church'}, {'MISC': 'Catholicism'}]","(p / pillar
      :consist-of (e / excrement)
      :domain (r / religion
            :example (r2 / religious-group :wiki ""Catholic_Church""
                  :name (n / name :op1 ""Catholicism"")
                  :mod (p2 / primary)))
      :mod (e2 / essential)
      :mod (s / still)
      :mod (a / another))



",DiGraph with 11 nodes and 10 edges,religious-group,primary,:mod,religious-group,primary,:mod,r2_3,r2_3,p2_7,p2_7,inanimate
1400,0,396,"(b2 / believe-01
      :ARG0 (p2 / person :wiki ""Luis_Buñuel"" :name (n / name :op1 ""Bunuel""))
      :ARG1 (s / screen
            :ARG0-of (h / hide-01
                  :ARG1 (u / urge-01))
            :consist-of (s2 / smoke)
            :domain (r / reality)
            :ARG1-of (a / actual-02)))



","[{'PER': 'Luis'}, {'LOC': 'B'}, {'LOC': 'B'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(b2 / believe-01
      :ARG0 (p2 / person :wiki ""Luis_Buñuel"" :name (n / name :op1 ""Bunuel""))
      :ARG1 (s / screen
            :ARG0-of (h / hide-01
                  :ARG1 (u / urge-01))
            :consist-of (s2 / smoke)
            :domain (r / reality)
            :ARG1-of (a / actual-02)))



",DiGraph with 11 nodes and 10 edges,screen,smoke,:consist-of,screen,smoke,:consist-of,s_5,s_5,s2_8,s2_8,inanimate
1401,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,thing,chemical,:consist-of,thing,chemical,,t2_28,t2_28,c8_30,c5_6,inanimate
1402,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,capital,foreign,:mod,capital,foreign,:mod,c4_2,c4_2,f_3,f_3,inanimate
1403,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,industry,chemical,:mod,industry,chemical,:mod,i_5,i_5,c5_6,c5_6,inanimate
1404,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,dollar,country,:mod,dollar,country,,d2_14,d2_14,c7_15,c6_7,inanimate
1405,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,transform-01,technology,:mod,transform-01,technology,:mod,t_26,t_26,t3_32,t3_32,inanimate
1406,0,397,"(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



","[{'LOC': 'China'}, {'LOC': 'China'}, {'LOC': 'United_States'}, {'LOC': 'US'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / reach-01
            :ARG0 (c4 / capital
                  :mod (f / foreign)
                  :ARG1-of (a2 / absorb-01
                        :ARG0 (i / industry
                              :mod (c5 / chemical)
                              :poss (c6 / country :wiki ""China""
                                    :name (n2 / name :op1 ""China"")))
                        :manner (a3 / accumulate-01)))
            :ARG1 (m2 / monetary-quantity :quant 8500000000
                  :unit (d2 / dollar
                        :mod (c7 / country :wiki ""United_States""
                              :name (n3 / name :op1 ""US""))))
            :time (b / before
                  :op1 (n / now)
                  :duration (t4 / temporal-quantity :quant 10
                        :unit (y / year))))
      :op2 (u / use-01
            :ARG1 c4
            :ARG2 (t / transform-01
                  :ARG1 (a4 / and
                        :op1 (t2 / thing
                              :ARG0-of (f2 / fertilize-01)
                              :consist-of (c8 / chemical))
                        :op2 (p / petroleum))
                  :mod (t3 / technology)
                  :mod (c9 / construct-01))))



",DiGraph with 34 nodes and 33 edges,transform-01,construct-01,:mod,transform-01,construct-01,:mod,t_26,t_26,c9_33,c9_33,inanimate
1407,0,398,"(s / say-01
      :ARG0 (p / person
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (g / government-organization :wiki ""Ministry_of_Foreign_Affairs_of_the_People's_Republic_of_China"" :name (n / name :op1 ""Foreign"" :op2 ""Ministry""))
                  :ARG2 (s2 / spokesperson)))
      :ARG1 (v / visit-01
            :ARG0 (a / and
                  :op1 (p2 / person :wiki - :name (n5 / name :op1 ""Gedinage"")
                        :ARG0-of (h / head-01
                              :ARG1 (o4 / organization :wiki ""International_Committee_of_the_Red_Cross"" :name (n2 / name :op1 ""International"" :op2 ""Committee"" :op3 ""of"" :op4 ""the"" :op5 ""Red"" :op6 ""Cross""))))
                  :op2 (d / delegation
                        :accompanier-of p2
                        :consist-of (p3 / person :quant 4)))
            :ARG1 (c3 / country :wiki ""China"" :name (n4 / name :op1 ""China""))
            :time (d3 / date-interval
                  :op1 (d4 / date-entity :month 4 :day 18)
                  :op2 (d5 / date-entity :month 4 :day 23))
            :ARG2-of (i2 / invite-01
                  :ARG0 (o2 / organization :wiki ""International_Red_Cross_and_Red_Crescent_Movement"" :name (n6 / name :op1 ""Red"" :op2 ""Cross"")
                        :poss c3)))
      :time (t / today))



","[{'ORG': 'Ministry'}, {'ORG': 'of'}, {'ORG': 'Foreign'}, {'ORG': 'Affairs'}, {'ORG': 'of'}, {'ORG': 'the'}, {'ORG': ""People's""}, {'ORG': 'Republic'}, {'ORG': 'of'}, {'ORG': 'China'}, {'ORG': 'Ministry'}, {'ORG': 'International_Committee_of_the'}, {'ORG': 'Red_Cross'}, {'ORG': 'International'}, {'ORG': 'Committee'}, {'ORG': 'Cross'}, {'LOC': 'China'}, {'LOC': 'China'}, {'ORG': 'International'}, {'ORG': 'Red_Cross'}, {'ORG': 'and'}, {'ORG': 'Red'}, {'ORG': 'Crescent'}, {'ORG': 'Movement'}, {'ORG': 'Cross'}, {'B_human': 'spokesperson'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Animate': 'organization'}]","(s / say-01
      :ARG0 (p / person
            :ARG0-of (h2 / have-org-role-91
                  :ARG1 (g / government-organization :wiki ""Ministry_of_Foreign_Affairs_of_the_People's_Republic_of_China"" :name (n / name :op1 ""Foreign"" :op2 ""Ministry""))
                  :ARG2 (s2 / spokesperson)))
      :ARG1 (v / visit-01
            :ARG0 (a / and
                  :op1 (p2 / person :wiki - :name (n5 / name :op1 ""Gedinage"")
                        :ARG0-of (h / head-01
                              :ARG1 (o4 / organization :wiki ""International_Committee_of_the_Red_Cross"" :name (n2 / name :op1 ""International"" :op2 ""Committee"" :op3 ""of"" :op4 ""the"" :op5 ""Red"" :op6 ""Cross""))))
                  :op2 (d / delegation
                        :accompanier-of p2
                        :consist-of (p3 / person :quant 4)))
            :ARG1 (c3 / country :wiki ""China"" :name (n4 / name :op1 ""China""))
            :time (d3 / date-interval
                  :op1 (d4 / date-entity :month 4 :day 18)
                  :op2 (d5 / date-entity :month 4 :day 23))
            :ARG2-of (i2 / invite-01
                  :ARG0 (o2 / organization :wiki ""International_Red_Cross_and_Red_Crescent_Movement"" :name (n6 / name :op1 ""Red"" :op2 ""Cross"")
                        :poss c3)))
      :time (t / today))



",DiGraph with 48 nodes and 47 edges,delegation,person,:consist-of,delegation,person,,d_25,d_25,p3_27,p_1,animate
1408,0,399,"(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Baltic'}, {'LOC': 'Sea'}, {'MISC': 'Baltic'}, {'LOC': 'Sea'}, {'LOC': 'Latvia'}, {'LOC': 'Latvia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'sea'}, {'W_Inanimate': 'country'}]","(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



",DiGraph with 30 nodes and 29 edges,group,person,:consist-of,group,person,:consist-of,g_1,g_1,p_7,p_7,animate
1409,0,399,"(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Baltic'}, {'LOC': 'Sea'}, {'MISC': 'Baltic'}, {'LOC': 'Sea'}, {'LOC': 'Latvia'}, {'LOC': 'Latvia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'sea'}, {'W_Inanimate': 'country'}]","(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



",DiGraph with 30 nodes and 29 edges,group,last,:mod,group,last,:mod,g_1,g_1,l3_6,l3_6,inanimate
1410,0,399,"(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Baltic'}, {'LOC': 'Sea'}, {'MISC': 'Baltic'}, {'LOC': 'Sea'}, {'LOC': 'Latvia'}, {'LOC': 'Latvia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'sea'}, {'W_Inanimate': 'country'}]","(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



",DiGraph with 30 nodes and 29 edges,troop,military,:mod,troop,military,:mod,t_9,t_9,m_10,m_10,inanimate
1411,0,399,"(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Baltic'}, {'LOC': 'Sea'}, {'MISC': 'Baltic'}, {'LOC': 'Sea'}, {'LOC': 'Latvia'}, {'LOC': 'Latvia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'sea'}, {'W_Inanimate': 'country'}]","(w / withdraw-01
      :ARG0 (g / group
            :poss (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
            :mod (l3 / last)
            :consist-of (p / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (t / troop
                              :mod (m / military)
                              :ARG1-of (s / station-01
                                    :ARG2 (c4 / country :quant 3
                                          :location (s2 / sea :wiki ""Baltic_Sea"" :name (n4 / name :op1 ""Baltic"" :op2 ""Sea""))))
                              :mod (n / northwest))
                        :ARG2 (p2 / personnel)))
            :ARG0-of (w2 / withdraw-01
                  :ARG1-of (r2 / recommend-01)))
      :ARG2 (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvia""))
      :ARG1-of (c / complete-02)
      :time (d2 / date-entity :day 31))



",DiGraph with 30 nodes and 29 edges,troop,northwest,:mod,troop,northwest,:mod,t_9,t_9,n_19,n_19,inanimate
1412,0,400,"(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



","[{'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'LOC': 'Latvia'}, {'MISC': 'Latvian'}, {'LOC': 'Republic'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



",DiGraph with 24 nodes and 23 edges,cluster,troop,:consist-of,cluster,troop,,c_17,c_17,t_18,t3_0,inanimate
1413,0,400,"(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



","[{'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'LOC': 'Latvia'}, {'MISC': 'Latvian'}, {'LOC': 'Republic'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



",DiGraph with 24 nodes and 23 edges,troop,country,:mod,troop,country,:mod,t3_0,t3_0,c4_1,c4_1,inanimate
1414,0,400,"(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



","[{'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'LOC': 'Latvia'}, {'MISC': 'Latvian'}, {'LOC': 'Republic'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



",DiGraph with 24 nodes and 23 edges,troop,country,:mod,troop,country,:mod,t_18,t3_0,c3_19,c4_1,inanimate
1415,0,400,"(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



","[{'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'LOC': 'Latvia'}, {'MISC': 'Latvian'}, {'LOC': 'Republic'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t3 / troop
      :mod (c4 / country :wiki ""Soviet_Union"" :name (n4 / name :op1 ""Soviet"" :op2 ""Union""))
      :time (f / former)
      :ARG1-of (s2 / station-01
            :ARG2 (c5 / country :quant 3
                  :location (a / above)))
      :poss-of (h / headquarters
            :location (c6 / country :wiki ""Latvia"" :name (n5 / name :op1 ""Latvian"" :op2 ""Republic"")))
      :domain (c / cluster
            :consist-of (t / troop
                  :mod (c3 / country :wiki ""Russia"" :name (n3 / name :op1 ""Russia""))
                  :mod (n / northwest))))



",DiGraph with 24 nodes and 23 edges,troop,northwest,:mod,troop,northwest,,t_18,t3_0,n_23,n_23,inanimate
1416,0,401,"(t / transfer-01
      :ARG1 (c / cluster
            :consist-of (t2 / troop)
            :mod (t3 / this))
      :ARG2 (o / own-01
            :ARG0 (c4 / country :wiki ""Russia""
                  :name (n / name :op1 ""Russia"")))
      :time (a / after
            :op1 (d / disintegrate-01
                  :ARG1 (c5 / country :wiki ""Soviet_Union""
                        :name (n2 / name :op1 ""Soviet"" :op2 ""Union"")
                        :time (f / former)))))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t / transfer-01
      :ARG1 (c / cluster
            :consist-of (t2 / troop)
            :mod (t3 / this))
      :ARG2 (o / own-01
            :ARG0 (c4 / country :wiki ""Russia""
                  :name (n / name :op1 ""Russia"")))
      :time (a / after
            :op1 (d / disintegrate-01
                  :ARG1 (c5 / country :wiki ""Soviet_Union""
                        :name (n2 / name :op1 ""Soviet"" :op2 ""Union"")
                        :time (f / former)))))



",DiGraph with 17 nodes and 16 edges,cluster,troop,:consist-of,cluster,troop,:consist-of,c_1,c_1,t2_2,t2_2,inanimate
1417,0,401,"(t / transfer-01
      :ARG1 (c / cluster
            :consist-of (t2 / troop)
            :mod (t3 / this))
      :ARG2 (o / own-01
            :ARG0 (c4 / country :wiki ""Russia""
                  :name (n / name :op1 ""Russia"")))
      :time (a / after
            :op1 (d / disintegrate-01
                  :ARG1 (c5 / country :wiki ""Soviet_Union""
                        :name (n2 / name :op1 ""Soviet"" :op2 ""Union"")
                        :time (f / former)))))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Soviet_Union'}, {'MISC': 'Soviet'}, {'LOC': 'Union'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(t / transfer-01
      :ARG1 (c / cluster
            :consist-of (t2 / troop)
            :mod (t3 / this))
      :ARG2 (o / own-01
            :ARG0 (c4 / country :wiki ""Russia""
                  :name (n / name :op1 ""Russia"")))
      :time (a / after
            :op1 (d / disintegrate-01
                  :ARG1 (c5 / country :wiki ""Soviet_Union""
                        :name (n2 / name :op1 ""Soviet"" :op2 ""Union"")
                        :time (f / former)))))



",DiGraph with 17 nodes and 16 edges,cluster,this,:mod,cluster,this,:mod,c_1,c_1,t3_3,t3_3,inanimate
1418,0,402,"(f / flock-01
  :ARG0 (w / woman)
  :location (s / she)
  :polarity -
  :ARG1-of (c / cause-01
             :ARG0 (a / amr-unknown)))



","[{'B_human': 'woman'}, {'W_Inanimate': 'location'}]","(f / flock-01
  :ARG0 (w / woman)
  :location (s / she)
  :polarity -
  :ARG1-of (c / cause-01
             :ARG0 (a / amr-unknown)))



",DiGraph with 6 nodes and 5 edges,flock-01,cause-01,:ARG1-of,flock-01,cause-01,cause-01,f_0,c_4,c_4,f_0,inanimate
1419,0,402,"(f / flock-01
  :ARG0 (w / woman)
  :location (s / she)
  :polarity -
  :ARG1-of (c / cause-01
             :ARG0 (a / amr-unknown)))



","[{'B_human': 'woman'}, {'W_Inanimate': 'location'}]","(f / flock-01
  :ARG0 (w / woman)
  :location (s / she)
  :polarity -
  :ARG1-of (c / cause-01
             :ARG0 (a / amr-unknown)))



",DiGraph with 6 nodes and 5 edges,flock-01,cause-01,:ARG1-of,flock-01,cause-01,cause-01,f_0,c_4,c_4,f_0,inanimate
1420,0,403,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,shift-01,cause-01,:ARG1-of,shift-01,cause-01,cause-01,s_3,c2_7,c2_7,s_3,inanimate
1421,0,403,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,cap,ice,:consist-of,cap,ice,:consist-of,c_5,c_5,i_6,i_6,inanimate
1422,0,403,"(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}]","(n / notice-01 :mode imperative
      :ARG0 (y / you)
      :ARG1 (s / shift-01
            :ARG0 (w / weight
                  :part-of (c / cap
                        :consist-of (i / ice)))
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (i2 / inertia
                              :poss (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
                        :op2 (a2 / align-01
                              :ARG1 (a3 / and
                                    :op1 (s2 / sun)
                                    :op2 (m / moon)))))))



",DiGraph with 17 nodes and 16 edges,shift-01,cause-01,:ARG1-of,shift-01,cause-01,cause-01,s_3,c2_7,c2_7,s_3,inanimate
1423,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG1,instead-of-91,cause-01,cause-01,i4_3,c2_15,c3_4,i4_3,inanimate
1424,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG2,instead-of-91,cause-01,cause-01,i4_3,c2_15,c2_15,i4_3,inanimate
1425,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,system,and,:consist-of,system,and,:consist-of,s2_6,s2_6,a_7,a_7,inanimate
1426,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG1,instead-of-91,cause-01,cause-01,i4_3,c2_15,c3_4,i4_3,inanimate
1427,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,instead-of-91,cause-01,:ARG2,instead-of-91,cause-01,cause-01,i4_3,c2_15,c2_15,i4_3,inanimate
1428,0,404,"(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'PER': 'i'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}]","(i / indicate-01
      :ARG0 (v / video
            :mod (t / this))
      :ARG1 (i4 / instead-of-91
            :ARG1 (c3 / cause-01
                  :ARG0 (p / physics
                        :part-of (s2 / system
                              :consist-of (a / and
                                    :op1 (p2 / planet :wiki ""Earth"" :name (n / name :op1 ""Earth""))
                                    :op2 (s3 / sun)
                                    :op3 (m / moon))))
                  :ARG1 s)
            :ARG2 (c2 / cause-01
                  :ARG0 (w / warm-01
                        :ARG1 (g / globe))
                  :ARG1 (s / shift-01
                        :ARG1 (i2 / inertia)
                        :location (i3 / ice)))))



",DiGraph with 21 nodes and 20 edges,video,this,:mod,video,this,:mod,v_1,v_1,t_2,t_2,inanimate
1429,0,405,"(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'W_Inanimate': 'planet'}]","(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



",DiGraph with 24 nodes and 23 edges,understand-01,cause-01,:ARG1,understand-01,cause-01,cause-01,u_1,c_3,c_3,u_1,inanimate
1430,0,405,"(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'W_Inanimate': 'planet'}]","(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



",DiGraph with 24 nodes and 23 edges,understand-01,cause-01,:ARG1,understand-01,cause-01,cause-01,u_1,c_3,c_3,u_1,inanimate
1431,0,405,"(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'W_Inanimate': 'planet'}]","(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



",DiGraph with 24 nodes and 23 edges,undergo-28,periodic,:mod,undergo-28,periodic,:mod,u2_4,u2_4,p4_11,p4_11,inanimate
1432,0,405,"(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'W_Inanimate': 'planet'}]","(m / multi-sentence
      :snt1 (u / understand-01
            :ARG0 (n3 / nobody)
            :ARG1 (c / cause-01
                  :ARG1 (u2 / undergo-28
                        :ARG1 (p2 / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth""))
                        :ARG2 (r / reverse-01
                              :ARG1 (g / geomagnetism))
                        :mod (p4 / periodic)))
            :time (a / as-yet)
            :ARG1-of (r2 / real-04))
      :snt2 (c2 / contrast-01
            :ARG2 (s / seem-01
                  :ARG1 (w / wander-01
                        :ARG0 (p3 / pole
                              :mod (m2 / magnet))
                        :time (b / before
                              :op1 (n / now)
                              :duration (t / temporal-quantity :quant 200000000
                                    :unit (y / year)))))))



",DiGraph with 24 nodes and 23 edges,pole,magnet,:mod,pole,magnet,:mod,p3_17,p3_17,m2_18,m2_18,inanimate
1433,0,406,"(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



","[{'B_human': 'person'}, {'B_human': 'neighbor'}, {'B_human': 'country'}, {'B_human': 'fellow'}]","(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



",DiGraph with 15 nodes and 14 edges,possible-01,cause-01,:ARG1-of,possible-01,cause-01,cause-01,p_0,c_4,c_4,p_0,inanimate
1434,0,406,"(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



","[{'B_human': 'person'}, {'B_human': 'neighbor'}, {'B_human': 'country'}, {'B_human': 'fellow'}]","(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



",DiGraph with 15 nodes and 14 edges,possible-01,cause-01,:ARG1-of,possible-01,cause-01,cause-01,p_0,c_4,c_4,p_0,inanimate
1435,0,406,"(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



","[{'B_human': 'person'}, {'B_human': 'neighbor'}, {'B_human': 'country'}, {'B_human': 'fellow'}]","(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



",DiGraph with 15 nodes and 14 edges,cause-01,respect-01,:condition,cause-01,respect-01,,c_4,c_4,r2_6,r_1,inanimate
1436,0,406,"(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



","[{'B_human': 'person'}, {'B_human': 'neighbor'}, {'B_human': 'country'}, {'B_human': 'fellow'}]","(p / possible-01
      :ARG1 (r / respect-01
            :ARG0 (t / they)
            :ARG1 t)
      :ARG1-of (c / cause-01
            :ARG0 (a / amr-unknown)
            :condition (r2 / respect-01 :polarity -
                  :ARG0 t
                  :ARG1 (o / or
                        :op1 (p2 / person
                              :ARG1-of (n / neighbor-01
                                    :ARG2 t))
                        :op2 (c2 / countryman
                              :mod (f / fellow))))))



",DiGraph with 15 nodes and 14 edges,countryman,fellow,:mod,countryman,fellow,:mod,c2_13,c2_13,f_14,f_14,inanimate
1437,0,407,"(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



","[{'LOC': 'United_States'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



",DiGraph with 28 nodes and 27 edges,privatize-01,cause-01,:ARG0-of,privatize-01,cause-01,cause-01,p_0,c2_24,c2_24,p_0,inanimate
1438,0,407,"(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



","[{'LOC': 'United_States'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



",DiGraph with 28 nodes and 27 edges,privatize-01,cause-01,:ARG0-of,privatize-01,cause-01,cause-01,p_0,c2_24,c2_24,p_0,inanimate
1439,0,407,"(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



","[{'LOC': 'United_States'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



",DiGraph with 28 nodes and 27 edges,conglomerate,multinational,:mod,conglomerate,multinational,:mod,c_1,c_1,m_2,m_2,inanimate
1440,0,407,"(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



","[{'LOC': 'United_States'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(p / privatize-01
      :ARG0 (c / conglomerate
            :mod (m / multinational)
            :ARG0-of (a / accountable-02 :polarity -
                  :ARG1 (a2 / affect-01
                        :ARG0 c
                        :ARG1 (p2 / population
                              :ARG1-of (l / local-02)))
                  :ARG2 p2)
            :ARG1-of (s / suppress-01
                  :ARG0 p2
                  :ARG1-of (p3 / possible-01 :polarity -))
            :concession (e2 / even
                  :location (h / here
                        :location (c3 / country :wiki ""United_States"" :name (n2 / name :op1 ""United"" :op2 ""States"")))))
      :ARG1 (r / resource
            :mod (w / water))
      :location (w2 / worldwide)
      :ARG0-of (c2 / cause-01
            :ARG1 (w3 / war-01
                  :ARG2 w
                  :time (n / now))))



",DiGraph with 28 nodes and 27 edges,resource,water,:mod,resource,water,:mod,r_21,r_21,w_22,w_22,inanimate
1441,0,408,"(p / presume-01 :polarity (a2 / amr-unknown)
      :ARG0 (i / i)
      :ARG1 (a / allow-01
            :ARG1 (i2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (i3 / interpret-01
                        :ARG1 (s / speak-01
                              :ARG3-of (f / free-04))))))



",[{'PER': 'i'}],"(p / presume-01 :polarity (a2 / amr-unknown)
      :ARG0 (i / i)
      :ARG1 (a / allow-01
            :ARG1 (i2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (i3 / interpret-01
                        :ARG1 (s / speak-01
                              :ARG3-of (f / free-04))))))



",DiGraph with 8 nodes and 7 edges,allow-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,a_2,c_4,c_4,a_2,inanimate
1442,0,408,"(p / presume-01 :polarity (a2 / amr-unknown)
      :ARG0 (i / i)
      :ARG1 (a / allow-01
            :ARG1 (i2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (i3 / interpret-01
                        :ARG1 (s / speak-01
                              :ARG3-of (f / free-04))))))



",[{'PER': 'i'}],"(p / presume-01 :polarity (a2 / amr-unknown)
      :ARG0 (i / i)
      :ARG1 (a / allow-01
            :ARG1 (i2 / it)
            :ARG1-of (c / cause-01
                  :ARG0 (i3 / interpret-01
                        :ARG1 (s / speak-01
                              :ARG3-of (f / free-04))))))



",DiGraph with 8 nodes and 7 edges,allow-01,cause-01,:ARG1-of,allow-01,cause-01,cause-01,a_2,c_4,c_4,a_2,inanimate
1443,0,409,"(p / probable :polarity -
      :ARG1-of (c / cause-01
            :ARG0 (p2 / pass-03
                  :ARG1 (t / time
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / much)
                              :ARG3 (s / so))))))



",[],"(p / probable :polarity -
      :ARG1-of (c / cause-01
            :ARG0 (p2 / pass-03
                  :ARG1 (t / time
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / much)
                              :ARG3 (s / so))))))



",DiGraph with 7 nodes and 6 edges,probable :polarity -,cause-01,:ARG1-of,probable :polarity -,cause-01,cause-01,p_0,c_1,c_1,p_0,inanimate
1444,0,409,"(p / probable :polarity -
      :ARG1-of (c / cause-01
            :ARG0 (p2 / pass-03
                  :ARG1 (t / time
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / much)
                              :ARG3 (s / so))))))



",[],"(p / probable :polarity -
      :ARG1-of (c / cause-01
            :ARG0 (p2 / pass-03
                  :ARG1 (t / time
                        :ARG1-of (h / have-quant-91
                              :ARG2 (m / much)
                              :ARG3 (s / so))))))



",DiGraph with 7 nodes and 6 edges,probable :polarity -,cause-01,:ARG1-of,probable :polarity -,cause-01,cause-01,p_0,c_1,c_1,p_0,inanimate
1445,0,410,"(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



","[{'ORG': 'Marylebone_Cricket_Club'}, {'ORG': 'MCC'}, {'W_Inanimate': 'location'}]","(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



",DiGraph with 20 nodes and 19 edges,bike-01,cause-01,:ARG1-of,bike-01,cause-01,cause-01,b_5,c2_8,c2_8,b_5,inanimate
1446,0,410,"(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



","[{'ORG': 'Marylebone_Cricket_Club'}, {'ORG': 'MCC'}, {'W_Inanimate': 'location'}]","(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



",DiGraph with 20 nodes and 19 edges,bike-01,cause-01,:ARG1-of,bike-01,cause-01,cause-01,b_5,c2_8,c2_8,b_5,inanimate
1447,0,410,"(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



","[{'ORG': 'Marylebone_Cricket_Club'}, {'ORG': 'MCC'}, {'W_Inanimate': 'location'}]","(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



",DiGraph with 20 nodes and 19 edges,urn,that,:mod,urn,that,:mod,u_11,u_11,t_12,t_12,inanimate
1448,0,410,"(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



","[{'ORG': 'Marylebone_Cricket_Club'}, {'ORG': 'MCC'}, {'W_Inanimate': 'location'}]","(s / say-01
      :ARG0 (c / club :wiki ""Marylebone_Cricket_Club"" :name (n / name :op1 ""MCC""))
      :ARG1 (b / bike-01 :mode imperative
            :ARG0 c3
            :ARG1-of (c2 / cause-01
                  :ARG0 (a / and
                        :op1 (g / gift-01
                              :ARG1 (u / urn
                                    :mod (t / that)
                                    :mod (t2 / trophy :polarity -)))
                        :op2 (s2 / stay-01
                              :ARG1 u
                              :location (b2 / be-located-at-91
                                    :ARG1 u)))))
      :ARG2 (c3 / cobber))



",DiGraph with 20 nodes and 19 edges,urn,trophy,:mod,urn,trophy,:mod,u_11,u_11,t2_13,t2_13,inanimate
1449,0,411,"(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



","[{'B_human': 'person'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



",DiGraph with 16 nodes and 15 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t3_13,c_14,c_14,t3_13,inanimate
1450,0,411,"(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



","[{'B_human': 'person'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



",DiGraph with 16 nodes and 15 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t3_13,c_14,c_14,t3_13,inanimate
1451,0,411,"(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



","[{'B_human': 'person'}, {'PER': 'i'}]","(m / multi-sentence
      :snt1 (g / get-01
            :ARG0 (p / person
                  :ARG0-of (p2 / play-01
                        :ARG1 (t / tennis)))
            :ARG1 (t2 / treat-01
                  :ARG0 s2
                  :ARG2 (s / silent)
                  :ARG1-of (s3 / same-01))
            :ARG2 (s2 / spectator))
      :snt2 (s4 / sure-02 :polarity -
            :ARG0 (i / i)
            :ARG1 (t3 / thing
                  :ARG0-of (c / cause-01))
            :mod (e / exact)))



",DiGraph with 16 nodes and 15 edges,sure-02,exact,:mod,sure-02,exact,:mod,s4_10,s4_10,e_15,e_15,inanimate
1452,0,412,"(s2 / say-01
      :ARG0 (i / i)
      :ARG1 (s / specific-02 :polite + :mode imperative
            :ARG1 p2
            :topic (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (o / obligate-01
                              :ARG2 (a / avoid-01
                                    :ARG1 (c2 / country :wiki ""Morocco"" :name (n / name :op1 ""Morocco""))))))
            :ARG2-of (h / have-degree-91
                  :ARG1 p2
                  :ARG3 (m / more)))
      :ARG2 (p2 / person :wiki - :name (n2 / name :op1 ""Don"")))



","[{'LOC': 'Morocco'}, {'LOC': 'Morocco'}, {'PER': 'Don'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(s2 / say-01
      :ARG0 (i / i)
      :ARG1 (s / specific-02 :polite + :mode imperative
            :ARG1 p2
            :topic (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (o / obligate-01
                              :ARG2 (a / avoid-01
                                    :ARG1 (c2 / country :wiki ""Morocco"" :name (n / name :op1 ""Morocco""))))))
            :ARG2-of (h / have-degree-91
                  :ARG1 p2
                  :ARG3 (m / more)))
      :ARG2 (p2 / person :wiki - :name (n2 / name :op1 ""Don"")))



",DiGraph with 21 nodes and 20 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_6,c_7,c_7,t_6,inanimate
1453,0,412,"(s2 / say-01
      :ARG0 (i / i)
      :ARG1 (s / specific-02 :polite + :mode imperative
            :ARG1 p2
            :topic (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (o / obligate-01
                              :ARG2 (a / avoid-01
                                    :ARG1 (c2 / country :wiki ""Morocco"" :name (n / name :op1 ""Morocco""))))))
            :ARG2-of (h / have-degree-91
                  :ARG1 p2
                  :ARG3 (m / more)))
      :ARG2 (p2 / person :wiki - :name (n2 / name :op1 ""Don"")))



","[{'LOC': 'Morocco'}, {'LOC': 'Morocco'}, {'PER': 'Don'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Animate': 'person'}]","(s2 / say-01
      :ARG0 (i / i)
      :ARG1 (s / specific-02 :polite + :mode imperative
            :ARG1 p2
            :topic (t / thing
                  :ARG0-of (c / cause-01
                        :ARG1 (o / obligate-01
                              :ARG2 (a / avoid-01
                                    :ARG1 (c2 / country :wiki ""Morocco"" :name (n / name :op1 ""Morocco""))))))
            :ARG2-of (h / have-degree-91
                  :ARG1 p2
                  :ARG3 (m / more)))
      :ARG2 (p2 / person :wiki - :name (n2 / name :op1 ""Don"")))



",DiGraph with 21 nodes and 20 edges,thing,cause-01,:ARG0-of,thing,cause-01,cause-01,t_6,c_7,c_7,t_6,inanimate
1454,0,413,"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",[],"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",DiGraph with 8 nodes and 7 edges,stink-01,cause-01,:ARG1-of,stink-01,cause-01,cause-01,s_0,c_2,c_2,s_0,inanimate
1455,0,413,"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",[],"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",DiGraph with 8 nodes and 7 edges,stink-01,cause-01,:ARG1-of,stink-01,cause-01,cause-01,s_0,c_2,c_2,s_0,inanimate
1456,0,413,"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",[],"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",DiGraph with 8 nodes and 7 edges,anniversary,just,:mod,anniversary,just,:mod,a_3,a_3,j_7,j_7,inanimate
1457,0,413,"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",[],"(s / stink-01
      :degree (r / really)
      :ARG1-of (c / cause-01
            :ARG0 (a / anniversary
                  :poss (w / we)
                  :time (b / before
                        :mod (r2 / right))
                  :mod (j / just))))



",DiGraph with 8 nodes and 7 edges,before,right,:mod,before,right,:mod,b_5,b_5,r2_6,r2_6,inanimate
1458,0,414,"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",[],"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",DiGraph with 19 nodes and 18 edges,reason,cause-01,:ARG0-of,reason,cause-01,cause-01,r2_1,c_4,c_4,r2_1,inanimate
1459,0,414,"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",[],"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",DiGraph with 19 nodes and 18 edges,deposit,and,:consist-of,deposit,and,:consist-of,d_15,d_15,a_16,a_16,inanimate
1460,0,414,"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",[],"(h / have-condition-91
      :ARG1 (r2 / reason
            :ARG1-of (m / major-02)
            :domain f
            :ARG0-of (c / cause-01
                  :ARG1 (e / enter-01
                        :ARG1 (n / negotiate-01
                              :purpose (h2 / help-01
                                    :ARG1 (d2 / develop-02
                                          :ARG0 t
                                          :ARG1 (r3 / resource
                                                :poss t))
                                    :ARG2 t)))))
      :ARG2 (f / find-01
            :ARG0 (t / they)
            :ARG1 (d / deposit
                  :consist-of (a / and
                        :op1 (r / rhodium)
                        :op2 (p / platinum)))))



",DiGraph with 19 nodes and 18 edges,reason,cause-01,:ARG0-of,reason,cause-01,cause-01,r2_1,c_4,c_4,r2_1,inanimate
1461,0,415,"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",[],"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",DiGraph with 15 nodes and 14 edges,choose-01,cause-01,:ARG1-of,choose-01,cause-01,cause-01,c_0,c2_3,c2_3,c_0,inanimate
1462,0,415,"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",[],"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",DiGraph with 15 nodes and 14 edges,choose-01,cause-01,:ARG1-of,choose-01,cause-01,cause-01,c_0,c2_3,c2_3,c_0,inanimate
1463,0,415,"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",[],"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",DiGraph with 15 nodes and 14 edges,party,one,:mod,party,one,:mod,p_6,p_6,o2_7,o2_7,inanimate
1464,0,415,"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",[],"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",DiGraph with 15 nodes and 14 edges,trigger,each,:mod,trigger,each,,t2_8,t_1,e_9,e_9,inanimate
1465,0,415,"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",[],"(c / choose-01
      :ARG1 (t / trigger)
      :manner (s / specific-02)
      :ARG1-of (c2 / cause-01
            :ARG0 (a / and
                  :op1 (d / desirable-02
                        :ARG0 (p / party
                              :mod (o2 / one))
                        :ARG1 (t2 / trigger
                              :mod (e / each)))
                  :op2 (a2 / anathema-01 :polarity -
                        :ARG1 t2
                        :ARG2 (p2 / party
                              :mod (o3 / other))))))



",DiGraph with 15 nodes and 14 edges,party,other,:mod,party,other,,p2_13,p_6,o3_14,o3_14,inanimate
1466,0,416,"(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



",DiGraph with 26 nodes and 25 edges,glow-01,cause-01,:ARG1-of,glow-01,cause-01,cause-01,g_0,c_23,c_23,g_0,inanimate
1467,0,416,"(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



",DiGraph with 26 nodes and 25 edges,glow-01,cause-01,:ARG1-of,glow-01,cause-01,cause-01,g_0,c_23,c_23,g_0,inanimate
1468,0,416,"(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



","[{'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'person'}]","(g / glow-01
      :ARG0 (a2 / and
            :op1 (p3 / person :wiki - :name (n / name :op1 ""Abather""))
            :op2 (p4 / person :wiki - :name (n2 / name :op1 ""Balqes"")))
      :time (s / speak-01
            :ARG0 a2
            :ARG1 (a3 / and
                  :op1 (d / day
                        :mod (t / that))
                  :op2 (e / earn-01
                        :ARG1 (l / living
                              :ARG1-of (g2 / good-02)))
                  :op3 (h / have-03
                        :ARG1 (h2 / home
                              :poss a2)
                        :ord (o2 / ordinal-entity :value 1))))
      :ARG1-of (c / cause-01
            :ARG0 (w / wonder-02
                  :ARG0 a2)))



",DiGraph with 26 nodes and 25 edges,day,that,:mod,day,that,:mod,d_13,d_13,t_14,t_14,inanimate
1469,0,417,"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",[],"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",DiGraph with 8 nodes and 7 edges,kill-01,cause-01,:ARG1-of,kill-01,cause-01,cause-01,k_0,c_3,c_3,k_0,inanimate
1470,0,417,"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",[],"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",DiGraph with 8 nodes and 7 edges,kill-01,cause-01,:ARG1-of,kill-01,cause-01,cause-01,k_0,c_3,c_3,k_0,inanimate
1471,0,417,"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",[],"(k / kill-01
      :ARG0 (j / jihadi)
      :ARG1 (y / you)
      :ARG1-of (c / cause-01
            :ARG0 (b / betray-01
                  :ARG0 y))
      :condition (h / have-polarity-91
            :ARG2 -))



",DiGraph with 8 nodes and 7 edges,kill-01,have-polarity-91,:condition,kill-01,have-polarity-91,:condition,k_0,k_0,h_6,h_6,inanimate
1472,0,418,"(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



",DiGraph with 17 nodes and 16 edges,target-01,cause-01,:ARG1-of,target-01,cause-01,cause-01,t_0,c_5,c_5,t_0,inanimate
1473,0,418,"(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



",DiGraph with 17 nodes and 16 edges,target-01,cause-01,:ARG1-of,target-01,cause-01,cause-01,t_0,c_5,c_5,t_0,inanimate
1474,0,418,"(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



","[{'LOC': 'United_States'}, {'LOC': 'America'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Inanimate': 'country'}]","(t / target-01
      :ARG0 (o / or
            :op1 (i / insurgent)
            :op2 (j / jihadi))
      :ARG1 (m / many)
      :ARG1-of (c / cause-01
            :ARG0 (o2 / or
                  :op1 (s / support-01
                        :ARG0 m
                        :ARG1 (p / person
                              :mod (c2 / country :wiki ""United_States"" :name (n2 / name :op1 ""America""))))
                  :op2 (w / work-01
                        :ARG0 m
                        :ARG2 p))))



",DiGraph with 17 nodes and 16 edges,person,country,:mod,person,country,:mod,p_9,p_9,c2_10,c2_10,inanimate
1475,0,419,"(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



","[{'PER': 'Fr'}, {'ORG': 'Human_Rights_Watch'}, {'ORG': 'Human'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'B_human': 'director'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}]","(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



",DiGraph with 30 nodes and 29 edges,persecute-01,cause-01,:ARG1-of,persecute-01,cause-01,cause-01,p5_23,c3_24,c3_24,p5_23,inanimate
1476,0,419,"(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



","[{'PER': 'Fr'}, {'ORG': 'Human_Rights_Watch'}, {'ORG': 'Human'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'B_human': 'director'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}]","(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



",DiGraph with 30 nodes and 29 edges,persecute-01,cause-01,:ARG1-of,persecute-01,cause-01,cause-01,p5_23,c3_24,c3_24,p5_23,inanimate
1477,0,419,"(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



","[{'PER': 'Fr'}, {'ORG': 'Human_Rights_Watch'}, {'ORG': 'Human'}, {'LOC': 'United'}, {'LOC': 'States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'B_human': 'director'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}]","(n / note-01
      :ARG0 (p2 / person :wiki - :name (n2 / name :op1 ""Bill"" :op2 ""Frelick"")
            :ARG0-of (h / have-org-role-91
                  :ARG1 (o2 / organization :wiki ""Human_Rights_Watch"" :name (n3 / name :op1 ""Human"" :op2 ""Rights"" :op3 ""Watch""))
                  :ARG2 (d / director
                        :mod (p / policy-01
                              :ARG2 (r / refugee)))))
      :ARG1 (a / aid-01
            :ARG0 (c2 / country :wiki ""United_States"" :name (n4 / name :op1 ""United"" :op2 ""States""))
            :ARG2 (p4 / person
                  :ARG1-of (p5 / persecute-01
                        :ARG1-of (c3 / cause-01
                              :ARG0 (s / support-01
                                    :ARG0 p4
                                    :ARG1 c2))))
            :time (p6 / past)
            :frequency (o / often)))



",DiGraph with 30 nodes and 29 edges,director,policy-01,:mod,director,policy-01,:mod,d_13,d_13,p_14,p_14,inanimate
1478,0,420,"(c / come-01
      :ARG1 (w / word-01
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (h / he)
                              :ARG2 (f / father)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h2 / heart-attack))))
      :time (a2 / around
            :op1 (t / time
                  :ARG1-of (s / same-01))))



","[{'B_human': 'person'}, {'B_human': 'father'}]","(c / come-01
      :ARG1 (w / word-01
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (h / he)
                              :ARG2 (f / father)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h2 / heart-attack))))
      :time (a2 / around
            :op1 (t / time
                  :ARG1-of (s / same-01))))



",DiGraph with 12 nodes and 11 edges,die-01,cause-01,:ARG1-of,die-01,cause-01,cause-01,d_2,c2_7,c2_7,d_2,inanimate
1479,0,420,"(c / come-01
      :ARG1 (w / word-01
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (h / he)
                              :ARG2 (f / father)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h2 / heart-attack))))
      :time (a2 / around
            :op1 (t / time
                  :ARG1-of (s / same-01))))



","[{'B_human': 'person'}, {'B_human': 'father'}]","(c / come-01
      :ARG1 (w / word-01
            :ARG1 (d / die-01
                  :ARG1 (p / person
                        :ARG0-of (h3 / have-rel-role-91
                              :ARG1 (h / he)
                              :ARG2 (f / father)))
                  :ARG1-of (c2 / cause-01
                        :ARG0 (h2 / heart-attack))))
      :time (a2 / around
            :op1 (t / time
                  :ARG1-of (s / same-01))))



",DiGraph with 12 nodes and 11 edges,die-01,cause-01,:ARG1-of,die-01,cause-01,cause-01,d_2,c2_7,c2_7,d_2,inanimate
1480,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,distraught,cause-01,:ARG1-of,distraught,cause-01,cause-01,d2_9,c_22,c4_15,d2_9,inanimate
1481,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,distraught,cause-01,:ARG0-of,distraught,cause-01,cause-01,d2_9,c_22,c_22,d2_9,inanimate
1482,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,distraught,cause-01,:ARG1-of,distraught,cause-01,cause-01,d2_9,c_22,c4_15,d2_9,inanimate
1483,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,distraught,cause-01,:ARG0-of,distraught,cause-01,cause-01,d2_9,c_22,c_22,d2_9,inanimate
1484,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,distraught,country,:mod,distraught,country,:mod,d2_9,d2_9,c3_10,c3_10,inanimate
1485,0,421,"(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



","[{'LOC': 'Amman'}, {'LOC': 'Amman'}, {'LOC': 'United_States'}, {'LOC': 'United'}, {'LOC': 'States'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'country'}]","(t / tell-01
      :ARG0 (p / person
            :ARG0-of (w / work-01
                  :ARG1 (a / aid-01))
            :ARG1-of (b2 / base-01
                  :location (c2 / city :wiki ""Amman"" :name (n2 / name :op1 ""Amman""))))
      :ARG1 (d2 / distraught
            :mod (c3 / country :wiki ""United_States"" :name (n3 / name :op1 ""United"" :op2 ""States""))
            :ARG1-of (c4 / cause-01
                  :ARG0 (p2 / policy-01
                        :ARG1-of (r / represent-01
                              :ARG0 d
                              :ARG2-of (c5 / charge-05
                                    :ARG1 d))))
            :domain (d / diplomat)
            :ARG0-of (c / cause-01
                  :ARG1 (t3 / take-10
                        :ARG0 (b / break-down-11
                              :ARG0 d)
                        :ARG1 (a2 / and
                              :op1 (g / gin)
                              :op2 (t4 / tonic)
                              :quant (f / few))
                        :mod (j / just))))
      :ARG2 (i / i)
      :time (a3 / after))



",DiGraph with 33 nodes and 32 edges,take-10,just,:mod,take-10,just,:mod,t3_23,t3_23,j_30,j_30,inanimate
1486,0,422,"(a / and
  :op1 (r / run-02
         :ARG0 (p / person
                 :quant 3)
         :destination (h / he))
  :op2 (k / kick-01
         :ARG0 p
         :ARG1 h)
  :op3 (b / beat-01
         :ARG0 p
         :ARG1 h)
  :time (t / then))



",[{'B_human': 'person'}],"(a / and
  :op1 (r / run-02
         :ARG0 (p / person
                 :quant 3)
         :destination (h / he))
  :op2 (k / kick-01
         :ARG0 p
         :ARG1 h)
  :op3 (b / beat-01
         :ARG0 p
         :ARG1 h)
  :time (t / then))



",DiGraph with 12 nodes and 11 edges,run-02,he,:destination,run-02,he,:destination,r_1,r_1,h_4,h_4,animate
1487,0,423,"(h2 / have-degree-91 :polarity -
      :ARG1 (e5 / everyone)
      :ARG2 (o / or
            :op1 (r / rich)
            :op2 (s / selfish)
            :destination (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 e5
                        :ARG2 (k2 / kid))))
      :ARG3 (e4 / equal)
      :ARG4 (p / person :wiki ""Bill_Gates"" :name (n / name :op1 ""Bill"" :op2 ""Gates"")))



","[{'PER': 'Bill'}, {'MISC': 'Gates'}, {'PER': 'Bill'}, {'PER': 'Gates'}, {'B_human': 'person'}, {'B_human': 'kid'}, {'B_human': 'person'}, {'W_Animate': 'person'}]","(h2 / have-degree-91 :polarity -
      :ARG1 (e5 / everyone)
      :ARG2 (o / or
            :op1 (r / rich)
            :op2 (s / selfish)
            :destination (p2 / person
                  :ARG0-of (h / have-rel-role-91
                        :ARG1 e5
                        :ARG2 (k2 / kid))))
      :ARG3 (e4 / equal)
      :ARG4 (p / person :wiki ""Bill_Gates"" :name (n / name :op1 ""Bill"" :op2 ""Gates"")))



",DiGraph with 15 nodes and 14 edges,or,person,:destination,or,person,:destination,o_3,o_3,p2_6,p2_6,animate
1488,0,424,"(g / go-on-25
      :ARG0 (p2 / person :wiki ""Shepard_Smith"" :name (n / name :op1 ""Shepard""))
      :time (t / then)
      :topic (t2 / teen
            :mod (y / young)
            :ARG0-of (b2 / buy-01
                  :ARG1 (p6 / product :wiki ""Skittles_(confectionery)"" :name (n2 / name :op1 ""Skittles""))
                  :ARG2 (p4 / person
                        :age (b / between
                              :op1 (t3 / temporal-quantity :quant 7
                                    :unit (y2 / year))
                              :op2 (t4 / temporal-quantity :quant 11
                                    :unit (y3 / year)))))
            :ARG0-of (w / walk-01
                  :ARG2 (b4 / back)
                  :destination (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 t2
                              :ARG2 (f / father)))
                  :manner (a2 / arm-01 :polarity -
                        :ARG1 t2)
                  :time (f2 / follow-01
                        :ARG1 (m / man
                              :ARG1-of (a / arm-01)
                              :ARG2-of (t6 / tell-01
                                    :ARG0 (p5 / police)
                                    :ARG1 (s2 / stop-01
                                          :ARG0 m
                                          :ARG1 (f3 / follow-01
                                                :ARG1 m
                                                :ARG2 t2))))
                        :ARG2 t2))))



","[{'PER': 'Shepard'}, {'MISC': 'Smith'}, {'B_human': 'person'}, {'B_human': 'teen'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'man'}, {'W_Animate': 'person'}, {'W_Inanimate': 'product'}]","(g / go-on-25
      :ARG0 (p2 / person :wiki ""Shepard_Smith"" :name (n / name :op1 ""Shepard""))
      :time (t / then)
      :topic (t2 / teen
            :mod (y / young)
            :ARG0-of (b2 / buy-01
                  :ARG1 (p6 / product :wiki ""Skittles_(confectionery)"" :name (n2 / name :op1 ""Skittles""))
                  :ARG2 (p4 / person
                        :age (b / between
                              :op1 (t3 / temporal-quantity :quant 7
                                    :unit (y2 / year))
                              :op2 (t4 / temporal-quantity :quant 11
                                    :unit (y3 / year)))))
            :ARG0-of (w / walk-01
                  :ARG2 (b4 / back)
                  :destination (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 t2
                              :ARG2 (f / father)))
                  :manner (a2 / arm-01 :polarity -
                        :ARG1 t2)
                  :time (f2 / follow-01
                        :ARG1 (m / man
                              :ARG1-of (a / arm-01)
                              :ARG2-of (t6 / tell-01
                                    :ARG0 (p5 / police)
                                    :ARG1 (s2 / stop-01
                                          :ARG0 m
                                          :ARG1 (f3 / follow-01
                                                :ARG1 m
                                                :ARG2 t2))))
                        :ARG2 t2))))



",DiGraph with 41 nodes and 40 edges,teen,young,:mod,teen,young,:mod,t2_6,t2_6,y_7,y_7,inanimate
1489,0,424,"(g / go-on-25
      :ARG0 (p2 / person :wiki ""Shepard_Smith"" :name (n / name :op1 ""Shepard""))
      :time (t / then)
      :topic (t2 / teen
            :mod (y / young)
            :ARG0-of (b2 / buy-01
                  :ARG1 (p6 / product :wiki ""Skittles_(confectionery)"" :name (n2 / name :op1 ""Skittles""))
                  :ARG2 (p4 / person
                        :age (b / between
                              :op1 (t3 / temporal-quantity :quant 7
                                    :unit (y2 / year))
                              :op2 (t4 / temporal-quantity :quant 11
                                    :unit (y3 / year)))))
            :ARG0-of (w / walk-01
                  :ARG2 (b4 / back)
                  :destination (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 t2
                              :ARG2 (f / father)))
                  :manner (a2 / arm-01 :polarity -
                        :ARG1 t2)
                  :time (f2 / follow-01
                        :ARG1 (m / man
                              :ARG1-of (a / arm-01)
                              :ARG2-of (t6 / tell-01
                                    :ARG0 (p5 / police)
                                    :ARG1 (s2 / stop-01
                                          :ARG0 m
                                          :ARG1 (f3 / follow-01
                                                :ARG1 m
                                                :ARG2 t2))))
                        :ARG2 t2))))



","[{'PER': 'Shepard'}, {'MISC': 'Smith'}, {'B_human': 'person'}, {'B_human': 'teen'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'father'}, {'B_human': 'man'}, {'W_Animate': 'person'}, {'W_Inanimate': 'product'}]","(g / go-on-25
      :ARG0 (p2 / person :wiki ""Shepard_Smith"" :name (n / name :op1 ""Shepard""))
      :time (t / then)
      :topic (t2 / teen
            :mod (y / young)
            :ARG0-of (b2 / buy-01
                  :ARG1 (p6 / product :wiki ""Skittles_(confectionery)"" :name (n2 / name :op1 ""Skittles""))
                  :ARG2 (p4 / person
                        :age (b / between
                              :op1 (t3 / temporal-quantity :quant 7
                                    :unit (y2 / year))
                              :op2 (t4 / temporal-quantity :quant 11
                                    :unit (y3 / year)))))
            :ARG0-of (w / walk-01
                  :ARG2 (b4 / back)
                  :destination (p / person
                        :ARG0-of (h / have-rel-role-91
                              :ARG1 t2
                              :ARG2 (f / father)))
                  :manner (a2 / arm-01 :polarity -
                        :ARG1 t2)
                  :time (f2 / follow-01
                        :ARG1 (m / man
                              :ARG1-of (a / arm-01)
                              :ARG2-of (t6 / tell-01
                                    :ARG0 (p5 / police)
                                    :ARG1 (s2 / stop-01
                                          :ARG0 m
                                          :ARG1 (f3 / follow-01
                                                :ARG1 m
                                                :ARG2 t2))))
                        :ARG2 t2))))



",DiGraph with 41 nodes and 40 edges,walk-01,person,:destination,walk-01,person,,w_21,w_21,p_23,p2_1,animate
1490,0,425,"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'ORG': 'Navy'}, {'W_Animate': 'military'}]","(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



",DiGraph with 15 nodes and 14 edges,pawn-01,off,:mod,pawn-01,off,:mod,p2_2,p2_2,o_5,o_5,inanimate
1491,0,425,"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'ORG': 'Navy'}, {'W_Animate': 'military'}]","(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



",DiGraph with 15 nodes and 14 edges,need-01,either,:mod,need-01,either,:mod,n2_10,n2_10,e_14,e_14,inanimate
1492,0,425,"(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



","[{'ORG': 'United_States'}, {'ORG': 'Navy'}, {'ORG': 'Navy'}, {'W_Animate': 'military'}]","(c / contrast-01
      :ARG1 (p / possible-01
            :ARG1 (p2 / pawn-01
                  :ARG0 (w / we)
                  :ARG1 (y / you)
                  :mod (o / off)
                  :destination (m / military :wiki ""United_States_Navy""
                        :name (n / name :op1 ""Navy""))))
      :ARG2 (n2 / need-01 :polarity -
            :ARG0 m
            :ARG1 y
            :mod (e / either)))



",DiGraph with 15 nodes and 14 edges,pawn-01,military,:destination,pawn-01,military,:destination,p2_2,p2_2,m_6,m_6,animate
1493,0,426,"(t / track-01
      :ARG0 t3
      :ARG1 b
      :time (f / find-01
            :ARG0 (t3 / they)
            :ARG1 (b / bomb))
      :direction (b2 / back)
      :destination (p / person
            :ARG0-of (s / send-01
                  :ARG1 b))
      :ARG1-of (d / do-02
            :ord (o / ordinal-entity :value 1)))



",[{'B_human': 'person'}],"(t / track-01
      :ARG0 t3
      :ARG1 b
      :time (f / find-01
            :ARG0 (t3 / they)
            :ARG1 (b / bomb))
      :direction (b2 / back)
      :destination (p / person
            :ARG0-of (s / send-01
                  :ARG1 b))
      :ARG1-of (d / do-02
            :ord (o / ordinal-entity :value 1)))



",DiGraph with 13 nodes and 12 edges,track-01,person,:destination,track-01,person,:destination,t_0,t_0,p_7,p_7,animate
1494,0,427,"(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



","[{'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'B_human': 'chief'}, {'B_human': 'president'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



",DiGraph with 33 nodes and 32 edges,way,sure-fire,:mod,way,sure-fire,:mod,w2_12,w2_12,s_14,s_14,inanimate
1495,0,427,"(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



","[{'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'B_human': 'chief'}, {'B_human': 'president'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



",DiGraph with 33 nodes and 32 edges,officer,chief,:mod,officer,chief,:mod,o_28,o_28,c4_29,c4_29,inanimate
1496,0,427,"(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



","[{'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'B_human': 'chief'}, {'B_human': 'president'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



",DiGraph with 33 nodes and 32 edges,officer,executive,:mod,officer,executive,:mod,o_28,o_28,e_30,e_30,inanimate
1497,0,427,"(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



","[{'LOC': 'United_States'}, {'LOC': 'United'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'officer'}, {'B_human': 'chief'}, {'B_human': 'president'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (w / want-01
            :ARG0 (t / they)
            :ARG1 (t2 / turn-02
                  :ARG0 t
                  :ARG1 (c / country :wiki ""United_States"" :name (n / name :op1 ""United"" :op2 ""States""))
                  :ARG2 (c2 / corporation)))
      :op2 (d / do-02
            :ARG1 (w2 / way :quant 1
                  :mod (s / sure-fire)
                  :domain (a4 / and
                        :op1 (a2 / abdicate-01
                              :ARG0 (p2 / person
                                    :ARG0-of (r2 / represent-01
                                          :ARG1 (p3 / person)))
                              :ARG1 (a5 / and
                                    :op1 (r / responsible-03
                                          :ARG0 p2)
                                    :op2 (p4 / power
                                          :poss p2))
                              :destination (p5 / person
                                    :ARG0-of (h / have-org-role-91
                                          :ARG2 (a3 / and
                                                :op1 (o / officer
                                                      :mod (c4 / chief)
                                                      :mod (e / executive))
                                                :op2 (p6 / president)))
                                    :ARG0-of (d2 / dominate-01)))))))



",DiGraph with 33 nodes and 32 edges,abdicate-01,person,:destination,abdicate-01,person,:ARG0,a2_16,a2_16,p5_25,p2_17,animate
1498,0,428,"(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



","[{'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}]","(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



",DiGraph with 48 nodes and 47 edges,person,another,:mod,person,another,:mod,p_6,p_6,a3_9,a3_9,inanimate
1499,0,428,"(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



","[{'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}]","(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



",DiGraph with 48 nodes and 47 edges,person,male,:mod,person,male,:mod,p_6,p_6,m_10,m_10,inanimate
1500,0,428,"(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



","[{'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}]","(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



",DiGraph with 48 nodes and 47 edges,date-entity,last,:mod,date-entity,last,:mod,d2_16,d2_16,l_17,l_17,inanimate
1501,0,428,"(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



","[{'B_human': 'person'}, {'B_human': 'friend'}, {'PER': 'i'}]","(a / and
      :op1 (a2 / and
            :op1 (g2 / go-02
                  :ARG0 (i / i)
                  :ARG1 (s / see-01
                        :ARG0 i
                        :ARG1 (p / person
                              :ARG0-of (h / have-rel-role-91
                                    :ARG2 (f / friend))
                              :mod (a3 / another)
                              :mod (m / male)
                              :ARG0-of (h2 / have-03
                                    :ARG1 (t / thing
                                          :ARG1-of (k / know-01
                                                :ARG0 i)
                                          :destination i)))
                        :time (d2 / date-entity
                              :mod (l / last)
                              :dayperiod (n / night))))
            :op2 (s2 / start-01
                  :ARG0 p
                  :ARG1 (h3 / hit-on-04
                        :ARG0 p
                        :ARG1 i)))
      :op2 (l2 / let-01
            :ARG0 i
            :ARG1 (s3 / sex-01
                  :ARG0 p
                  :ARG1 i)
            :time (u / until
                  :op1 (a5 / and
                        :op1 (a4 / and
                              :op1 (r / realize-01
                                    :ARG0 i
                                    :ARG1 (p2 / possible-01 :polarity -
                                          :ARG1 (d / do-02
                                                :ARG0 i
                                                :ARG1 s3)))
                              :op2 (s4 / stop-01
                                    :ARG0 i
                                    :ARG1 s3))
                        :op2 (m2 / make-02
                              :ARG0 i
                              :ARG1 (t2 / take-01
                                    :ARG0 p
                                    :ARG1 i
                                    :ARG3 (h4 / home)))))))



",DiGraph with 48 nodes and 47 edges,thing,i,:destination,thing,i,,t_12,t_12,i_15,i_3,animate
1502,0,429,"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",[{'PER': 'i'}],"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",DiGraph with 26 nodes and 25 edges,healthy,cause-01,:ARG1-of,healthy,cause-01,cause-01,h2_10,c_14,c_14,h2_10,inanimate
1503,0,429,"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",[{'PER': 'i'}],"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",DiGraph with 26 nodes and 25 edges,healthy,cause-01,:ARG1-of,healthy,cause-01,cause-01,h2_10,c_14,c_14,h2_10,inanimate
1504,0,429,"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",[{'PER': 'i'}],"(a / and
      :op1 (o / or
            :op1 (r / right-02 :polarity -
                  :ARG1 (t2 / that))
            :op2 (f / fair-01 :polarity -
                  :ARG1 t2))
      :op2 (t / think-01
            :ARG0 (i / i)
            :ARG1 (h2 / healthy :polarity -
                  :destination (y / you)
                  :domain t2
                  :ARG1-of (c / cause-01
                        :ARG0 (b2 / blame-01
                              :ARG0 y
                              :ARG1 y
                              :time (m2 / make-01
                                    :ARG0 (h3 / he)
                                    :ARG1 (m3 / mistake-02
                                          :ARG0 h3
                                          :ARG1-of (h / have-degree-91
                                                :ARG2 (b / big)
                                                :ARG3 (m / more)))
                                    :ARG1-of (e / effective-04)))))))



",DiGraph with 26 nodes and 25 edges,healthy,you,:destination,healthy,you,:destination,h2_10,h2_10,y_12,y_12,animate
1505,0,430,"(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



","[{'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'b'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'stranger'}, {'B_human': 'b'}, {'W_Inanimate': 'country'}]","(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



",DiGraph with 34 nodes and 33 edges,man,old,:mod,man,old,:mod,m_8,m_8,o3_11,o3_11,inanimate
1506,0,430,"(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



","[{'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'b'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'stranger'}, {'B_human': 'b'}, {'W_Inanimate': 'country'}]","(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



",DiGraph with 34 nodes and 33 edges,bloke,foreign,:mod,bloke,foreign,:mod,b2_12,b2_12,f2_13,f2_13,inanimate
1507,0,430,"(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



","[{'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'b'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'stranger'}, {'B_human': 'b'}, {'W_Inanimate': 'country'}]","(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



",DiGraph with 34 nodes and 33 edges,person,country,:mod,person,country,,p4_18,p_2,c_19,c_19,inanimate
1508,0,430,"(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



","[{'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'b'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'stranger'}, {'B_human': 'b'}, {'W_Inanimate': 'country'}]","(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



",DiGraph with 34 nodes and 33 edges,person,stranger,:mod,person,stranger,,p5_25,p_2,s4_26,s4_26,inanimate
1509,0,430,"(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



","[{'LOC': 'England'}, {'LOC': 'England'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'b'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'stranger'}, {'B_human': 'b'}, {'W_Inanimate': 'country'}]","(o2 / or
      :op1 (s / slash
            :op1 (p / person
                  :ARG0-of (d2 / drink-01))
            :op2 (p2 / person
                  :ARG1-of (d3 / drug-01))
            :op3 (l / likely-01
                  :ARG1 (p3 / pedophile)))
      :op2 (m / man
            :ARG0-of (d4 / deprive-01
                  :ARG2 (s2 / sex-01))
            :mod (o3 / old))
      :op3 (b2 / bloke
            :mod (f2 / foreign)
            :ARG1-of (f / familiarize-01 :polarity -
                  :ARG2 (t2 / thing
                        :manner-of (t3 / tend-02
                                    :ARG1 (p4 / person
                                          :mod (c / country :wiki ""England""
                                                :name (n2 / name :op1 ""England"")))
                                    :ARG2 (s3 / socialize-01
                                          :ARG0 p4
                                          :destination (p5 / person
                                                :mod (s4 / stranger)))))
                  :ARG1-of (p6 / possible-01)))
      :domain (b / bloke
            :ARG1-of (t / tend-02
                  :ARG2 (d / do-02
                        :ARG0 b
                        :ARG1 (i2 / it)
                        :ARG1-of (n / normal-02)))))



",DiGraph with 34 nodes and 33 edges,socialize-01,person,:destination,socialize-01,person,,s3_23,s3_23,p5_25,p_2,animate
1510,0,431,"(t / this :frequency 1
      :mod (s / sort)
      :destination (i / i)
      :time (r / recent))



",[{'PER': 'i'}],"(t / this :frequency 1
      :mod (s / sort)
      :destination (i / i)
      :time (r / recent))



",DiGraph with 4 nodes and 3 edges,this :frequency 1,sort,:mod,this :frequency 1,sort,:mod,t_0,t_0,s_1,s_1,inanimate
1511,0,431,"(t / this :frequency 1
      :mod (s / sort)
      :destination (i / i)
      :time (r / recent))



",[{'PER': 'i'}],"(t / this :frequency 1
      :mod (s / sort)
      :destination (i / i)
      :time (r / recent))



",DiGraph with 4 nodes and 3 edges,this :frequency 1,i,:destination,this :frequency 1,i,:destination,t_0,t_0,i_2,i_2,animate
1512,0,432,"(h / have-04 :li 4
      :ARG1 (c / chuck-01
            :ARG1 (b / bomb
                  :mod (p / phosphorus
                        :ARG1-of (w / white-03)))
            :destination (y / you)))



",[],"(h / have-04 :li 4
      :ARG1 (c / chuck-01
            :ARG1 (b / bomb
                  :mod (p / phosphorus
                        :ARG1-of (w / white-03)))
            :destination (y / you)))



",DiGraph with 6 nodes and 5 edges,bomb,phosphorus,:mod,bomb,phosphorus,:mod,b_2,b_2,p_3,p_3,inanimate
1513,0,432,"(h / have-04 :li 4
      :ARG1 (c / chuck-01
            :ARG1 (b / bomb
                  :mod (p / phosphorus
                        :ARG1-of (w / white-03)))
            :destination (y / you)))



",[],"(h / have-04 :li 4
      :ARG1 (c / chuck-01
            :ARG1 (b / bomb
                  :mod (p / phosphorus
                        :ARG1-of (w / white-03)))
            :destination (y / you)))



",DiGraph with 6 nodes and 5 edges,chuck-01,you,:destination,chuck-01,you,:destination,c_1,c_1,y_5,y_5,animate
1514,0,433,"(a / and
      :op1 (j / jump-03
            :ARG0 (p / person :quant 1
                  :ARG1-of (i / include-91
                        :ARG2 (t / they)))
            :destination (i2 / i))
      :op2 (r / run-off-24
            :ARG0 t
            :time (w / wince-01
                  :ARG0 i2
                  :ARG1 (p2 / pain-01
                        :ARG1 i2))))



","[{'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}]","(a / and
      :op1 (j / jump-03
            :ARG0 (p / person :quant 1
                  :ARG1-of (i / include-91
                        :ARG2 (t / they)))
            :destination (i2 / i))
      :op2 (r / run-off-24
            :ARG0 t
            :time (w / wince-01
                  :ARG0 i2
                  :ARG1 (p2 / pain-01
                        :ARG1 i2))))



",DiGraph with 13 nodes and 12 edges,jump-03,i,:destination,jump-03,i,:destination,j_1,j_1,i2_6,i2_6,animate
1515,0,434,"(p / pathway
      :source (b / break-02)
      :ARG1-of (c / convolute-01)
      :destination (p2 / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p3 / president)))
      :accompanier (d / deny-01
            :quant (m / multiple))
      :accompanier (l / lie-08
            :quant m)
      :accompanier (e / excuse-02
            :quant m))



","[{'B_human': 'person'}, {'B_human': 'a'}, {'B_human': 'a'}, {'B_human': 'a'}]","(p / pathway
      :source (b / break-02)
      :ARG1-of (c / convolute-01)
      :destination (p2 / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p3 / president)))
      :accompanier (d / deny-01
            :quant (m / multiple))
      :accompanier (l / lie-08
            :quant m)
      :accompanier (e / excuse-02
            :quant m))



",DiGraph with 12 nodes and 11 edges,pathway,person,:destination,pathway,person,:destination,p_0,p_0,p2_3,p2_3,animate
1516,0,434,"(p / pathway
      :source (b / break-02)
      :ARG1-of (c / convolute-01)
      :destination (p2 / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p3 / president)))
      :accompanier (d / deny-01
            :quant (m / multiple))
      :accompanier (l / lie-08
            :quant m)
      :accompanier (e / excuse-02
            :quant m))



","[{'B_human': 'person'}, {'B_human': 'a'}, {'B_human': 'a'}, {'B_human': 'a'}]","(p / pathway
      :source (b / break-02)
      :ARG1-of (c / convolute-01)
      :destination (p2 / person
            :ARG0-of (h / have-org-role-91
                  :ARG2 (p3 / president)))
      :accompanier (d / deny-01
            :quant (m / multiple))
      :accompanier (l / lie-08
            :quant m)
      :accompanier (e / excuse-02
            :quant m))



",DiGraph with 12 nodes and 11 edges,pathway,break-02,:source,pathway,break-02,:source,p_0,p_0,b_1,b_1,inanimate
1517,0,435,"(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



","[{'ORG': 'G'}, {'LOC': 'Brainerd'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Animate': 'school'}]","(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



",DiGraph with 30 nodes and 29 edges,possible-01,cause-01,:ARG1,possible-01,cause-01,cause-01,p_0,c_1,c_1,p_0,inanimate
1518,0,435,"(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



","[{'ORG': 'G'}, {'LOC': 'Brainerd'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Animate': 'school'}]","(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



",DiGraph with 30 nodes and 29 edges,possible-01,cause-01,:ARG1,possible-01,cause-01,cause-01,p_0,c_1,c_1,p_0,inanimate
1519,0,435,"(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



","[{'ORG': 'G'}, {'LOC': 'Brainerd'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Animate': 'school'}]","(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



",DiGraph with 30 nodes and 29 edges,it,all,:mod,it,all,:mod,i_25,i_25,a_26,a_26,inanimate
1520,0,435,"(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



","[{'ORG': 'G'}, {'LOC': 'Brainerd'}, {'PER': 'i'}, {'W_Animate': 'family'}, {'W_Animate': 'school'}]","(p / possible-01
      :ARG1 (c / cause-01
            :ARG0 (e / easy-05 :polarity -
                  :ARG1 (c2 / come-up-11
                        :ARG0 (f / family :wiki -
                              :name (n / name :op1 ""Gallman""))
                        :ARG1 (m / money
                              :purpose (t / tuition
                                    :destination (s / school :wiki -
                                          :name (n2 / name :op1 ""Brainerd"" :op2 ""Baptist"" :op3 ""School""))))))
            :ARG1 (w / walk-01
                  :ARG0 h
                  :ARG1 (b / boy :quant 2
                        :poss (h / he))
                  :prep-into s
                  :manner-of (s2 / soak-up-02
                        :ARG0 h
                        :ARG1 (i / it
                              :mod (a / all)))))
      :ARG1-of (h2 / hyperlink-91
            :ARG3 (u / url-entity :value ""http://www.timesfreepress.com/news/opinion/columns/story/2013/dec/29/alex-gallmans-last-goodbye/127673/"")))



",DiGraph with 30 nodes and 29 edges,tuition,school,:destination,tuition,school,:destination,t_10,t_10,s_11,s_11,animate
1521,0,436,"(h / heat-01
      :ARG0 (s / she)
      :ARG1 (o / oven)
      :destination (t / temperature-quantity :quant 250
            :scale (c / celsius)))



",[],"(h / heat-01
      :ARG0 (s / she)
      :ARG1 (o / oven)
      :destination (t / temperature-quantity :quant 250
            :scale (c / celsius)))



",DiGraph with 6 nodes and 5 edges,heat-01,temperature-quantity,:destination,heat-01,temperature-quantity,:destination,h_0,h_0,t_3,t_3,inanimate
1522,0,437,"(d / drive-01
      :ARG0 (h / he)
      :direction (w / west)
      :source (c / city :wiki ""Houston""
            :name (n / name :op1 ""Houston""))
      :destination (c2 / city :wiki ""Austin,_Texas""
            :name (n2 / name :op1 ""Austin"")))



","[{'LOC': 'Houston'}, {'LOC': 'Houston'}, {'LOC': 'Austin'}, {'LOC': 'Texas'}, {'LOC': 'Austin'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}]","(d / drive-01
      :ARG0 (h / he)
      :direction (w / west)
      :source (c / city :wiki ""Houston""
            :name (n / name :op1 ""Houston""))
      :destination (c2 / city :wiki ""Austin,_Texas""
            :name (n2 / name :op1 ""Austin"")))



",DiGraph with 11 nodes and 10 edges,drive-01,city,:destination,drive-01,city,:source,d_0,d_0,c2_7,c_3,inanimate
1523,0,437,"(d / drive-01
      :ARG0 (h / he)
      :direction (w / west)
      :source (c / city :wiki ""Houston""
            :name (n / name :op1 ""Houston""))
      :destination (c2 / city :wiki ""Austin,_Texas""
            :name (n2 / name :op1 ""Austin"")))



","[{'LOC': 'Houston'}, {'LOC': 'Houston'}, {'LOC': 'Austin'}, {'LOC': 'Texas'}, {'LOC': 'Austin'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'city'}]","(d / drive-01
      :ARG0 (h / he)
      :direction (w / west)
      :source (c / city :wiki ""Houston""
            :name (n / name :op1 ""Houston""))
      :destination (c2 / city :wiki ""Austin,_Texas""
            :name (n2 / name :op1 ""Austin"")))



",DiGraph with 11 nodes and 10 edges,drive-01,city,:source,drive-01,city,:source,d_0,d_0,c_3,c_3,inanimate
1524,0,438,"(d / drive-01
      :ARG0 (i / i)
      :destination (s / store))



",[{'PER': 'i'}],"(d / drive-01
      :ARG0 (i / i)
      :destination (s / store))



",DiGraph with 3 nodes and 2 edges,drive-01,store,:destination,drive-01,store,:destination,d_0,d_0,s_2,s_2,inanimate
1525,0,439,"(d / drive-01
      :ARG0 (i / i)
      :destination (c / city :wiki ""Indianapolis""
            :name (n / name :op1 ""Indianapolis""))
      :path (r / road :wiki ""Interstate_65""
            :name (n2 / name :op1 ""I-65"")))



","[{'LOC': 'Indianapolis'}, {'LOC': 'Indianapolis'}, {'MISC': 'Interstate_65'}, {'MISC': 'I-65'}, {'PER': 'i'}, {'W_Inanimate': 'city'}, {'W_Inanimate': 'road'}]","(d / drive-01
      :ARG0 (i / i)
      :destination (c / city :wiki ""Indianapolis""
            :name (n / name :op1 ""Indianapolis""))
      :path (r / road :wiki ""Interstate_65""
            :name (n2 / name :op1 ""I-65"")))



",DiGraph with 10 nodes and 9 edges,drive-01,city,:destination,drive-01,city,:destination,d_0,d_0,c_2,c_2,inanimate
1526,0,440,"(w / walk-01
      :ARG0 (i / i)
      :destination (w2 / window))



",[{'PER': 'i'}],"(w / walk-01
      :ARG0 (i / i)
      :destination (w2 / window))



",DiGraph with 3 nodes and 2 edges,walk-01,window,:destination,walk-01,window,:destination,w_0,w_0,w2_2,w2_2,inanimate
1527,0,441,"(m / missile
      :source (s / surface)
      :destination (s2 / surface))



",[],"(m / missile
      :source (s / surface)
      :destination (s2 / surface))



",DiGraph with 3 nodes and 2 edges,missile,surface,:destination,missile,surface,:source,m_0,m_0,s2_2,s_1,inanimate
1528,0,441,"(m / missile
      :source (s / surface)
      :destination (s2 / surface))



",[],"(m / missile
      :source (s / surface)
      :destination (s2 / surface))



",DiGraph with 3 nodes and 2 edges,missile,surface,:source,missile,surface,:source,m_0,m_0,s_1,s_1,inanimate
1529,0,442,"(f / fly-01
      :ARG1 (c / couple)
      :destination (s / state :wiki ""Hawaii"" :name (n / name :op1 ""Hawaii""))
      :manner (c2 / class
            :ord (o / ordinal-entity :value 1))
      :subevent-of (h / honeymoon-01
            :ARG0 c))



","[{'LOC': 'Hawaii'}, {'LOC': 'Hawaii'}, {'W_Inanimate': 'state'}]","(f / fly-01
      :ARG1 (c / couple)
      :destination (s / state :wiki ""Hawaii"" :name (n / name :op1 ""Hawaii""))
      :manner (c2 / class
            :ord (o / ordinal-entity :value 1))
      :subevent-of (h / honeymoon-01
            :ARG0 c))



",DiGraph with 11 nodes and 10 edges,fly-01,state,:destination,fly-01,state,:destination,f_0,f_0,s_2,s_2,inanimate
1530,0,443,"(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



",DiGraph with 21 nodes and 20 edges,lord,drug,:mod,lord,drug,:mod,l_7,l_7,d_8,d_8,inanimate
1531,0,443,"(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



",DiGraph with 21 nodes and 20 edges,traffic,drug,:mod,traffic,drug,,t_15,t_15,d2_16,d_8,inanimate
1532,0,443,"(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (r / realistic-03 :polarity -
            :ARG1 s)
      :op2 (f / false
            :domain (s / suggest-01
                  :ARG1 (a2 / and
                        :op1 (l / lord
                              :mod (d / drug)
                              :location (c / country :wiki ""Afghanistan"" :name (n / name :op1 ""Afghanistan""))
                              :time (n3 / no-longer))
                        :op2 (e / eradicate-01
                              :ARG1 (t / traffic
                                    :mod (d2 / drug)
                                    :destination (c2 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))))))



",DiGraph with 21 nodes and 20 edges,traffic,country,:destination,traffic,country,,t_15,t_15,c2_17,c_9,inanimate
1533,0,444,"(c / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d2 / drug)
            :source (c5 / country :wiki ""Afghanistan"" :name (n5 / name :op1 ""Afghanistan""))
            :destination (a2 / and
                  :op1 (c6 / country :wiki ""Russia"" :name (n4 / name :op1 ""Russia""))
                  :op2 (c7 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))))
      :ARG1 (i2 / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a3 / addict-01
                              :ARG2 (h / heroin))
                        :location (c8 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n6 / now)
                  :duration (t3 / temporal-quantity :quant 5
                        :unit (y / year)))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'B_human': 'add'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(c / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d2 / drug)
            :source (c5 / country :wiki ""Afghanistan"" :name (n5 / name :op1 ""Afghanistan""))
            :destination (a2 / and
                  :op1 (c6 / country :wiki ""Russia"" :name (n4 / name :op1 ""Russia""))
                  :op2 (c7 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))))
      :ARG1 (i2 / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a3 / addict-01
                              :ARG2 (h / heroin))
                        :location (c8 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n6 / now)
                  :duration (t3 / temporal-quantity :quant 5
                        :unit (y / year)))))



",DiGraph with 31 nodes and 30 edges,traffic-01,and,:destination,traffic-01,and,:destination,t2_1,t2_1,a2_7,a2_7,inanimate
1534,0,444,"(c / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d2 / drug)
            :source (c5 / country :wiki ""Afghanistan"" :name (n5 / name :op1 ""Afghanistan""))
            :destination (a2 / and
                  :op1 (c6 / country :wiki ""Russia"" :name (n4 / name :op1 ""Russia""))
                  :op2 (c7 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))))
      :ARG1 (i2 / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a3 / addict-01
                              :ARG2 (h / heroin))
                        :location (c8 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n6 / now)
                  :duration (t3 / temporal-quantity :quant 5
                        :unit (y / year)))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'B_human': 'add'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(c / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d2 / drug)
            :source (c5 / country :wiki ""Afghanistan"" :name (n5 / name :op1 ""Afghanistan""))
            :destination (a2 / and
                  :op1 (c6 / country :wiki ""Russia"" :name (n4 / name :op1 ""Russia""))
                  :op2 (c7 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))))
      :ARG1 (i2 / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a3 / addict-01
                              :ARG2 (h / heroin))
                        :location (c8 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n6 / now)
                  :duration (t3 / temporal-quantity :quant 5
                        :unit (y / year)))))



",DiGraph with 31 nodes and 30 edges,traffic-01,country,:source,traffic-01,country,:source,t2_1,t2_1,c5_3,c5_3,inanimate
1535,0,445,"(c4 / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d / drug)
            :source (c / country :wiki ""Afghanistan"" :name (n4 / name :op1 ""Afghanistan""))
            :destination (c2 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe"")))
      :ARG1 (i / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a2 / addict-01
                              :ARG2 (h / heroin))
                        :location (c3 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n5 / now)
                  :duration (t / temporal-quantity :quant 5
                        :unit (y / year)))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'B_human': 'add'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(c4 / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d / drug)
            :source (c / country :wiki ""Afghanistan"" :name (n4 / name :op1 ""Afghanistan""))
            :destination (c2 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe"")))
      :ARG1 (i / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a2 / addict-01
                              :ARG2 (h / heroin))
                        :location (c3 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n5 / now)
                  :duration (t / temporal-quantity :quant 5
                        :unit (y / year)))))



",DiGraph with 26 nodes and 25 edges,traffic-01,continent,:destination,traffic-01,continent,:destination,t2_1,t2_1,c2_7,c2_7,inanimate
1536,0,445,"(c4 / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d / drug)
            :source (c / country :wiki ""Afghanistan"" :name (n4 / name :op1 ""Afghanistan""))
            :destination (c2 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe"")))
      :ARG1 (i / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a2 / addict-01
                              :ARG2 (h / heroin))
                        :location (c3 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n5 / now)
                  :duration (t / temporal-quantity :quant 5
                        :unit (y / year)))))



","[{'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'B_human': 'add'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(c4 / cause-01
      :ARG0 (t2 / traffic-01
            :ARG1 (d / drug)
            :source (c / country :wiki ""Afghanistan"" :name (n4 / name :op1 ""Afghanistan""))
            :destination (c2 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe"")))
      :ARG1 (i / increase-01
            :ARG1 (n / number-01
                  :ARG1 (p / person
                        :ARG1-of (a2 / addict-01
                              :ARG2 (h / heroin))
                        :location (c3 / country :wiki ""Tajikistan"" :name (n2 / name :op1 ""Tajikistan""))))
            :manner (v / vast)
            :time (b / before
                  :op1 (n5 / now)
                  :duration (t / temporal-quantity :quant 5
                        :unit (y / year)))))



",DiGraph with 26 nodes and 25 edges,traffic-01,country,:source,traffic-01,country,:source,t2_1,t2_1,c_3,c_3,inanimate
1537,0,446,"(a / and
      :op1 (s / share-01
            :ARG0 (c / country :wiki ""Tajikistan"" :name (n4 / name :op1 ""Tajikistan""))
            :ARG1 (b / border
                  :extent (d3 / distance-quantity :quant 1300
                        :unit (k2 / kilometer)))
            :ARG2 (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan"")))
      :op2 (b2 / become-01
            :ARG1 c
            :ARG2 (p / point
                  :mod (t / transit)
                  :purpose (t2 / traffic-01
                        :ARG1 (h / heroin)
                        :destination (a3 / and
                              :op1 (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
                              :op2 (c4 / continent :wiki ""Europe"" :name (n / name :op1 ""Europe"")))))))



","[{'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (s / share-01
            :ARG0 (c / country :wiki ""Tajikistan"" :name (n4 / name :op1 ""Tajikistan""))
            :ARG1 (b / border
                  :extent (d3 / distance-quantity :quant 1300
                        :unit (k2 / kilometer)))
            :ARG2 (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan"")))
      :op2 (b2 / become-01
            :ARG1 c
            :ARG2 (p / point
                  :mod (t / transit)
                  :purpose (t2 / traffic-01
                        :ARG1 (h / heroin)
                        :destination (a3 / and
                              :op1 (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
                              :op2 (c4 / continent :wiki ""Europe"" :name (n / name :op1 ""Europe"")))))))



",DiGraph with 29 nodes and 28 edges,point,transit,:mod,point,transit,:mod,p_16,p_16,t_17,t_17,inanimate
1538,0,446,"(a / and
      :op1 (s / share-01
            :ARG0 (c / country :wiki ""Tajikistan"" :name (n4 / name :op1 ""Tajikistan""))
            :ARG1 (b / border
                  :extent (d3 / distance-quantity :quant 1300
                        :unit (k2 / kilometer)))
            :ARG2 (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan"")))
      :op2 (b2 / become-01
            :ARG1 c
            :ARG2 (p / point
                  :mod (t / transit)
                  :purpose (t2 / traffic-01
                        :ARG1 (h / heroin)
                        :destination (a3 / and
                              :op1 (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
                              :op2 (c4 / continent :wiki ""Europe"" :name (n / name :op1 ""Europe"")))))))



","[{'LOC': 'Tajikistan'}, {'LOC': 'Tajikistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Afghanistan'}, {'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}]","(a / and
      :op1 (s / share-01
            :ARG0 (c / country :wiki ""Tajikistan"" :name (n4 / name :op1 ""Tajikistan""))
            :ARG1 (b / border
                  :extent (d3 / distance-quantity :quant 1300
                        :unit (k2 / kilometer)))
            :ARG2 (c2 / country :wiki ""Afghanistan"" :name (n3 / name :op1 ""Afghanistan"")))
      :op2 (b2 / become-01
            :ARG1 c
            :ARG2 (p / point
                  :mod (t / transit)
                  :purpose (t2 / traffic-01
                        :ARG1 (h / heroin)
                        :destination (a3 / and
                              :op1 (c3 / country :wiki ""Russia"" :name (n2 / name :op1 ""Russia""))
                              :op2 (c4 / continent :wiki ""Europe"" :name (n / name :op1 ""Europe"")))))))



",DiGraph with 29 nodes and 28 edges,traffic-01,and,:destination,traffic-01,and,,t2_18,t2_18,a3_20,a_0,inanimate
1539,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,secretary,general,:mod,secretary,general,:mod,s2_16,s2_16,g_17,g_17,inanimate
1540,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,secretary,deputy,:mod,secretary,deputy,:mod,s2_16,s2_16,d_18,d_18,inanimate
1541,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,person,continent,:mod,person,continent,,p5_33,p4_1,c3_34,c3_34,inanimate
1542,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,person,nation,:mod,person,nation,,p5_33,p4_1,n2_38,n2_38,inanimate
1543,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,person,continent,:mod,person,continent,,p3_39,p4_1,c4_40,c3_34,inanimate
1544,0,447,"(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



","[{'PER': 'Ram'}, {'LOC': 'Cambodia'}, {'LOC': 'Cambodia'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'LOC': 'Europe'}, {'LOC': 'Europe'}, {'B_human': 'person'}, {'B_human': 'secretary'}, {'B_human': 'deputy'}, {'B_human': 'person'}, {'B_human': 'person'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}, {'W_Inanimate': 'continent'}]","(s / say-01
      :ARG0 (p4 / person :wiki - :name (n7 / name :op1 ""Lour"" :op2 ""Ramin"")
            :ARG0-of (h4 / have-org-role-91
                  :ARG1 (g2 / government-organization :wiki - :name (n / name :op1 ""Narcotics"" :op2 ""Authority"")
                        :poss (c / country :wiki ""Cambodia"" :name (n6 / name :op1 ""Cambodia"")))
                  :ARG2 (s2 / secretary
                        :mod (g / general)
                        :mod (d / deputy))))
      :ARG1 (a / arrest-01
            :ARG0 (a2 / and
                  :op1 (p / person
                        :ARG0-of (h2 / have-org-role-91
                              :ARG1 c
                              :ARG2 (o / official)))
                  :op2 (p2 / person
                        :ARG0-of (h3 / have-org-role-91
                              :ARG1 (c2 / country :wiki ""Vietnam"" :name (n5 / name :op1 ""Vietnam""))
                              :ARG2 (o2 / official))))
            :ARG1 (a3 / and
                  :op1 (p5 / person
                        :mod (c3 / continent :wiki ""Asia"" :name (n4 / name :op1 ""Asia""))
                        :mod (n2 / nation))
                  :op2 (p3 / person
                        :mod (c4 / continent :wiki ""Europe"" :name (n3 / name :op1 ""Europe""))
                        :ARG0-of (a4 / attempt-01
                              :ARG1 (t / trade-01
                                    :ARG1 (h / heroin)
                                    :path c
                                    :destination c2))))))



",DiGraph with 49 nodes and 48 edges,trade-01,c2,:destination,trade-01,c2,:destination,t_45,t_45,c2_48,c2_48,inanimate
1545,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,state-01,also,:mod,state-01,also,:mod,s_0,s_0,a_32,a_32,inanimate
1546,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,ministry,country,:mod,ministry,country,:mod,m_6,m_6,c_8,c_8,inanimate
1547,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,year,finance,:mod,year,finance,:mod,y_27,y_27,f3_28,f3_28,inanimate
1548,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,year,finance,:mod,year,finance,:mod,y4_29,y_27,f4_30,f3_28,inanimate
1549,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,year,another,:mod,year,another,,y4_29,y_27,a5_31,a5_31,inanimate
1550,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,carry-01,year,:destination,carry-01,year,:source,c2_18,c2_18,y4_29,y_27,inanimate
1551,0,448,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



","[{'LOC': 'Na'}, {'LOC': 'India'}, {'LOC': 'India'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Narain""))
      :ARG1 (s2 / seek-01
            :ARG0 (m / ministry
                  :topic (d / defend-01)
                  :mod (c / country :wiki ""India"" :name (n2 / name :op1 ""India"")))
            :ARG1 (a2 / approve-01
                  :ARG0 (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 c))
                  :ARG1 (a3 / allow-01
                        :ARG0 g
                        :ARG1 (c2 / carry-01
                              :ARG0 m
                              :ARG1 (t / thing
                                    :ARG1-of (a4 / allocate-01
                                          :ARG2 (b / budget
                                                :poss (m2 / military)))
                                    :ARG1-of (u / utilize-01 :polarity -))
                              :direction (f / forward)
                              :source (y / year
                                    :mod (f3 / finance))
                              :destination (y4 / year
                                    :mod (f4 / finance)
                                    :mod (a5 / another))))))
      :mod (a / also))



",DiGraph with 33 nodes and 32 edges,carry-01,year,:source,carry-01,year,:source,c2_18,c2_18,y_27,y_27,inanimate
1552,0,449,"(o2 / obligate-01
      :ARG2 (g / give-01
            :ARG1 (i / information
                  :topic (i2 / intelligence)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / most)
                        :ARG5 (i7 / information
                              :ARG1-of (p / possible-01))))
            :ARG2 (o / organization :wiki ""International_Atomic_Energy_Agency"" :name (n / name :op1 ""IAEA""))
            :purpose (g2 / guide-01
                  :ARG0 (p2 / person
                        :ARG0-of (i3 / inspect-01))
                  :destination (o3 / or
                        :op1 (a / anything
                              :ARG1-of (i4 / inspect-01
                                    :ARG0 p2
                                    :ARG1-of (r / recommend-01)))
                        :op2 (i5 / item
                              :mod (a2 / any)
                              :ARG1-of (h2 / hide-01
                                    :ARG2 p2))))))



","[{'ORG': 'International_Atomic_Energy_Agency'}, {'ORG': 'IA'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(o2 / obligate-01
      :ARG2 (g / give-01
            :ARG1 (i / information
                  :topic (i2 / intelligence)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / most)
                        :ARG5 (i7 / information
                              :ARG1-of (p / possible-01))))
            :ARG2 (o / organization :wiki ""International_Atomic_Energy_Agency"" :name (n / name :op1 ""IAEA""))
            :purpose (g2 / guide-01
                  :ARG0 (p2 / person
                        :ARG0-of (i3 / inspect-01))
                  :destination (o3 / or
                        :op1 (a / anything
                              :ARG1-of (i4 / inspect-01
                                    :ARG0 p2
                                    :ARG1-of (r / recommend-01)))
                        :op2 (i5 / item
                              :mod (a2 / any)
                              :ARG1-of (h2 / hide-01
                                    :ARG2 p2))))))



",DiGraph with 24 nodes and 23 edges,item,any,:mod,item,any,:mod,i5_20,i5_20,a2_21,a2_21,inanimate
1553,0,449,"(o2 / obligate-01
      :ARG2 (g / give-01
            :ARG1 (i / information
                  :topic (i2 / intelligence)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / most)
                        :ARG5 (i7 / information
                              :ARG1-of (p / possible-01))))
            :ARG2 (o / organization :wiki ""International_Atomic_Energy_Agency"" :name (n / name :op1 ""IAEA""))
            :purpose (g2 / guide-01
                  :ARG0 (p2 / person
                        :ARG0-of (i3 / inspect-01))
                  :destination (o3 / or
                        :op1 (a / anything
                              :ARG1-of (i4 / inspect-01
                                    :ARG0 p2
                                    :ARG1-of (r / recommend-01)))
                        :op2 (i5 / item
                              :mod (a2 / any)
                              :ARG1-of (h2 / hide-01
                                    :ARG2 p2))))))



","[{'ORG': 'International_Atomic_Energy_Agency'}, {'ORG': 'IA'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'organization'}]","(o2 / obligate-01
      :ARG2 (g / give-01
            :ARG1 (i / information
                  :topic (i2 / intelligence)
                  :ARG1-of (h / have-quant-91
                        :ARG3 (m / most)
                        :ARG5 (i7 / information
                              :ARG1-of (p / possible-01))))
            :ARG2 (o / organization :wiki ""International_Atomic_Energy_Agency"" :name (n / name :op1 ""IAEA""))
            :purpose (g2 / guide-01
                  :ARG0 (p2 / person
                        :ARG0-of (i3 / inspect-01))
                  :destination (o3 / or
                        :op1 (a / anything
                              :ARG1-of (i4 / inspect-01
                                    :ARG0 p2
                                    :ARG1-of (r / recommend-01)))
                        :op2 (i5 / item
                              :mod (a2 / any)
                              :ARG1-of (h2 / hide-01
                                    :ARG2 p2))))))



",DiGraph with 24 nodes and 23 edges,guide-01,or,:destination,guide-01,or,:destination,g2_12,g2_12,o3_15,o3_15,inanimate
1554,0,450,"(b / benefit-01
      :ARG0 (s2 / speed
            :poss (r / rotate-01
                  :ARG1 (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
            :ARG1-of (f / full-09)
            :prep-on (e / equator)
            :ARG0-of (a / aid-01
                  :ARG1 (t / trajectory
                        :destination (s3 / space)
                        :poss s)))
      :ARG1 (s / spacecraft
            :ARG1-of (l / launch-01
                  :location (c / city :wiki ""Kourou"" :name (n / name :op1 ""Kourou"")))))



","[{'LOC': 'Earth'}, {'LOC': 'Earth'}, {'LOC': 'Kourou'}, {'LOC': 'Kourou'}, {'W_Inanimate': 'planet'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'city'}]","(b / benefit-01
      :ARG0 (s2 / speed
            :poss (r / rotate-01
                  :ARG1 (p / planet :wiki ""Earth"" :name (n2 / name :op1 ""Earth"")))
            :ARG1-of (f / full-09)
            :prep-on (e / equator)
            :ARG0-of (a / aid-01
                  :ARG1 (t / trajectory
                        :destination (s3 / space)
                        :poss s)))
      :ARG1 (s / spacecraft
            :ARG1-of (l / launch-01
                  :location (c / city :wiki ""Kourou"" :name (n / name :op1 ""Kourou"")))))



",DiGraph with 19 nodes and 18 edges,trajectory,space,:destination,trajectory,space,:destination,t_10,t_10,s3_11,s3_11,inanimate
1555,0,451,"(r / return-01
      :ARG1 (o / organization :wiki ""Amnesty_International"" :name (n / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG3 (m / mission-01
            :ARG0 o
            :ARG1 (f / find-01
                  :ARG1 (f2 / fact))
            :ord (o2 / ordinal-entity :value 1)
            :destination (c / country :wiki ""Myanmar"" :name (n3 / name :op1 ""Myanmar"")))
      :time (w / week
            :mod (l / last)))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}]","(r / return-01
      :ARG1 (o / organization :wiki ""Amnesty_International"" :name (n / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG3 (m / mission-01
            :ARG0 o
            :ARG1 (f / find-01
                  :ARG1 (f2 / fact))
            :ord (o2 / ordinal-entity :value 1)
            :destination (c / country :wiki ""Myanmar"" :name (n3 / name :op1 ""Myanmar"")))
      :time (w / week
            :mod (l / last)))



",DiGraph with 18 nodes and 17 edges,week,last,:mod,week,last,:mod,w_16,w_16,l_17,l_17,inanimate
1556,0,451,"(r / return-01
      :ARG1 (o / organization :wiki ""Amnesty_International"" :name (n / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG3 (m / mission-01
            :ARG0 o
            :ARG1 (f / find-01
                  :ARG1 (f2 / fact))
            :ord (o2 / ordinal-entity :value 1)
            :destination (c / country :wiki ""Myanmar"" :name (n3 / name :op1 ""Myanmar"")))
      :time (w / week
            :mod (l / last)))



","[{'ORG': 'Amnesty_International'}, {'ORG': 'Amnesty'}, {'ORG': 'International'}, {'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}]","(r / return-01
      :ARG1 (o / organization :wiki ""Amnesty_International"" :name (n / name :op1 ""Amnesty"" :op2 ""International""))
      :ARG3 (m / mission-01
            :ARG0 o
            :ARG1 (f / find-01
                  :ARG1 (f2 / fact))
            :ord (o2 / ordinal-entity :value 1)
            :destination (c / country :wiki ""Myanmar"" :name (n3 / name :op1 ""Myanmar"")))
      :time (w / week
            :mod (l / last)))



",DiGraph with 18 nodes and 17 edges,mission-01,country,:destination,mission-01,country,:destination,m_6,m_6,c_12,c_12,inanimate
1557,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,arrest-01,also,:mod,arrest-01,also,:mod,a_0,a_0,a3_15,a3_15,inanimate
1558,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,person,nation,:mod,person,nation,:mod,p6_4,p6_4,n_9,n_9,inanimate
1559,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,person,c,:mod,person,c,:mod,p6_4,p6_4,c_10,c_10,inanimate
1560,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,bromazepam,psychoactive,:mod,bromazepam,psychoactive,:mod,b2_20,b2_20,p4_21,p4_21,inanimate
1561,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,bromazepam,pharmacy,:mod,bromazepam,pharmacy,:mod,b2_20,b2_20,p5_22,p5_22,inanimate
1562,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,traffic-01,country,:destination,traffic-01,country,:source,t_19,t_19,c2_27,c_23,inanimate
1563,0,452,"(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



","[{'LOC': 'K'}, {'LOC': 'hamkh'}, {'LOC': 'Laos'}, {'LOC': 'Laos'}, {'LOC': 'Vietnam'}, {'LOC': 'Vietnam'}, {'B_human': 'person'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / arrest-01
      :ARG0 (p / police
            :ARG0-of (c3 / counter-01
                  :ARG1 (d / drug)))
      :ARG1 (p6 / person :wiki - :name (n5 / name :op1 ""Khamkhuong"" :op2 ""Unmano"")
            :mod (n / nation)
            :mod c)
      :time (d2 / date-entity :year 2003 :month 7 :day 1)
      :mod (a3 / also)
      :time (b / break-up-08
            :ARG0 p
            :ARG1 (g / gang
                  :ARG0-of (t / traffic-01
                        :ARG1 (b2 / bromazepam
                              :mod (p4 / psychoactive)
                              :mod (p5 / pharmacy))
                        :source (c / country :wiki ""Laos"" :name (n6 / name :op1 ""Laos""))
                        :destination (c2 / country :wiki ""Vietnam"" :name (n7 / name :op1 ""Vietnam""))))))



",DiGraph with 31 nodes and 30 edges,traffic-01,country,:source,traffic-01,country,:source,t_19,t_19,c_23,c_23,inanimate
1564,0,453,"(a / and
      :op1 (c / contain-01
            :ARG0 (m / medicine
                  :ARG1-of (l / legal-02))
            :ARG1 (a3 / and
                  :op1 (e / ephedrine)
                  :op2 (p / pseudoephedrine)))
      :op2 (u / use-01
            :ARG1 a3
            :ARG2 (p2 / produce-01
                  :ARG1 (s3 / stimulant
                        :ARG2-of (i / include-01
                              :ARG1 (o / or
                                    :op1 (s / speed)
                                    :op2 (i3 / ice)
                                    :ARG1-of (p3 / produce-01
                                          :location (c2 / country :wiki ""Myanmar"" :name (n / name :op1 ""Myanmar""))
                                          :quant (m2 / mass-quantity
                                                :mod (l3 / large)))
                                    :ARG1-of (t3 / traffic-01
                                          :destination (a6 / and
                                                :op1 (a7 / and
                                                      :op1 (c3 / country :wiki ""Thailand"" :name (n2 / name :op1 ""Thailand""))
                                                      :op2 (c4 / country :wiki ""China"" :name (n3 / name :op1 ""China"")))
                                                :op2 (b / beyond
                                                      :op1 a7))
                                          :time (t4 / then))))
                        :ARG1-of (l2 / legal-02 :polarity -))
                  :ARG2 a3)))



","[{'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (c / contain-01
            :ARG0 (m / medicine
                  :ARG1-of (l / legal-02))
            :ARG1 (a3 / and
                  :op1 (e / ephedrine)
                  :op2 (p / pseudoephedrine)))
      :op2 (u / use-01
            :ARG1 a3
            :ARG2 (p2 / produce-01
                  :ARG1 (s3 / stimulant
                        :ARG2-of (i / include-01
                              :ARG1 (o / or
                                    :op1 (s / speed)
                                    :op2 (i3 / ice)
                                    :ARG1-of (p3 / produce-01
                                          :location (c2 / country :wiki ""Myanmar"" :name (n / name :op1 ""Myanmar""))
                                          :quant (m2 / mass-quantity
                                                :mod (l3 / large)))
                                    :ARG1-of (t3 / traffic-01
                                          :destination (a6 / and
                                                :op1 (a7 / and
                                                      :op1 (c3 / country :wiki ""Thailand"" :name (n2 / name :op1 ""Thailand""))
                                                      :op2 (c4 / country :wiki ""China"" :name (n3 / name :op1 ""China"")))
                                                :op2 (b / beyond
                                                      :op1 a7))
                                          :time (t4 / then))))
                        :ARG1-of (l2 / legal-02 :polarity -))
                  :ARG2 a3)))



",DiGraph with 39 nodes and 38 edges,mass-quantity,large,:mod,mass-quantity,large,:mod,m2_20,m2_20,l3_21,l3_21,inanimate
1565,0,453,"(a / and
      :op1 (c / contain-01
            :ARG0 (m / medicine
                  :ARG1-of (l / legal-02))
            :ARG1 (a3 / and
                  :op1 (e / ephedrine)
                  :op2 (p / pseudoephedrine)))
      :op2 (u / use-01
            :ARG1 a3
            :ARG2 (p2 / produce-01
                  :ARG1 (s3 / stimulant
                        :ARG2-of (i / include-01
                              :ARG1 (o / or
                                    :op1 (s / speed)
                                    :op2 (i3 / ice)
                                    :ARG1-of (p3 / produce-01
                                          :location (c2 / country :wiki ""Myanmar"" :name (n / name :op1 ""Myanmar""))
                                          :quant (m2 / mass-quantity
                                                :mod (l3 / large)))
                                    :ARG1-of (t3 / traffic-01
                                          :destination (a6 / and
                                                :op1 (a7 / and
                                                      :op1 (c3 / country :wiki ""Thailand"" :name (n2 / name :op1 ""Thailand""))
                                                      :op2 (c4 / country :wiki ""China"" :name (n3 / name :op1 ""China"")))
                                                :op2 (b / beyond
                                                      :op1 a7))
                                          :time (t4 / then))))
                        :ARG1-of (l2 / legal-02 :polarity -))
                  :ARG2 a3)))



","[{'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'China'}, {'LOC': 'China'}, {'PER': 'i'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(a / and
      :op1 (c / contain-01
            :ARG0 (m / medicine
                  :ARG1-of (l / legal-02))
            :ARG1 (a3 / and
                  :op1 (e / ephedrine)
                  :op2 (p / pseudoephedrine)))
      :op2 (u / use-01
            :ARG1 a3
            :ARG2 (p2 / produce-01
                  :ARG1 (s3 / stimulant
                        :ARG2-of (i / include-01
                              :ARG1 (o / or
                                    :op1 (s / speed)
                                    :op2 (i3 / ice)
                                    :ARG1-of (p3 / produce-01
                                          :location (c2 / country :wiki ""Myanmar"" :name (n / name :op1 ""Myanmar""))
                                          :quant (m2 / mass-quantity
                                                :mod (l3 / large)))
                                    :ARG1-of (t3 / traffic-01
                                          :destination (a6 / and
                                                :op1 (a7 / and
                                                      :op1 (c3 / country :wiki ""Thailand"" :name (n2 / name :op1 ""Thailand""))
                                                      :op2 (c4 / country :wiki ""China"" :name (n3 / name :op1 ""China"")))
                                                :op2 (b / beyond
                                                      :op1 a7))
                                          :time (t4 / then))))
                        :ARG1-of (l2 / legal-02 :polarity -))
                  :ARG2 a3)))



",DiGraph with 39 nodes and 38 edges,traffic-01,and,:destination,traffic-01,and,,t3_22,t3_22,a6_23,a_0,inanimate
1566,0,454,"(s / state-01
      :ARG0 (g / government-organization
            :ARG0-of (g3 / govern-01
                  :ARG1 (c4 / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand""))))
      :ARG1 (c / consider-02
            :ARG0 g
            :ARG1 (b / build-01
                  :ARG0 g
                  :ARG1 (f / fence
                        :mod (s4 / security
                              :ARG1-of (h / high-02)))
                  :location (a / along
                        :op1 (b3 / border-01
                              :ARG1 c4
                              :ARG2 (c5 / country :wiki ""Myanmar"" :name (n2 / name :op1 ""Myanmar"")))))
            :ARG2 (s2 / stop-01
                  :ARG0 g
                  :ARG1 (t / traffic-01
                        :ARG0 (p / person
                              :ARG0-of (s3 / smuggle-01))
                        :ARG1 (d / drug
                              :ARG1-of (l / legal-02 :polarity -))
                        :destination c4)))
      :time (e / early
            :op1 (d2 / date-entity :year 2004)))



","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (g / government-organization
            :ARG0-of (g3 / govern-01
                  :ARG1 (c4 / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand""))))
      :ARG1 (c / consider-02
            :ARG0 g
            :ARG1 (b / build-01
                  :ARG0 g
                  :ARG1 (f / fence
                        :mod (s4 / security
                              :ARG1-of (h / high-02)))
                  :location (a / along
                        :op1 (b3 / border-01
                              :ARG1 c4
                              :ARG2 (c5 / country :wiki ""Myanmar"" :name (n2 / name :op1 ""Myanmar"")))))
            :ARG2 (s2 / stop-01
                  :ARG0 g
                  :ARG1 (t / traffic-01
                        :ARG0 (p / person
                              :ARG0-of (s3 / smuggle-01))
                        :ARG1 (d / drug
                              :ARG1-of (l / legal-02 :polarity -))
                        :destination c4)))
      :time (e / early
            :op1 (d2 / date-entity :year 2004)))



",DiGraph with 33 nodes and 32 edges,fence,security,:mod,fence,security,:mod,f_11,f_11,s4_12,s4_12,inanimate
1567,0,454,"(s / state-01
      :ARG0 (g / government-organization
            :ARG0-of (g3 / govern-01
                  :ARG1 (c4 / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand""))))
      :ARG1 (c / consider-02
            :ARG0 g
            :ARG1 (b / build-01
                  :ARG0 g
                  :ARG1 (f / fence
                        :mod (s4 / security
                              :ARG1-of (h / high-02)))
                  :location (a / along
                        :op1 (b3 / border-01
                              :ARG1 c4
                              :ARG2 (c5 / country :wiki ""Myanmar"" :name (n2 / name :op1 ""Myanmar"")))))
            :ARG2 (s2 / stop-01
                  :ARG0 g
                  :ARG1 (t / traffic-01
                        :ARG0 (p / person
                              :ARG0-of (s3 / smuggle-01))
                        :ARG1 (d / drug
                              :ARG1-of (l / legal-02 :polarity -))
                        :destination c4)))
      :time (e / early
            :op1 (d2 / date-entity :year 2004)))



","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'LOC': 'Myanmar'}, {'LOC': 'Myanmar'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (g / government-organization
            :ARG0-of (g3 / govern-01
                  :ARG1 (c4 / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand""))))
      :ARG1 (c / consider-02
            :ARG0 g
            :ARG1 (b / build-01
                  :ARG0 g
                  :ARG1 (f / fence
                        :mod (s4 / security
                              :ARG1-of (h / high-02)))
                  :location (a / along
                        :op1 (b3 / border-01
                              :ARG1 c4
                              :ARG2 (c5 / country :wiki ""Myanmar"" :name (n2 / name :op1 ""Myanmar"")))))
            :ARG2 (s2 / stop-01
                  :ARG0 g
                  :ARG1 (t / traffic-01
                        :ARG0 (p / person
                              :ARG0-of (s3 / smuggle-01))
                        :ARG1 (d / drug
                              :ARG1-of (l / legal-02 :polarity -))
                        :destination c4)))
      :time (e / early
            :op1 (d2 / date-entity :year 2004)))



",DiGraph with 33 nodes and 32 edges,traffic-01,c4,:destination,traffic-01,c4,,t_23,t_23,c4_29,c4_16,inanimate
1568,0,455,"(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



","[{'PER': 'Jun'}, {'MISC': 'ichiro'}, {'LOC': 'Koizumi'}, {'PER': 'Jun'}, {'LOC': 'ichiro'}, {'LOC': 'Koizumi'}, {'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'B_human': 'person'}, {'B_human': 'neighbor'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}]","(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



",DiGraph with 31 nodes and 30 edges,minister,prime,:mod,minister,prime,:mod,m_13,m_13,p_14,p_14,inanimate
1569,0,455,"(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



","[{'PER': 'Jun'}, {'MISC': 'ichiro'}, {'LOC': 'Koizumi'}, {'PER': 'Jun'}, {'LOC': 'ichiro'}, {'LOC': 'Koizumi'}, {'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'B_human': 'person'}, {'B_human': 'neighbor'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}]","(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



",DiGraph with 31 nodes and 30 edges,neighbor,continent,:mod,neighbor,continent,:mod,n3_23,n3_23,c2_24,c2_24,inanimate
1570,0,455,"(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



","[{'PER': 'Jun'}, {'MISC': 'ichiro'}, {'LOC': 'Koizumi'}, {'PER': 'Jun'}, {'LOC': 'ichiro'}, {'LOC': 'Koizumi'}, {'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Yasu'}, {'LOC': 'Shrine'}, {'LOC': 'Asia'}, {'LOC': 'Asia'}, {'B_human': 'person'}, {'B_human': 'neighbor'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'continent'}]","(a / anger-01
      :ARG0 (m2 / make-01
            :ARG0 (a2 / and
                  :op1 (p5 / person :wiki ""Junichiro_Koizumi""
                        :name (n / name :op1 ""Junichiro"" :op2 ""Koizumi"")
                        :ARG0-of (h / have-org-role-91
                              :ARG1 (c / country :wiki ""Japan""
                                    :name (n2 / name :op1 ""Japan""))
                              :ARG2 (m / minister
                                    :mod (p / prime))))
                  :op2 (p3 / predecessor
                        :poss p5))
            :ARG1 (p4 / pilgrimage
                  :destination (w / worship-place :wiki ""Yasukuni_Shrine""
                        :name (n6 / name :op1 ""Yasukuni"" :op2 ""Shrine""))))
      :ARG1 (n3 / neighbor
            :mod (c2 / continent :wiki ""Asia""
                  :name (n4 / name :op1 ""Asia""))
            :ARG0-of (s / suffer-01
                  :ARG1 (o / occupy-01
                        :ARG0 c))))



",DiGraph with 31 nodes and 30 edges,pilgrimage,worship-place,:destination,pilgrimage,worship-place,:destination,p4_17,p4_17,w_18,w_18,inanimate
1571,0,456,"(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



","[{'LOC': 'Si'}, {'MISC': 'Re'}, {'LOC': 'Si'}, {'LOC': 'Angkor_Wat'}, {'LOC': 'Angkor'}, {'W_Inanimate': 'city'}]","(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



",DiGraph with 12 nodes and 11 edges,city,town,:mod,city,town,:mod,c_0,c_0,t_5,t_5,inanimate
1572,0,456,"(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



","[{'LOC': 'Si'}, {'MISC': 'Re'}, {'LOC': 'Si'}, {'LOC': 'Angkor_Wat'}, {'LOC': 'Angkor'}, {'W_Inanimate': 'city'}]","(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



",DiGraph with 12 nodes and 11 edges,town,gateway,:mod,town,gateway,:mod,t_5,t_5,g_6,g_6,inanimate
1573,0,456,"(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



","[{'LOC': 'Si'}, {'MISC': 'Re'}, {'LOC': 'Si'}, {'LOC': 'Angkor_Wat'}, {'LOC': 'Angkor'}, {'W_Inanimate': 'city'}]","(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



",DiGraph with 12 nodes and 11 edges,complex,temple,:mod,complex,temple,:mod,c2_7,c2_7,t2_11,t2_11,inanimate
1574,0,456,"(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



","[{'LOC': 'Si'}, {'MISC': 'Re'}, {'LOC': 'Si'}, {'LOC': 'Angkor_Wat'}, {'LOC': 'Angkor'}, {'W_Inanimate': 'city'}]","(c / city :wiki ""Siem_Reap""
      :name (n / name :op1 ""Siem"" :op2 ""Reap"")
      :mod (t / town
            :mod (g / gateway)
            :destination (c2 / complex :wiki ""Angkor_Wat""
                  :name (n2 / name :op1 ""Angkor"" :op2 ""Wat"")
                  :mod (t2 / temple))))



",DiGraph with 12 nodes and 11 edges,town,complex,:destination,town,complex,:destination,t_5,t_5,c2_7,c2_7,inanimate
1575,0,457,"(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



",DiGraph with 12 nodes and 11 edges,horse,city,:mod,horse,city,:mod,h_1,h_1,c_2,c_2,inanimate
1576,0,457,"(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



",DiGraph with 12 nodes and 11 edges,replicate-01,machine,:destination,replicate-01,machine,:source,r_6,r_6,m2_9,m_8,inanimate
1577,0,457,"(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



","[{'LOC': 'Troy'}, {'LOC': 'Troy'}, {'W_Inanimate': 'city'}]","(c2 / contrast-01
      :ARG1 (h / horse
            :mod (c / city :wiki ""Troy""
                  :name (n / name :op1 ""Troy""))
            :ARG1-of (r / replicate-01 :polarity -
                  :source (m / machine)
                  :destination (m2 / machine)))
      :ARG2 (v / virus
            :ARG1-of r))



",DiGraph with 12 nodes and 11 edges,replicate-01,machine,:source,replicate-01,machine,:source,r_6,r_6,m_8,m_8,inanimate
1578,0,458,"(a / and
      :op1 (c / convict-01
            :ARG1 (p / person :wiki ""Schapelle_Corby"" :name (n / name :op1 ""Schapelle"" :op2 ""Corby"")
                  :mod (c2 / country :wiki ""Australia"" :name (n2 / name :op1 ""Australia"")))
            :ARG2 (t / traffic-01
                  :ARG1 (m / marijuana)
                  :destination (i / island :wiki ""Bali"" :name (n3 / name :op1 ""Bali""))))
      :op2 (j / jail-01
            :ARG1 p
            :ARG2 (t2 / temporal-quantity :quant 20
                  :unit (y / year))))



","[{'LOC': 'Scha'}, {'PER': 'Co'}, {'MISC': 'rby'}, {'LOC': 'Scha'}, {'PER': 'Co'}, {'LOC': 'Australia'}, {'LOC': 'Australia'}, {'LOC': 'Bali'}, {'LOC': 'Bali'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'island'}]","(a / and
      :op1 (c / convict-01
            :ARG1 (p / person :wiki ""Schapelle_Corby"" :name (n / name :op1 ""Schapelle"" :op2 ""Corby"")
                  :mod (c2 / country :wiki ""Australia"" :name (n2 / name :op1 ""Australia"")))
            :ARG2 (t / traffic-01
                  :ARG1 (m / marijuana)
                  :destination (i / island :wiki ""Bali"" :name (n3 / name :op1 ""Bali""))))
      :op2 (j / jail-01
            :ARG1 p
            :ARG2 (t2 / temporal-quantity :quant 20
                  :unit (y / year))))



",DiGraph with 22 nodes and 21 edges,person,country,:mod,person,country,:mod,p_2,p_2,c2_7,c2_7,inanimate
1579,0,458,"(a / and
      :op1 (c / convict-01
            :ARG1 (p / person :wiki ""Schapelle_Corby"" :name (n / name :op1 ""Schapelle"" :op2 ""Corby"")
                  :mod (c2 / country :wiki ""Australia"" :name (n2 / name :op1 ""Australia"")))
            :ARG2 (t / traffic-01
                  :ARG1 (m / marijuana)
                  :destination (i / island :wiki ""Bali"" :name (n3 / name :op1 ""Bali""))))
      :op2 (j / jail-01
            :ARG1 p
            :ARG2 (t2 / temporal-quantity :quant 20
                  :unit (y / year))))



","[{'LOC': 'Scha'}, {'PER': 'Co'}, {'MISC': 'rby'}, {'LOC': 'Scha'}, {'PER': 'Co'}, {'LOC': 'Australia'}, {'LOC': 'Australia'}, {'LOC': 'Bali'}, {'LOC': 'Bali'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'island'}]","(a / and
      :op1 (c / convict-01
            :ARG1 (p / person :wiki ""Schapelle_Corby"" :name (n / name :op1 ""Schapelle"" :op2 ""Corby"")
                  :mod (c2 / country :wiki ""Australia"" :name (n2 / name :op1 ""Australia"")))
            :ARG2 (t / traffic-01
                  :ARG1 (m / marijuana)
                  :destination (i / island :wiki ""Bali"" :name (n3 / name :op1 ""Bali""))))
      :op2 (j / jail-01
            :ARG1 p
            :ARG2 (t2 / temporal-quantity :quant 20
                  :unit (y / year))))



",DiGraph with 22 nodes and 21 edges,traffic-01,island,:destination,traffic-01,island,:destination,t_11,t_11,i_13,i_13,inanimate
1580,0,459,"(i / insist-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country :wiki ""Spain""
                        :name (n / name :op1 ""Spain""))))
      :ARG1 (r / recommend-01
            :ARG1 (c2 / contrast-01
                  :ARG1 (n3 / name-01
                        :ARG1 (c3 / country :wiki ""United_Kingdom""
                              :name (n2 / name :op1 ""Great"" :op2 ""Britain""))
                        :location (t / thing
                              :ARG1-of (a / annex-01
                                    :destination (d / document))))
                  :ARG2 (n5 / name-01 :polarity -
                        :ARG1 (t2 / territory :wiki ""Gibraltar""
                              :name (n4 / name :op1 ""Gibraltar""))
                        :location t))))



","[{'LOC': 'Spain'}, {'LOC': 'Spain'}, {'LOC': 'United_Kingdom'}, {'MISC': 'Great'}, {'LOC': 'Britain'}, {'LOC': 'Gibraltar'}, {'LOC': 'Gibraltar'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'territory'}, {'W_Inanimate': 'location'}]","(i / insist-01
      :ARG0 (g / government-organization
            :ARG0-of (g2 / govern-01
                  :ARG1 (c / country :wiki ""Spain""
                        :name (n / name :op1 ""Spain""))))
      :ARG1 (r / recommend-01
            :ARG1 (c2 / contrast-01
                  :ARG1 (n3 / name-01
                        :ARG1 (c3 / country :wiki ""United_Kingdom""
                              :name (n2 / name :op1 ""Great"" :op2 ""Britain""))
                        :location (t / thing
                              :ARG1-of (a / annex-01
                                    :destination (d / document))))
                  :ARG2 (n5 / name-01 :polarity -
                        :ARG1 (t2 / territory :wiki ""Gibraltar""
                              :name (n4 / name :op1 ""Gibraltar""))
                        :location t))))



",DiGraph with 25 nodes and 24 edges,annex-01,document,:destination,annex-01,document,:destination,a_16,a_16,d_17,d_17,inanimate
1581,0,460,"(s / speak-01
      :ARG0 (p / person :wiki ""Roh_Moo-hyun""
            :name (n / name :op1 ""Roh"" :op2 ""Moo-hyun""))
      :time (f / fly-01
            :ARG1 (d / delegation
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 (c / country :wiki ""South_Korea""
                                    :name (n2 / name :op1 ""South"" :op2 ""Korea"")))))
            :destination (c2 / city :wiki ""Pyongyang""
                  :name (n3 / name :op1 ""Pyongyang""))
            :purpose (t / talk-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (m / minister)))
                  :ord (o / ordinal-entity :value 1
                        :range (t2 / temporal-quantity :quant 7
                              :unit (m2 / month))))))



","[{'MISC': 'Roh'}, {'MISC': 'Moo'}, {'MISC': 'R'}, {'MISC': 'Mo'}, {'LOC': 'South_Korea'}, {'LOC': 'South'}, {'LOC': 'Korea'}, {'LOC': 'Pyongyang'}, {'LOC': 'P'}, {'LOC': 'yongyang'}, {'B_human': 'person'}, {'B_human': 'minister'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}]","(s / speak-01
      :ARG0 (p / person :wiki ""Roh_Moo-hyun""
            :name (n / name :op1 ""Roh"" :op2 ""Moo-hyun""))
      :time (f / fly-01
            :ARG1 (d / delegation
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 (c / country :wiki ""South_Korea""
                                    :name (n2 / name :op1 ""South"" :op2 ""Korea"")))))
            :destination (c2 / city :wiki ""Pyongyang""
                  :name (n3 / name :op1 ""Pyongyang""))
            :purpose (t / talk-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (m / minister)))
                  :ord (o / ordinal-entity :value 1
                        :range (t2 / temporal-quantity :quant 7
                              :unit (m2 / month))))))



",DiGraph with 28 nodes and 27 edges,delegation,government-organization,:mod,delegation,government-organization,:mod,d_7,d_7,g_8,g_8,inanimate
1582,0,460,"(s / speak-01
      :ARG0 (p / person :wiki ""Roh_Moo-hyun""
            :name (n / name :op1 ""Roh"" :op2 ""Moo-hyun""))
      :time (f / fly-01
            :ARG1 (d / delegation
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 (c / country :wiki ""South_Korea""
                                    :name (n2 / name :op1 ""South"" :op2 ""Korea"")))))
            :destination (c2 / city :wiki ""Pyongyang""
                  :name (n3 / name :op1 ""Pyongyang""))
            :purpose (t / talk-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (m / minister)))
                  :ord (o / ordinal-entity :value 1
                        :range (t2 / temporal-quantity :quant 7
                              :unit (m2 / month))))))



","[{'MISC': 'Roh'}, {'MISC': 'Moo'}, {'MISC': 'R'}, {'MISC': 'Mo'}, {'LOC': 'South_Korea'}, {'LOC': 'South'}, {'LOC': 'Korea'}, {'LOC': 'Pyongyang'}, {'LOC': 'P'}, {'LOC': 'yongyang'}, {'B_human': 'person'}, {'B_human': 'minister'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'city'}]","(s / speak-01
      :ARG0 (p / person :wiki ""Roh_Moo-hyun""
            :name (n / name :op1 ""Roh"" :op2 ""Moo-hyun""))
      :time (f / fly-01
            :ARG1 (d / delegation
                  :mod (g / government-organization
                        :ARG0-of (g2 / govern-01
                              :ARG1 (c / country :wiki ""South_Korea""
                                    :name (n2 / name :op1 ""South"" :op2 ""Korea"")))))
            :destination (c2 / city :wiki ""Pyongyang""
                  :name (n3 / name :op1 ""Pyongyang""))
            :purpose (t / talk-01
                  :ARG0 (p2 / person
                        :ARG0-of (h / have-org-role-91
                              :ARG2 (m / minister)))
                  :ord (o / ordinal-entity :value 1
                        :range (t2 / temporal-quantity :quant 7
                              :unit (m2 / month))))))



",DiGraph with 28 nodes and 27 edges,fly-01,city,:destination,fly-01,city,:destination,f_6,f_6,c2_15,c2_15,inanimate
1583,0,461,"(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



",DiGraph with 13 nodes and 12 edges,force,country,:mod,force,country,:mod,f_2,f_2,c_4,c_4,inanimate
1584,0,461,"(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



",DiGraph with 13 nodes and 12 edges,missile,surface,:destination,missile,surface,:source,m_7,m_7,s2_9,s_8,inanimate
1585,0,461,"(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



","[{'LOC': 'Thailand'}, {'LOC': 'Thailand'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(h / have-03 :polarity -
      :ARG0 (f / force
            :ARG1-of (a / arm-01)
            :mod (c / country :wiki ""Thailand"" :name (n / name :op1 ""Thailand"")))
      :ARG1 (m / missile
            :source (s / surface)
            :destination (s2 / surface))
      :time (c2 / current)
      :location (i / inventory
            :poss f))



",DiGraph with 13 nodes and 12 edges,missile,surface,:source,missile,surface,:source,m_7,m_7,s_8,s_8,inanimate
1586,0,462,"(r / refuse-01
      :ARG0 (p3 / person
            :ARG0-of (p / pilot-01))
      :ARG1 (a / allow-01
            :ARG0 p
            :ARG1 (m / man
                  :ARG1-of (b / bear-02
                        :location (c / country :wiki ""Pakistan""
                              :name (n / name :op1 ""Pakistan""))))
            :destination (p2 / plane
                  :poss p)))



","[{'LOC': 'Pakistan'}, {'LOC': 'Pakistan'}, {'B_human': 'person'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(r / refuse-01
      :ARG0 (p3 / person
            :ARG0-of (p / pilot-01))
      :ARG1 (a / allow-01
            :ARG0 p
            :ARG1 (m / man
                  :ARG1-of (b / bear-02
                        :location (c / country :wiki ""Pakistan""
                              :name (n / name :op1 ""Pakistan""))))
            :destination (p2 / plane
                  :poss p)))



",DiGraph with 13 nodes and 12 edges,allow-01,plane,:destination,allow-01,plane,:destination,a_3,a_3,p2_11,p2_11,inanimate
1587,0,463,"(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,research-01,military,:mod,research-01,military,:mod,r_5,r_5,m_6,m_6,inanimate
1588,0,463,"(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,mainland,c,:mod,mainland,c,:mod,m3_19,m3_19,c_20,c_20,inanimate
1589,0,463,"(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(s / step-up-03
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s2 / surprise-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c2
                        :ARG1 (m2 / missile)
                        :path (o2 / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i / into
                              :op1 (o / ocean :wiki ""Pacific_Ocean""
                                    :name (n4 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,fire-01,into,:destination,fire-01,into,:destination,f_15,f_15,i_21,i_21,inanimate
1590,0,464,"(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,research-01,military,:mod,research-01,military,:mod,r_5,r_5,m_6,m_6,inanimate
1591,0,464,"(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,mainland,c,:mod,mainland,c,,m3_19,m3_19,c_20,c_16,inanimate
1592,0,464,"(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



","[{'LOC': 'Japan'}, {'LOC': 'Japan'}, {'LOC': 'North_Korea'}, {'LOC': 'North'}, {'LOC': 'Korea'}, {'LOC': 'Pacific_Ocean'}, {'LOC': 'Pacific'}, {'LOC': 'Ocean'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'ocean'}]","(i / increase-01
      :ARG0 (c / country :wiki ""Japan""
            :name (n / name :op1 ""Japan""))
      :ARG1 (r / research-01
            :mod (m / military))
      :time (a / after
            :op1 (s / stun-01
                  :ARG0 (c2 / country :wiki ""North_Korea""
                        :name (n2 / name :op1 ""North"" :op2 ""Korea""))
                  :ARG1 (w / world)
                  :ARG2 (f / fire-01
                        :ARG0 c
                        :ARG1 (m2 / missile)
                        :path (o / over
                              :op1 (m3 / mainland
                                    :mod c))
                        :destination (i2 / into
                              :op1 (o2 / ocean :wiki ""Pacific_Ocean""
                                    :name (n3 / name :op1 ""Pacific"" :op2 ""Ocean""))))
                  :time (d / date-entity :year 1998))))



",DiGraph with 29 nodes and 28 edges,fire-01,into,:destination,fire-01,into,:destination,f_15,f_15,i2_21,i2_21,inanimate
1593,0,465,"(d2 / deport-01
      :ARG1 (p / person :wiki -
            :name (n / name :op1 ""Krasniqi""))
      :destination (c / country :wiki ""Albania""
            :name (n2 / name :op1 ""Albania""))
      :time (d / date-entity :day 20 :month 10 :year 2003))



","[{'LOC': 'Krasniqi'}, {'LOC': 'Albania'}, {'LOC': 'Albania'}, {'W_Animate': 'person'}, {'W_Inanimate': 'country'}]","(d2 / deport-01
      :ARG1 (p / person :wiki -
            :name (n / name :op1 ""Krasniqi""))
      :destination (c / country :wiki ""Albania""
            :name (n2 / name :op1 ""Albania""))
      :time (d / date-entity :day 20 :month 10 :year 2003))



",DiGraph with 13 nodes and 12 edges,deport-01,country,:destination,deport-01,country,:destination,d2_0,d2_0,c_5,c_5,inanimate
1594,0,466,"(s / state-01
      :ARG0 (g / group :wiki ""AfriForum""
            :name (n / name :op1 ""Afriforum""))
      :ARG1 (o / organize-01
            :ARG0 g
            :ARG1 (p / protest-01
                  :location (a / along
                        :op1 (r / route
                              :destination (c / country :wiki ""Zimbabwe""
                                    :name (n2 / name :op1 ""Zimbabwe"")))))))



","[{'MISC': 'A'}, {'MISC': 'Forum'}, {'MISC': 'A'}, {'LOC': 'Zimbabwe'}, {'LOC': 'Zimbabwe'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}]","(s / state-01
      :ARG0 (g / group :wiki ""AfriForum""
            :name (n / name :op1 ""Afriforum""))
      :ARG1 (o / organize-01
            :ARG0 g
            :ARG1 (p / protest-01
                  :location (a / along
                        :op1 (r / route
                              :destination (c / country :wiki ""Zimbabwe""
                                    :name (n2 / name :op1 ""Zimbabwe"")))))))



",DiGraph with 14 nodes and 13 edges,route,country,:destination,route,country,:destination,r_9,r_9,c_10,c_10,inanimate
1595,0,467,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Thomas"" :op2 ""Olsson""))
      :ARG1 (e / examine-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization :wiki ""Al-Barakat"" :name (n2 / name :op1 ""Al-Barakaat"" :op2 ""International""))
                        :ARG2 (l / lawyer)))
            :ARG1 (w / way
                  :instrument-of (h2 / have-04
                        :ARG0 p3
                        :ARG1 (r / release-01
                              :ARG1 (a / asset)
                              :destination (p2 / person
                                    :mod (c / country :wiki ""Somalia"" :name (n3 / name :op1 ""Somalia""))
                                    :location (c2 / country :wiki ""Sweden"" :name (n4 / name :op1 ""Sweden""))
                                    :ARG0-of (u / use-01
                                          :ARG1 (n5 / network)
                                          :ARG2 (s2 / send-01
                                                :ARG0 p2
                                                :ARG1 (f / fund)
                                                :ARG2 (p4 / person
                                                      :location c
                                                      :ARG0-of (h3 / have-rel-role-91
                                                            :ARG2 (r2 / relative)))))
                                    :ARG0-of (i / immigrate-01)))))
            :time (n6 / now)))



","[{'PER': 'Thomas'}, {'PER': 'O'}, {'PER': 'lsson'}, {'ORG': 'Al-Barakat'}, {'LOC': 'Al-'}, {'ORG': 'Bar'}, {'LOC': 'akaat'}, {'LOC': 'Somalia'}, {'LOC': 'Somalia'}, {'LOC': 'Sweden'}, {'LOC': 'Sweden'}, {'B_human': 'person'}, {'B_human': 'lawyer'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Thomas"" :op2 ""Olsson""))
      :ARG1 (e / examine-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization :wiki ""Al-Barakat"" :name (n2 / name :op1 ""Al-Barakaat"" :op2 ""International""))
                        :ARG2 (l / lawyer)))
            :ARG1 (w / way
                  :instrument-of (h2 / have-04
                        :ARG0 p3
                        :ARG1 (r / release-01
                              :ARG1 (a / asset)
                              :destination (p2 / person
                                    :mod (c / country :wiki ""Somalia"" :name (n3 / name :op1 ""Somalia""))
                                    :location (c2 / country :wiki ""Sweden"" :name (n4 / name :op1 ""Sweden""))
                                    :ARG0-of (u / use-01
                                          :ARG1 (n5 / network)
                                          :ARG2 (s2 / send-01
                                                :ARG0 p2
                                                :ARG1 (f / fund)
                                                :ARG2 (p4 / person
                                                      :location c
                                                      :ARG0-of (h3 / have-rel-role-91
                                                            :ARG2 (r2 / relative)))))
                                    :ARG0-of (i / immigrate-01)))))
            :time (n6 / now)))



",DiGraph with 40 nodes and 39 edges,person,country,:mod,person,country,,p2_20,p_1,c_21,c_21,inanimate
1596,0,467,"(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Thomas"" :op2 ""Olsson""))
      :ARG1 (e / examine-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization :wiki ""Al-Barakat"" :name (n2 / name :op1 ""Al-Barakaat"" :op2 ""International""))
                        :ARG2 (l / lawyer)))
            :ARG1 (w / way
                  :instrument-of (h2 / have-04
                        :ARG0 p3
                        :ARG1 (r / release-01
                              :ARG1 (a / asset)
                              :destination (p2 / person
                                    :mod (c / country :wiki ""Somalia"" :name (n3 / name :op1 ""Somalia""))
                                    :location (c2 / country :wiki ""Sweden"" :name (n4 / name :op1 ""Sweden""))
                                    :ARG0-of (u / use-01
                                          :ARG1 (n5 / network)
                                          :ARG2 (s2 / send-01
                                                :ARG0 p2
                                                :ARG1 (f / fund)
                                                :ARG2 (p4 / person
                                                      :location c
                                                      :ARG0-of (h3 / have-rel-role-91
                                                            :ARG2 (r2 / relative)))))
                                    :ARG0-of (i / immigrate-01)))))
            :time (n6 / now)))



","[{'PER': 'Thomas'}, {'PER': 'O'}, {'PER': 'lsson'}, {'ORG': 'Al-Barakat'}, {'LOC': 'Al-'}, {'ORG': 'Bar'}, {'LOC': 'akaat'}, {'LOC': 'Somalia'}, {'LOC': 'Somalia'}, {'LOC': 'Sweden'}, {'LOC': 'Sweden'}, {'B_human': 'person'}, {'B_human': 'lawyer'}, {'B_human': 'person'}, {'B_human': 'person'}, {'PER': 'i'}, {'W_Animate': 'person'}, {'W_Animate': 'organization'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'location'}]","(s / state-01
      :ARG0 (p / person :wiki - :name (n / name :op1 ""Thomas"" :op2 ""Olsson""))
      :ARG1 (e / examine-01
            :ARG0 (p3 / person
                  :ARG0-of (h / have-org-role-91
                        :ARG1 (o / organization :wiki ""Al-Barakat"" :name (n2 / name :op1 ""Al-Barakaat"" :op2 ""International""))
                        :ARG2 (l / lawyer)))
            :ARG1 (w / way
                  :instrument-of (h2 / have-04
                        :ARG0 p3
                        :ARG1 (r / release-01
                              :ARG1 (a / asset)
                              :destination (p2 / person
                                    :mod (c / country :wiki ""Somalia"" :name (n3 / name :op1 ""Somalia""))
                                    :location (c2 / country :wiki ""Sweden"" :name (n4 / name :op1 ""Sweden""))
                                    :ARG0-of (u / use-01
                                          :ARG1 (n5 / network)
                                          :ARG2 (s2 / send-01
                                                :ARG0 p2
                                                :ARG1 (f / fund)
                                                :ARG2 (p4 / person
                                                      :location c
                                                      :ARG0-of (h3 / have-rel-role-91
                                                            :ARG2 (r2 / relative)))))
                                    :ARG0-of (i / immigrate-01)))))
            :time (n6 / now)))



",DiGraph with 40 nodes and 39 edges,release-01,person,:destination,release-01,person,,r_18,r_18,p2_20,p_1,animate
1597,0,468,"(i / indicate-01
      :ARG0 (i2 / incursion
            :mod (m / military)
            :poss (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
            :destination (c2 / country :wiki ""Georgia_(country)"" :name (n2 / name :op1 ""Georgia"")))
      :ARG1 (a / and
            :op1 (c3 / confidence
                  :poss c)
            :op2 (r / resolve-02
                  :ARG0 c)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Georgia'}, {'LOC': 'Georgia'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(i / indicate-01
      :ARG0 (i2 / incursion
            :mod (m / military)
            :poss (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
            :destination (c2 / country :wiki ""Georgia_(country)"" :name (n2 / name :op1 ""Georgia"")))
      :ARG1 (a / and
            :op1 (c3 / confidence
                  :poss c)
            :op2 (r / resolve-02
                  :ARG0 c)))



",DiGraph with 16 nodes and 15 edges,incursion,military,:mod,incursion,military,:mod,i2_1,i2_1,m_2,m_2,inanimate
1598,0,468,"(i / indicate-01
      :ARG0 (i2 / incursion
            :mod (m / military)
            :poss (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
            :destination (c2 / country :wiki ""Georgia_(country)"" :name (n2 / name :op1 ""Georgia"")))
      :ARG1 (a / and
            :op1 (c3 / confidence
                  :poss c)
            :op2 (r / resolve-02
                  :ARG0 c)))



","[{'LOC': 'Russia'}, {'LOC': 'Russia'}, {'LOC': 'Georgia'}, {'LOC': 'Georgia'}, {'PER': 'i'}, {'W_Inanimate': 'country'}, {'W_Inanimate': 'country'}]","(i / indicate-01
      :ARG0 (i2 / incursion
            :mod (m / military)
            :poss (c / country :wiki ""Russia"" :name (n / name :op1 ""Russia""))
            :destination (c2 / country :wiki ""Georgia_(country)"" :name (n2 / name :op1 ""Georgia"")))
      :ARG1 (a / and
            :op1 (c3 / confidence
                  :poss c)
            :op2 (r / resolve-02
                  :ARG0 c)))



",DiGraph with 16 nodes and 15 edges,incursion,country,:destination,incursion,country,:poss,i2_1,i2_1,c2_7,c_3,inanimate
1599,0,469,"(a / and
      :op1 (w / white-03
            :ARG1 t)
      :op2 (s / soft-02
            :ARG1 (t / tofu
                  :ARG1-of (d / dry-02)))
      :ARG1-of (r / resemble-01
            :ARG2 (t2 / tofu
                  :ARG1-of (m / make-01
                        :manner (f / fresh-04))))
      :time (a2 / and
            :op1 (c / come-01
                  :ARG1 (i / i)
                  :destination (b / back))
            :op2 (l / look-01
                  :ARG0 i)))



",[{'PER': 'i'}],"(a / and
      :op1 (w / white-03
            :ARG1 t)
      :op2 (s / soft-02
            :ARG1 (t / tofu
                  :ARG1-of (d / dry-02)))
      :ARG1-of (r / resemble-01
            :ARG2 (t2 / tofu
                  :ARG1-of (m / make-01
                        :manner (f / fresh-04))))
      :time (a2 / and
            :op1 (c / come-01
                  :ARG1 (i / i)
                  :destination (b / back))
            :op2 (l / look-01
                  :ARG0 i)))



",DiGraph with 16 nodes and 15 edges,come-01,back,:destination,come-01,back,:destination,c_11,c_11,b_13,b_13,inanimate
